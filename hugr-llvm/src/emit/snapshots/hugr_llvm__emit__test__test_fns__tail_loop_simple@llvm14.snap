---
source: hugr-llvm/src/emit/test.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

define { {} } @_hl.main.1(i64 %0) {
alloca_block:
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  br label %loop_body

loop_body:                                        ; preds = %4, %entry_block
  %"5_0.0" = phi i64 [ %0, %entry_block ], [ %6, %4 ]
  %1 = insertvalue { i64 } undef, i64 %"5_0.0", 0
  %2 = insertvalue { i32, { i64 }, { { {} } } } { i32 0, { i64 } poison, { { {} } } poison }, { i64 } %1, 1
  %3 = extractvalue { i32, { i64 }, { { {} } } } %2, 0
  switch i32 %3, label %4 [
    i32 1, label %7
  ]

4:                                                ; preds = %loop_body
  %5 = extractvalue { i32, { i64 }, { { {} } } } %2, 1
  %6 = extractvalue { i64 } %5, 0
  br label %loop_body

7:                                                ; preds = %loop_body
  %8 = extractvalue { i32, { i64 }, { { {} } } } %2, 2
  %9 = extractvalue { { {} } } %8, 0
  br label %loop_out

loop_out:                                         ; preds = %7
  ret { {} } %9
}
