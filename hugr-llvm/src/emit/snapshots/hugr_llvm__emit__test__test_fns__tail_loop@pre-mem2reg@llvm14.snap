---
source: hugr-llvm/src/emit/test.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

define i64 @_hl.main.1() {
alloca_block:
  %"0" = alloca i64, align 8
  %"7_0" = alloca i64, align 8
  %"5_0" = alloca i64, align 8
  %"8_0" = alloca i64, align 8
  %"9_0" = alloca i64, align 8
  %"9_1" = alloca i64, align 8
  %"17_0" = alloca { i1, i64 }, align 8
  %"16_0" = alloca i64, align 8
  %"15_0" = alloca i64, align 8
  %"12_0" = alloca i64, align 8
  %"13_0" = alloca i1, align 1
  %"019" = alloca { i1, i64 }, align 8
  %"021" = alloca i64, align 8
  %"23_0" = alloca i64, align 8
  %"20_0" = alloca i64, align 8
  %"24_0" = alloca i64, align 8
  %"25_0" = alloca { i1, i64 }, align 8
  %"030" = alloca i64, align 8
  %"29_0" = alloca { i1, i64 }, align 8
  %"27_0" = alloca i64, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store i64 7, i64* %"7_0", align 4
  store i64 3, i64* %"5_0", align 4
  %"5_01" = load i64, i64* %"5_0", align 4
  %"7_02" = load i64, i64* %"7_0", align 4
  %"5_03" = load i64, i64* %"5_0", align 4
  %"7_04" = load i64, i64* %"7_0", align 4
  store i64 %"5_03", i64* %"9_0", align 4
  store i64 %"7_04", i64* %"9_1", align 4
  br label %loop_body

loop_body:                                        ; preds = %8, %entry_block
  %"9_05" = load i64, i64* %"9_0", align 4
  %"9_16" = load i64, i64* %"9_1", align 4
  store i64 2, i64* %"15_0", align 4
  store i64 0, i64* %"12_0", align 4
  store i64 %"9_05", i64* %"9_0", align 4
  store i64 %"9_16", i64* %"9_1", align 4
  %"9_17" = load i64, i64* %"9_1", align 4
  %"15_08" = load i64, i64* %"15_0", align 4
  %"9_19" = load i64, i64* %"9_1", align 4
  %"15_010" = load i64, i64* %"15_0", align 4
  %0 = mul i64 %"9_19", %"15_010"
  store i64 %0, i64* %"16_0", align 4
  %"9_011" = load i64, i64* %"9_0", align 4
  %"12_012" = load i64, i64* %"12_0", align 4
  %"9_013" = load i64, i64* %"9_0", align 4
  %"12_014" = load i64, i64* %"12_0", align 4
  %1 = icmp eq i64 %"9_013", %"12_014"
  %2 = select i1 %1, i1 true, i1 false
  store i1 %2, i1* %"13_0", align 1
  %"13_015" = load i1, i1* %"13_0", align 1
  %"9_016" = load i64, i64* %"9_0", align 4
  %"13_017" = load i1, i1* %"13_0", align 1
  %"9_018" = load i64, i64* %"9_0", align 4
  switch i1 %"13_017", label %3 [
    i1 true, label %4
  ]

3:                                                ; preds = %loop_body
  store i64 %"9_018", i64* %"021", align 4
  br label %cond_17_case_0

4:                                                ; preds = %loop_body
  store i64 %"9_018", i64* %"030", align 4
  br label %cond_17_case_1

loop_out:                                         ; preds = %10
  %"8_037" = load i64, i64* %"8_0", align 4
  store i64 %"8_037", i64* %"0", align 4
  %"038" = load i64, i64* %"0", align 4
  ret i64 %"038"

cond_17_case_0:                                   ; preds = %3
  %"022" = load i64, i64* %"021", align 4
  store i64 1, i64* %"23_0", align 4
  store i64 %"022", i64* %"20_0", align 4
  %"20_023" = load i64, i64* %"20_0", align 4
  %"23_024" = load i64, i64* %"23_0", align 4
  %"20_025" = load i64, i64* %"20_0", align 4
  %"23_026" = load i64, i64* %"23_0", align 4
  %5 = sub i64 %"20_025", %"23_026"
  store i64 %5, i64* %"24_0", align 4
  %"24_027" = load i64, i64* %"24_0", align 4
  %"24_028" = load i64, i64* %"24_0", align 4
  %6 = insertvalue { i1, i64 } { i1 false, i64 poison }, i64 %"24_028", 1
  store { i1, i64 } %6, { i1, i64 }* %"25_0", align 4
  %"25_029" = load { i1, i64 }, { i1, i64 }* %"25_0", align 4
  store { i1, i64 } %"25_029", { i1, i64 }* %"019", align 4
  br label %cond_exit_17

cond_17_case_1:                                   ; preds = %4
  %"031" = load i64, i64* %"030", align 4
  store { i1, i64 } { i1 true, i64 poison }, { i1, i64 }* %"29_0", align 4
  %"29_032" = load { i1, i64 }, { i1, i64 }* %"29_0", align 4
  store { i1, i64 } %"29_032", { i1, i64 }* %"019", align 4
  store i64 %"031", i64* %"27_0", align 4
  br label %cond_exit_17

cond_exit_17:                                     ; preds = %cond_17_case_1, %cond_17_case_0
  %"020" = load { i1, i64 }, { i1, i64 }* %"019", align 4
  store { i1, i64 } %"020", { i1, i64 }* %"17_0", align 4
  %"17_033" = load { i1, i64 }, { i1, i64 }* %"17_0", align 4
  %"16_034" = load i64, i64* %"16_0", align 4
  store { i1, i64 } %"17_033", { i1, i64 }* %"17_0", align 4
  store i64 %"16_034", i64* %"16_0", align 4
  %"17_035" = load { i1, i64 }, { i1, i64 }* %"17_0", align 4
  %"16_036" = load i64, i64* %"16_0", align 4
  %7 = extractvalue { i1, i64 } %"17_035", 0
  switch i1 %7, label %8 [
    i1 true, label %10
  ]

8:                                                ; preds = %cond_exit_17
  %9 = extractvalue { i1, i64 } %"17_035", 1
  store i64 %9, i64* %"9_0", align 4
  store i64 %"16_036", i64* %"9_1", align 4
  br label %loop_body

10:                                               ; preds = %cond_exit_17
  store i64 %"16_036", i64* %"8_0", align 4
  br label %loop_out
}
