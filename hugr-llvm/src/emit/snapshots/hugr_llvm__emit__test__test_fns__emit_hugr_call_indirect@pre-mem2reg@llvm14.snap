---
source: hugr-llvm/src/emit/test.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

define void @_hl.main_void.1() {
alloca_block:
  %"4_0" = alloca void ()*, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store void ()* @_hl.main_void.1, void ()** %"4_0", align 8
  %"4_01" = load void ()*, void ()** %"4_0", align 8
  call void %"4_01"()
  ret void
}

define i1 @_hl.main_unary.6(i1 %0) {
alloca_block:
  %"0" = alloca i1, align 1
  %"9_0" = alloca i1 (i1)*, align 8
  %"7_0" = alloca i1, align 1
  %"10_0" = alloca i1, align 1
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store i1 (i1)* @_hl.main_unary.6, i1 (i1)** %"9_0", align 8
  store i1 %0, i1* %"7_0", align 1
  %"9_01" = load i1 (i1)*, i1 (i1)** %"9_0", align 8
  %"7_02" = load i1, i1* %"7_0", align 1
  %1 = call i1 %"9_01"(i1 %"7_02")
  store i1 %1, i1* %"10_0", align 1
  %"10_03" = load i1, i1* %"10_0", align 1
  store i1 %"10_03", i1* %"0", align 1
  %"04" = load i1, i1* %"0", align 1
  ret i1 %"04"
}

define { i1, i1 } @_hl.main_binary.11(i1 %0, i1 %1) {
alloca_block:
  %"0" = alloca i1, align 1
  %"1" = alloca i1, align 1
  %"14_0" = alloca { i1, i1 } (i1, i1)*, align 8
  %"12_0" = alloca i1, align 1
  %"12_1" = alloca i1, align 1
  %"15_0" = alloca i1, align 1
  %"15_1" = alloca i1, align 1
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { i1, i1 } (i1, i1)* @_hl.main_binary.11, { i1, i1 } (i1, i1)** %"14_0", align 8
  store i1 %0, i1* %"12_0", align 1
  store i1 %1, i1* %"12_1", align 1
  %"14_01" = load { i1, i1 } (i1, i1)*, { i1, i1 } (i1, i1)** %"14_0", align 8
  %"12_02" = load i1, i1* %"12_0", align 1
  %"12_13" = load i1, i1* %"12_1", align 1
  %2 = call { i1, i1 } %"14_01"(i1 %"12_02", i1 %"12_13")
  %3 = extractvalue { i1, i1 } %2, 0
  %4 = extractvalue { i1, i1 } %2, 1
  store i1 %3, i1* %"15_0", align 1
  store i1 %4, i1* %"15_1", align 1
  %"15_04" = load i1, i1* %"15_0", align 1
  %"15_15" = load i1, i1* %"15_1", align 1
  store i1 %"15_04", i1* %"0", align 1
  store i1 %"15_15", i1* %"1", align 1
  %"06" = load i1, i1* %"0", align 1
  %"17" = load i1, i1* %"1", align 1
  %mrv = insertvalue { i1, i1 } undef, i1 %"06", 0
  %mrv8 = insertvalue { i1, i1 } %mrv, i1 %"17", 1
  ret { i1, i1 } %mrv8
}
