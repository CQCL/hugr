---
source: hugr-llvm/src/emit/test.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

define void @_hl.main_void.1() {
alloca_block:
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  call void @_hl.main_void.1()
  ret void
}

define i1 @_hl.main_unary.5(i1 %0) {
alloca_block:
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  %1 = call i1 @_hl.main_unary.5(i1 %0)
  ret i1 %1
}

define { i1, i1 } @_hl.main_binary.9(i1 %0, i1 %1) {
alloca_block:
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  %2 = call { i1, i1 } @_hl.main_binary.9(i1 %0, i1 %1)
  %3 = extractvalue { i1, i1 } %2, 0
  %4 = extractvalue { i1, i1 } %2, 1
  %mrv = insertvalue { i1, i1 } undef, i1 %3, 0
  %mrv13 = insertvalue { i1, i1 } %mrv, i1 %4, 1
  ret { i1, i1 } %mrv13
}
