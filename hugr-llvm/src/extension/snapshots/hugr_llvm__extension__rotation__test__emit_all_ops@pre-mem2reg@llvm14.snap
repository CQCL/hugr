---
source: src/extension/rotation.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@0 = private unnamed_addr constant [47 x i8] c"tket2.rotation.from_halfturns_unchecked failed\00", align 1
@prelude.panic_template = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@1 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.1 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1

define void @_hl.main.1(double %0) {
alloca_block:
  %"2_0" = alloca double, align 8
  %"4_0" = alloca double, align 8
  %"5_0" = alloca double, align 8
  %"6_0" = alloca { i32, {}, { double } }, align 8
  %"7_0" = alloca double, align 8
  %"0" = alloca double, align 8
  %"12_0" = alloca { i32, i8* }, align 8
  %"13_0" = alloca double, align 8
  %"08" = alloca double, align 8
  %"15_0" = alloca double, align 8
  %"17_0" = alloca double, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store double %0, double* %"2_0", align 8
  %"2_01" = load double, double* %"2_0", align 8
  %1 = fcmp oeq double %"2_01", 0x7FF0000000000000
  %2 = fcmp oeq double %"2_01", 0xFFF0000000000000
  %3 = fcmp uno double %"2_01", 0.000000e+00
  %4 = or i1 %1, %2
  %5 = or i1 %4, %3
  %6 = xor i1 %5, true
  br i1 %6, label %9, label %7

7:                                                ; preds = %entry_block
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @0, i32 0, i32 0))
  call void @abort()
  unreachable

9:                                                ; preds = %entry_block
  store double %"2_01", double* %"4_0", align 8
  %"4_02" = load double, double* %"4_0", align 8
  store double %"4_02", double* %"5_0", align 8
  %"5_03" = load double, double* %"5_0", align 8
  %10 = fcmp oeq double %"5_03", 0x7FF0000000000000
  %11 = fcmp oeq double %"5_03", 0xFFF0000000000000
  %12 = fcmp uno double %"5_03", 0.000000e+00
  %13 = or i1 %10, %11
  %14 = or i1 %13, %12
  %15 = xor i1 %14, true
  %16 = insertvalue { double } undef, double %"5_03", 0
  %17 = insertvalue { i32, {}, { double } } { i32 1, {} poison, { double } poison }, { double } %16, 2
  %18 = select i1 %15, { i32, {}, { double } } %17, { i32, {}, { double } } { i32 0, {} undef, { double } poison }
  store { i32, {}, { double } } %18, { i32, {}, { double } }* %"6_0", align 8
  %"6_04" = load { i32, {}, { double } }, { i32, {}, { double } }* %"6_0", align 8
  %19 = extractvalue { i32, {}, { double } } %"6_04", 0
  switch i32 %19, label %20 [
    i32 1, label %22
  ]

20:                                               ; preds = %9
  %21 = extractvalue { i32, {}, { double } } %"6_04", 1
  br label %cond_7_case_0

22:                                               ; preds = %9
  %23 = extractvalue { i32, {}, { double } } %"6_04", 2
  %24 = extractvalue { double } %23, 0
  store double %24, double* %"08", align 8
  br label %cond_7_case_1

cond_7_case_0:                                    ; preds = %20
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, { i32, i8* }* %"12_0", align 8
  %"12_06" = load { i32, i8* }, { i32, i8* }* %"12_0", align 8
  %25 = extractvalue { i32, i8* } %"12_06", 0
  %26 = extractvalue { i32, i8* } %"12_06", 1
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.1, i32 0, i32 0), i32 %25, i8* %26)
  call void @abort()
  store double 0.000000e+00, double* %"13_0", align 8
  %"13_07" = load double, double* %"13_0", align 8
  store double %"13_07", double* %"0", align 8
  br label %cond_exit_7

cond_7_case_1:                                    ; preds = %22
  %"09" = load double, double* %"08", align 8
  store double %"09", double* %"15_0", align 8
  %"15_010" = load double, double* %"15_0", align 8
  store double %"15_010", double* %"0", align 8
  br label %cond_exit_7

cond_exit_7:                                      ; preds = %cond_7_case_1, %cond_7_case_0
  %"05" = load double, double* %"0", align 8
  store double %"05", double* %"7_0", align 8
  %"4_011" = load double, double* %"4_0", align 8
  %"7_012" = load double, double* %"7_0", align 8
  %28 = fadd double %"4_011", %"7_012"
  store double %28, double* %"17_0", align 8
  ret void
}

declare i32 @printf(i8*, ...)

declare void @abort()
