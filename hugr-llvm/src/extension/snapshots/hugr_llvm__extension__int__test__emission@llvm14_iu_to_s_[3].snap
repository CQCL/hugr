---
source: hugr-llvm/src/extension/int.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@0 = private unnamed_addr constant [31 x i8] c"iu_to_s argument out of bounds\00", align 1
@prelude.panic_template = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1

define private i8 @_hl.main.1(i8 %0) {
alloca_block:
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  %bounds_check = icmp ule i8 %0, 127
  br label %panic_if_0

panic_if_0:                                       ; preds = %entry_block
  switch i1 %bounds_check, label %panic [
    i1 true, label %exit
  ]

panic:                                            ; preds = %panic_if_0
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @0, i32 0, i32 0))
  call void @abort()
  br label %exit

exit:                                             ; preds = %panic_if_0, %panic
  ret i8 %0
}

declare i32 @printf(i8*, ...)

declare void @abort()
