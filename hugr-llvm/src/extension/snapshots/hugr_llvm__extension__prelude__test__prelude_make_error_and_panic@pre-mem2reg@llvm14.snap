---
source: hugr-llvm/src/extension/prelude.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@0 = private unnamed_addr constant [7 x i8] c"Error!\00", align 1
@prelude.panic_template = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1

define void @_hl.main.1() {
alloca_block:
  %"7_0" = alloca i8*, align 8
  %"5_0" = alloca i64, align 8
  %"8_0" = alloca { i32, i8* }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @0, i32 0, i32 0), i8** %"7_0", align 8
  store i64 100, i64* %"5_0", align 4
  %"5_01" = load i64, i64* %"5_0", align 4
  %"7_02" = load i8*, i8** %"7_0", align 8
  %0 = trunc i64 %"5_01" to i32
  %1 = insertvalue { i32, i8* } undef, i32 %0, 0
  %2 = insertvalue { i32, i8* } %1, i8* %"7_02", 1
  store { i32, i8* } %2, { i32, i8* }* %"8_0", align 8
  %"8_03" = load { i32, i8* }, { i32, i8* }* %"8_0", align 8
  %3 = extractvalue { i32, i8* } %"8_03", 0
  %4 = extractvalue { i32, i8* } %"8_03", 1
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 %3, i8* %4)
  call void @abort()
  ret void
}

declare i32 @printf(i8*, ...)

declare void @abort()
