---
source: hugr-llvm/src/extension/collections/borrow_array.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@0 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@1 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.1 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@2 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.2 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@3 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.3 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@4 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.4 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1

define private void @_hl.main.1() {
alloca_block:
  %"12_0" = alloca i64, align 8
  %"10_0" = alloca i64, align 8
  %"15_0" = alloca { i64*, i64 }, align 8
  %"13_0" = alloca { i64*, i64 }, align 8
  %"14_0" = alloca i64, align 8
  %"14_1" = alloca i64, align 8
  %"8_0" = alloca i64, align 8
  %"18_0" = alloca { i1, { i64*, i64 } }, align 8
  %"0" = alloca { i1, { i64*, i64 } }, align 8
  %"19_0" = alloca { i64*, i64 }, align 8
  %"013" = alloca { i64*, i64 }, align 8
  %"015" = alloca { i64*, i64 }, align 8
  %"24_0" = alloca { i32, i8* }, align 8
  %"21_0" = alloca { i64*, i64 }, align 8
  %"25_0" = alloca { i64*, i64 }, align 8
  %"020" = alloca { i64*, i64 }, align 8
  %"27_0" = alloca { i64*, i64 }, align 8
  %"29_0" = alloca { i1, i64 }, align 8
  %"29_1" = alloca { i64*, i64 }, align 8
  %"027" = alloca { i1, i64 }, align 8
  %"1" = alloca { i64*, i64 }, align 8
  %"31_0" = alloca i64, align 8
  %"031" = alloca i64, align 8
  %"36_0" = alloca { i32, i8* }, align 8
  %"37_0" = alloca i64, align 8
  %"035" = alloca i64, align 8
  %"39_0" = alloca i64, align 8
  %"41_0" = alloca { i1, { i64*, i64 }, i64 }, align 8
  %"043" = alloca { i1, { i64*, i64 }, i64 }, align 8
  %"42_0" = alloca i64, align 8
  %"42_1" = alloca { i64*, i64 }, align 8
  %"046" = alloca i64, align 8
  %"147" = alloca { i64*, i64 }, align 8
  %"050" = alloca i64, align 8
  %"151" = alloca { i64*, i64 }, align 8
  %"47_0" = alloca { i32, i8* }, align 8
  %"44_0" = alloca i64, align 8
  %"44_1" = alloca { i64*, i64 }, align 8
  %"48_0" = alloca i64, align 8
  %"48_1" = alloca { i64*, i64 }, align 8
  %"059" = alloca i64, align 8
  %"160" = alloca { i64*, i64 }, align 8
  %"50_0" = alloca i64, align 8
  %"50_1" = alloca { i64*, i64 }, align 8
  %"52_0" = alloca { i1, { i64*, i64 }, i64 }, align 8
  %"53_0" = alloca i64, align 8
  %"53_1" = alloca { i64*, i64 }, align 8
  %"069" = alloca i64, align 8
  %"170" = alloca { i64*, i64 }, align 8
  %"58_0" = alloca { i32, i8* }, align 8
  %"59_0" = alloca i64, align 8
  %"59_1" = alloca { i64*, i64 }, align 8
  %"076" = alloca i64, align 8
  %"177" = alloca { i64*, i64 }, align 8
  %"61_0" = alloca i64, align 8
  %"61_1" = alloca { i64*, i64 }, align 8
  %"63_0" = alloca { i1, { i64*, i64 }, i64 }, align 8
  %"64_0" = alloca i64, align 8
  %"64_1" = alloca { i64*, i64 }, align 8
  %"086" = alloca i64, align 8
  %"187" = alloca { i64*, i64 }, align 8
  %"69_0" = alloca { i32, i8* }, align 8
  %"70_0" = alloca i64, align 8
  %"70_1" = alloca { i64*, i64 }, align 8
  %"093" = alloca i64, align 8
  %"194" = alloca { i64*, i64 }, align 8
  %"72_0" = alloca i64, align 8
  %"72_1" = alloca { i64*, i64 }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store i64 2, i64* %"12_0", align 4
  store i64 1, i64* %"10_0", align 4
  %"10_01" = load i64, i64* %"10_0", align 4
  %"12_02" = load i64, i64* %"12_0", align 4
  %0 = call i8* @malloc(i64 mul (i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i64 2))
  %1 = bitcast i8* %0 to i64*
  %2 = insertvalue { i64*, i64 } poison, i64* %1, 0
  %3 = insertvalue { i64*, i64 } %2, i64 0, 1
  %4 = getelementptr inbounds i64, i64* %1, i64 0
  store i64 %"10_01", i64* %4, align 4
  %5 = getelementptr inbounds i64, i64* %1, i64 1
  store i64 %"12_02", i64* %5, align 4
  store { i64*, i64 } %3, { i64*, i64 }* %"15_0", align 8
  %"10_03" = load i64, i64* %"10_0", align 4
  %"12_04" = load i64, i64* %"12_0", align 4
  %6 = call i8* @malloc(i64 mul (i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i64 2))
  %7 = bitcast i8* %6 to i64*
  %8 = insertvalue { i64*, i64 } poison, i64* %7, 0
  %9 = insertvalue { i64*, i64 } %8, i64 0, 1
  %10 = getelementptr inbounds i64, i64* %7, i64 0
  store i64 %"10_03", i64* %10, align 4
  %11 = getelementptr inbounds i64, i64* %7, i64 1
  store i64 %"12_04", i64* %11, align 4
  store { i64*, i64 } %9, { i64*, i64 }* %"13_0", align 8
  %"13_05" = load { i64*, i64 }, { i64*, i64 }* %"13_0", align 8
  %array_ptr = extractvalue { i64*, i64 } %"13_05", 0
  %array_offset = extractvalue { i64*, i64 } %"13_05", 1
  %12 = add i64 %array_offset, 0
  %13 = getelementptr inbounds i64, i64* %array_ptr, i64 %12
  %14 = load i64, i64* %13, align 4
  %15 = add i64 %array_offset, 1
  %16 = getelementptr inbounds i64, i64* %array_ptr, i64 %15
  %17 = load i64, i64* %16, align 4
  store i64 %14, i64* %"14_0", align 4
  store i64 %17, i64* %"14_1", align 4
  store i64 0, i64* %"8_0", align 4
  %"15_06" = load { i64*, i64 }, { i64*, i64 }* %"15_0", align 8
  %"8_07" = load i64, i64* %"8_0", align 4
  %"10_08" = load i64, i64* %"10_0", align 4
  %array_ptr9 = extractvalue { i64*, i64 } %"15_06", 0
  %array_offset10 = extractvalue { i64*, i64 } %"15_06", 1
  %18 = icmp ult i64 %"8_07", 2
  %19 = icmp ult i64 %"10_08", 2
  %20 = and i1 %18, %19
  br i1 %20, label %23, label %21

21:                                               ; preds = %entry_block
  %22 = insertvalue { i1, { i64*, i64 } } { i1 false, { i64*, i64 } poison }, { i64*, i64 } %"15_06", 1
  store { i1, { i64*, i64 } } %22, { i1, { i64*, i64 } }* %"0", align 8
  br label %31

23:                                               ; preds = %entry_block
  %24 = add i64 %"8_07", %array_offset10
  %25 = add i64 %"10_08", %array_offset10
  %26 = getelementptr inbounds i64, i64* %array_ptr9, i64 %24
  %27 = load i64, i64* %26, align 4
  %28 = getelementptr inbounds i64, i64* %array_ptr9, i64 %25
  %29 = load i64, i64* %28, align 4
  store i64 %29, i64* %26, align 4
  store i64 %27, i64* %28, align 4
  %30 = insertvalue { i1, { i64*, i64 } } { i1 true, { i64*, i64 } poison }, { i64*, i64 } %"15_06", 1
  store { i1, { i64*, i64 } } %30, { i1, { i64*, i64 } }* %"0", align 8
  br label %31

31:                                               ; preds = %21, %23
  %"011" = load { i1, { i64*, i64 } }, { i1, { i64*, i64 } }* %"0", align 8
  store { i1, { i64*, i64 } } %"011", { i1, { i64*, i64 } }* %"18_0", align 8
  %"18_012" = load { i1, { i64*, i64 } }, { i1, { i64*, i64 } }* %"18_0", align 8
  %32 = extractvalue { i1, { i64*, i64 } } %"18_012", 0
  switch i1 %32, label %33 [
    i1 true, label %35
  ]

33:                                               ; preds = %31
  %34 = extractvalue { i1, { i64*, i64 } } %"18_012", 1
  store { i64*, i64 } %34, { i64*, i64 }* %"015", align 8
  br label %cond_19_case_0

35:                                               ; preds = %31
  %36 = extractvalue { i1, { i64*, i64 } } %"18_012", 1
  store { i64*, i64 } %36, { i64*, i64 }* %"020", align 8
  br label %cond_19_case_1

cond_19_case_0:                                   ; preds = %33
  %"016" = load { i64*, i64 }, { i64*, i64 }* %"015", align 8
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @0, i32 0, i32 0) }, { i32, i8* }* %"24_0", align 8
  store { i64*, i64 } %"016", { i64*, i64 }* %"21_0", align 8
  %"24_017" = load { i32, i8* }, { i32, i8* }* %"24_0", align 8
  %"21_018" = load { i64*, i64 }, { i64*, i64 }* %"21_0", align 8
  %37 = extractvalue { i32, i8* } %"24_017", 0
  %38 = extractvalue { i32, i8* } %"24_017", 1
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 %37, i8* %38)
  call void @abort()
  store { i64*, i64 } zeroinitializer, { i64*, i64 }* %"25_0", align 8
  %"25_019" = load { i64*, i64 }, { i64*, i64 }* %"25_0", align 8
  store { i64*, i64 } %"25_019", { i64*, i64 }* %"013", align 8
  br label %cond_exit_19

cond_19_case_1:                                   ; preds = %35
  %"021" = load { i64*, i64 }, { i64*, i64 }* %"020", align 8
  store { i64*, i64 } %"021", { i64*, i64 }* %"27_0", align 8
  %"27_022" = load { i64*, i64 }, { i64*, i64 }* %"27_0", align 8
  store { i64*, i64 } %"27_022", { i64*, i64 }* %"013", align 8
  br label %cond_exit_19

cond_exit_19:                                     ; preds = %cond_19_case_1, %cond_19_case_0
  %"014" = load { i64*, i64 }, { i64*, i64 }* %"013", align 8
  store { i64*, i64 } %"014", { i64*, i64 }* %"19_0", align 8
  %"19_023" = load { i64*, i64 }, { i64*, i64 }* %"19_0", align 8
  %"8_024" = load i64, i64* %"8_0", align 4
  %array_ptr25 = extractvalue { i64*, i64 } %"19_023", 0
  %array_offset26 = extractvalue { i64*, i64 } %"19_023", 1
  %40 = icmp ult i64 %"8_024", 2
  br i1 %40, label %42, label %41

41:                                               ; preds = %cond_exit_19
  store { i1, i64 } { i1 false, i64 poison }, { i1, i64 }* %"027", align 4
  store { i64*, i64 } %"19_023", { i64*, i64 }* %"1", align 8
  br label %47

42:                                               ; preds = %cond_exit_19
  %43 = add i64 %"8_024", %array_offset26
  %44 = getelementptr inbounds i64, i64* %array_ptr25, i64 %43
  %45 = load i64, i64* %44, align 4
  %46 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %45, 1
  store { i1, i64 } %46, { i1, i64 }* %"027", align 4
  store { i64*, i64 } %"19_023", { i64*, i64 }* %"1", align 8
  br label %47

47:                                               ; preds = %41, %42
  %"028" = load { i1, i64 }, { i1, i64 }* %"027", align 4
  %"129" = load { i64*, i64 }, { i64*, i64 }* %"1", align 8
  store { i1, i64 } %"028", { i1, i64 }* %"29_0", align 4
  store { i64*, i64 } %"129", { i64*, i64 }* %"29_1", align 8
  %"29_030" = load { i1, i64 }, { i1, i64 }* %"29_0", align 4
  %48 = extractvalue { i1, i64 } %"29_030", 0
  switch i1 %48, label %49 [
    i1 true, label %50
  ]

49:                                               ; preds = %47
  br label %cond_31_case_0

50:                                               ; preds = %47
  %51 = extractvalue { i1, i64 } %"29_030", 1
  store i64 %51, i64* %"035", align 4
  br label %cond_31_case_1

cond_31_case_0:                                   ; preds = %49
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, { i32, i8* }* %"36_0", align 8
  %"36_033" = load { i32, i8* }, { i32, i8* }* %"36_0", align 8
  %52 = extractvalue { i32, i8* } %"36_033", 0
  %53 = extractvalue { i32, i8* } %"36_033", 1
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.1, i32 0, i32 0), i32 %52, i8* %53)
  call void @abort()
  store i64 0, i64* %"37_0", align 4
  %"37_034" = load i64, i64* %"37_0", align 4
  store i64 %"37_034", i64* %"031", align 4
  br label %cond_exit_31

cond_31_case_1:                                   ; preds = %50
  %"036" = load i64, i64* %"035", align 4
  store i64 %"036", i64* %"39_0", align 4
  %"39_037" = load i64, i64* %"39_0", align 4
  store i64 %"39_037", i64* %"031", align 4
  br label %cond_exit_31

cond_exit_31:                                     ; preds = %cond_31_case_1, %cond_31_case_0
  %"032" = load i64, i64* %"031", align 4
  store i64 %"032", i64* %"31_0", align 4
  %"29_138" = load { i64*, i64 }, { i64*, i64 }* %"29_1", align 8
  %"10_039" = load i64, i64* %"10_0", align 4
  %"31_040" = load i64, i64* %"31_0", align 4
  %array_ptr41 = extractvalue { i64*, i64 } %"29_138", 0
  %array_offset42 = extractvalue { i64*, i64 } %"29_138", 1
  %55 = icmp ult i64 %"10_039", 2
  br i1 %55, label %59, label %56

56:                                               ; preds = %cond_exit_31
  %57 = insertvalue { i1, { i64*, i64 }, i64 } { i1 false, { i64*, i64 } poison, i64 poison }, i64 %"31_040", 2
  %58 = insertvalue { i1, { i64*, i64 }, i64 } %57, { i64*, i64 } %"29_138", 1
  store { i1, { i64*, i64 }, i64 } %58, { i1, { i64*, i64 }, i64 }* %"043", align 8
  br label %65

59:                                               ; preds = %cond_exit_31
  %60 = add i64 %"10_039", %array_offset42
  %61 = getelementptr inbounds i64, i64* %array_ptr41, i64 %60
  %62 = load i64, i64* %61, align 4
  store i64 %"31_040", i64* %61, align 4
  %63 = insertvalue { i1, { i64*, i64 }, i64 } { i1 true, { i64*, i64 } poison, i64 poison }, i64 %62, 2
  %64 = insertvalue { i1, { i64*, i64 }, i64 } %63, { i64*, i64 } %"29_138", 1
  store { i1, { i64*, i64 }, i64 } %64, { i1, { i64*, i64 }, i64 }* %"043", align 8
  br label %65

65:                                               ; preds = %56, %59
  %"044" = load { i1, { i64*, i64 }, i64 }, { i1, { i64*, i64 }, i64 }* %"043", align 8
  store { i1, { i64*, i64 }, i64 } %"044", { i1, { i64*, i64 }, i64 }* %"41_0", align 8
  %"41_045" = load { i1, { i64*, i64 }, i64 }, { i1, { i64*, i64 }, i64 }* %"41_0", align 8
  %66 = extractvalue { i1, { i64*, i64 }, i64 } %"41_045", 0
  switch i1 %66, label %67 [
    i1 true, label %70
  ]

67:                                               ; preds = %65
  %68 = extractvalue { i1, { i64*, i64 }, i64 } %"41_045", 2
  %69 = extractvalue { i1, { i64*, i64 }, i64 } %"41_045", 1
  store i64 %68, i64* %"050", align 4
  store { i64*, i64 } %69, { i64*, i64 }* %"151", align 8
  br label %cond_42_case_0

70:                                               ; preds = %65
  %71 = extractvalue { i1, { i64*, i64 }, i64 } %"41_045", 2
  %72 = extractvalue { i1, { i64*, i64 }, i64 } %"41_045", 1
  store i64 %71, i64* %"059", align 4
  store { i64*, i64 } %72, { i64*, i64 }* %"160", align 8
  br label %cond_42_case_1

cond_42_case_0:                                   ; preds = %67
  %"052" = load i64, i64* %"050", align 4
  %"153" = load { i64*, i64 }, { i64*, i64 }* %"151", align 8
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @2, i32 0, i32 0) }, { i32, i8* }* %"47_0", align 8
  store i64 %"052", i64* %"44_0", align 4
  store { i64*, i64 } %"153", { i64*, i64 }* %"44_1", align 8
  %"47_054" = load { i32, i8* }, { i32, i8* }* %"47_0", align 8
  %"44_055" = load i64, i64* %"44_0", align 4
  %"44_156" = load { i64*, i64 }, { i64*, i64 }* %"44_1", align 8
  %73 = extractvalue { i32, i8* } %"47_054", 0
  %74 = extractvalue { i32, i8* } %"47_054", 1
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.2, i32 0, i32 0), i32 %73, i8* %74)
  call void @abort()
  store i64 0, i64* %"48_0", align 4
  store { i64*, i64 } zeroinitializer, { i64*, i64 }* %"48_1", align 8
  %"48_057" = load i64, i64* %"48_0", align 4
  %"48_158" = load { i64*, i64 }, { i64*, i64 }* %"48_1", align 8
  store i64 %"48_057", i64* %"046", align 4
  store { i64*, i64 } %"48_158", { i64*, i64 }* %"147", align 8
  br label %cond_exit_42

cond_42_case_1:                                   ; preds = %70
  %"061" = load i64, i64* %"059", align 4
  %"162" = load { i64*, i64 }, { i64*, i64 }* %"160", align 8
  store i64 %"061", i64* %"50_0", align 4
  store { i64*, i64 } %"162", { i64*, i64 }* %"50_1", align 8
  %"50_063" = load i64, i64* %"50_0", align 4
  %"50_164" = load { i64*, i64 }, { i64*, i64 }* %"50_1", align 8
  store i64 %"50_063", i64* %"046", align 4
  store { i64*, i64 } %"50_164", { i64*, i64 }* %"147", align 8
  br label %cond_exit_42

cond_exit_42:                                     ; preds = %cond_42_case_1, %cond_42_case_0
  %"048" = load i64, i64* %"046", align 4
  %"149" = load { i64*, i64 }, { i64*, i64 }* %"147", align 8
  store i64 %"048", i64* %"42_0", align 4
  store { i64*, i64 } %"149", { i64*, i64 }* %"42_1", align 8
  %"42_165" = load { i64*, i64 }, { i64*, i64 }* %"42_1", align 8
  %array_ptr66 = extractvalue { i64*, i64 } %"42_165", 0
  %array_offset67 = extractvalue { i64*, i64 } %"42_165", 1
  %new_offset = add i64 %array_offset67, 1
  %76 = getelementptr inbounds i64, i64* %array_ptr66, i64 %array_offset67
  %77 = load i64, i64* %76, align 4
  %78 = insertvalue { i64*, i64 } poison, i64* %array_ptr66, 0
  %79 = insertvalue { i64*, i64 } %78, i64 %new_offset, 1
  %80 = insertvalue { i1, { i64*, i64 }, i64 } { i1 true, { i64*, i64 } poison, i64 poison }, i64 %77, 2
  %81 = insertvalue { i1, { i64*, i64 }, i64 } %80, { i64*, i64 } %79, 1
  store { i1, { i64*, i64 }, i64 } %81, { i1, { i64*, i64 }, i64 }* %"52_0", align 8
  %"52_068" = load { i1, { i64*, i64 }, i64 }, { i1, { i64*, i64 }, i64 }* %"52_0", align 8
  %82 = extractvalue { i1, { i64*, i64 }, i64 } %"52_068", 0
  switch i1 %82, label %83 [
    i1 true, label %84
  ]

83:                                               ; preds = %cond_exit_42
  br label %cond_53_case_0

84:                                               ; preds = %cond_exit_42
  %85 = extractvalue { i1, { i64*, i64 }, i64 } %"52_068", 2
  %86 = extractvalue { i1, { i64*, i64 }, i64 } %"52_068", 1
  store i64 %85, i64* %"076", align 4
  store { i64*, i64 } %86, { i64*, i64 }* %"177", align 8
  br label %cond_53_case_1

cond_53_case_0:                                   ; preds = %83
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @3, i32 0, i32 0) }, { i32, i8* }* %"58_0", align 8
  %"58_073" = load { i32, i8* }, { i32, i8* }* %"58_0", align 8
  %87 = extractvalue { i32, i8* } %"58_073", 0
  %88 = extractvalue { i32, i8* } %"58_073", 1
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.3, i32 0, i32 0), i32 %87, i8* %88)
  call void @abort()
  store i64 0, i64* %"59_0", align 4
  store { i64*, i64 } zeroinitializer, { i64*, i64 }* %"59_1", align 8
  %"59_074" = load i64, i64* %"59_0", align 4
  %"59_175" = load { i64*, i64 }, { i64*, i64 }* %"59_1", align 8
  store i64 %"59_074", i64* %"069", align 4
  store { i64*, i64 } %"59_175", { i64*, i64 }* %"170", align 8
  br label %cond_exit_53

cond_53_case_1:                                   ; preds = %84
  %"078" = load i64, i64* %"076", align 4
  %"179" = load { i64*, i64 }, { i64*, i64 }* %"177", align 8
  store i64 %"078", i64* %"61_0", align 4
  store { i64*, i64 } %"179", { i64*, i64 }* %"61_1", align 8
  %"61_080" = load i64, i64* %"61_0", align 4
  %"61_181" = load { i64*, i64 }, { i64*, i64 }* %"61_1", align 8
  store i64 %"61_080", i64* %"069", align 4
  store { i64*, i64 } %"61_181", { i64*, i64 }* %"170", align 8
  br label %cond_exit_53

cond_exit_53:                                     ; preds = %cond_53_case_1, %cond_53_case_0
  %"071" = load i64, i64* %"069", align 4
  %"172" = load { i64*, i64 }, { i64*, i64 }* %"170", align 8
  store i64 %"071", i64* %"53_0", align 4
  store { i64*, i64 } %"172", { i64*, i64 }* %"53_1", align 8
  %"53_182" = load { i64*, i64 }, { i64*, i64 }* %"53_1", align 8
  %array_ptr83 = extractvalue { i64*, i64 } %"53_182", 0
  %array_offset84 = extractvalue { i64*, i64 } %"53_182", 1
  %90 = add i64 %array_offset84, 0
  %91 = getelementptr inbounds i64, i64* %array_ptr83, i64 %90
  %92 = load i64, i64* %91, align 4
  %93 = insertvalue { i64*, i64 } poison, i64* %array_ptr83, 0
  %94 = insertvalue { i64*, i64 } %93, i64 %array_offset84, 1
  %95 = insertvalue { i1, { i64*, i64 }, i64 } { i1 true, { i64*, i64 } poison, i64 poison }, i64 %92, 2
  %96 = insertvalue { i1, { i64*, i64 }, i64 } %95, { i64*, i64 } %94, 1
  store { i1, { i64*, i64 }, i64 } %96, { i1, { i64*, i64 }, i64 }* %"63_0", align 8
  %"63_085" = load { i1, { i64*, i64 }, i64 }, { i1, { i64*, i64 }, i64 }* %"63_0", align 8
  %97 = extractvalue { i1, { i64*, i64 }, i64 } %"63_085", 0
  switch i1 %97, label %98 [
    i1 true, label %99
  ]

98:                                               ; preds = %cond_exit_53
  br label %cond_64_case_0

99:                                               ; preds = %cond_exit_53
  %100 = extractvalue { i1, { i64*, i64 }, i64 } %"63_085", 2
  %101 = extractvalue { i1, { i64*, i64 }, i64 } %"63_085", 1
  store i64 %100, i64* %"093", align 4
  store { i64*, i64 } %101, { i64*, i64 }* %"194", align 8
  br label %cond_64_case_1

cond_64_case_0:                                   ; preds = %98
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @4, i32 0, i32 0) }, { i32, i8* }* %"69_0", align 8
  %"69_090" = load { i32, i8* }, { i32, i8* }* %"69_0", align 8
  %102 = extractvalue { i32, i8* } %"69_090", 0
  %103 = extractvalue { i32, i8* } %"69_090", 1
  %104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.4, i32 0, i32 0), i32 %102, i8* %103)
  call void @abort()
  store i64 0, i64* %"70_0", align 4
  store { i64*, i64 } zeroinitializer, { i64*, i64 }* %"70_1", align 8
  %"70_091" = load i64, i64* %"70_0", align 4
  %"70_192" = load { i64*, i64 }, { i64*, i64 }* %"70_1", align 8
  store i64 %"70_091", i64* %"086", align 4
  store { i64*, i64 } %"70_192", { i64*, i64 }* %"187", align 8
  br label %cond_exit_64

cond_64_case_1:                                   ; preds = %99
  %"095" = load i64, i64* %"093", align 4
  %"196" = load { i64*, i64 }, { i64*, i64 }* %"194", align 8
  store i64 %"095", i64* %"72_0", align 4
  store { i64*, i64 } %"196", { i64*, i64 }* %"72_1", align 8
  %"72_097" = load i64, i64* %"72_0", align 4
  %"72_198" = load { i64*, i64 }, { i64*, i64 }* %"72_1", align 8
  store i64 %"72_097", i64* %"086", align 4
  store { i64*, i64 } %"72_198", { i64*, i64 }* %"187", align 8
  br label %cond_exit_64

cond_exit_64:                                     ; preds = %cond_64_case_1, %cond_64_case_0
  %"088" = load i64, i64* %"086", align 4
  %"189" = load { i64*, i64 }, { i64*, i64 }* %"187", align 8
  store i64 %"088", i64* %"64_0", align 4
  store { i64*, i64 } %"189", { i64*, i64 }* %"64_1", align 8
  %"64_199" = load { i64*, i64 }, { i64*, i64 }* %"64_1", align 8
  %array_ptr100 = extractvalue { i64*, i64 } %"64_199", 0
  %array_offset101 = extractvalue { i64*, i64 } %"64_199", 1
  %105 = bitcast i64* %array_ptr100 to i8*
  call void @free(i8* %105)
  ret void
}

declare i8* @malloc(i64)

declare i32 @printf(i8*, ...)

declare void @abort()

declare void @free(i8*)
