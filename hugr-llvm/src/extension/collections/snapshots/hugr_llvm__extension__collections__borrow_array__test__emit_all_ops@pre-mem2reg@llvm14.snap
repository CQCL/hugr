---
source: hugr-llvm/src/extension/collections/borrow_array.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@0 = private unnamed_addr constant [34 x i8] c"Array element is already borrowed\00", align 1
@prelude.panic_template = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@1 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.1 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@2 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.2 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@3 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.3 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@4 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.4 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@5 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.5 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1

define private void @_hl.main.1() {
alloca_block:
  %"12_0" = alloca i64, align 8
  %"10_0" = alloca i64, align 8
  %"15_0" = alloca { i64*, i64*, i64 }, align 8
  %"13_0" = alloca { i64*, i64*, i64 }, align 8
  %"14_0" = alloca i64, align 8
  %"14_1" = alloca i64, align 8
  %"8_0" = alloca i64, align 8
  %"18_0" = alloca { i1, { i64*, i64*, i64 } }, align 8
  %"0" = alloca { i1, { i64*, i64*, i64 } }, align 8
  %"19_0" = alloca { i64*, i64*, i64 }, align 8
  %"014" = alloca { i64*, i64*, i64 }, align 8
  %"016" = alloca { i64*, i64*, i64 }, align 8
  %"24_0" = alloca { i32, i8* }, align 8
  %"21_0" = alloca { i64*, i64*, i64 }, align 8
  %"25_0" = alloca { i64*, i64*, i64 }, align 8
  %"021" = alloca { i64*, i64*, i64 }, align 8
  %"27_0" = alloca { i64*, i64*, i64 }, align 8
  %"29_0" = alloca { i1, i64 }, align 8
  %"29_1" = alloca { i64*, i64*, i64 }, align 8
  %"029" = alloca { i1, i64 }, align 8
  %"1" = alloca { i64*, i64*, i64 }, align 8
  %"31_0" = alloca i64, align 8
  %"033" = alloca i64, align 8
  %"36_0" = alloca { i32, i8* }, align 8
  %"37_0" = alloca i64, align 8
  %"037" = alloca i64, align 8
  %"39_0" = alloca i64, align 8
  %"41_0" = alloca { i1, { i64*, i64*, i64 }, i64 }, align 8
  %"046" = alloca { i1, { i64*, i64*, i64 }, i64 }, align 8
  %"42_0" = alloca i64, align 8
  %"42_1" = alloca { i64*, i64*, i64 }, align 8
  %"049" = alloca i64, align 8
  %"150" = alloca { i64*, i64*, i64 }, align 8
  %"053" = alloca i64, align 8
  %"154" = alloca { i64*, i64*, i64 }, align 8
  %"47_0" = alloca { i32, i8* }, align 8
  %"44_0" = alloca i64, align 8
  %"44_1" = alloca { i64*, i64*, i64 }, align 8
  %"48_0" = alloca i64, align 8
  %"48_1" = alloca { i64*, i64*, i64 }, align 8
  %"062" = alloca i64, align 8
  %"163" = alloca { i64*, i64*, i64 }, align 8
  %"50_0" = alloca i64, align 8
  %"50_1" = alloca { i64*, i64*, i64 }, align 8
  %"52_0" = alloca { i1, { i64*, i64*, i64 }, i64 }, align 8
  %"53_0" = alloca i64, align 8
  %"53_1" = alloca { i64*, i64*, i64 }, align 8
  %"073" = alloca i64, align 8
  %"174" = alloca { i64*, i64*, i64 }, align 8
  %"58_0" = alloca { i32, i8* }, align 8
  %"59_0" = alloca i64, align 8
  %"59_1" = alloca { i64*, i64*, i64 }, align 8
  %"080" = alloca i64, align 8
  %"181" = alloca { i64*, i64*, i64 }, align 8
  %"61_0" = alloca i64, align 8
  %"61_1" = alloca { i64*, i64*, i64 }, align 8
  %"63_0" = alloca { i1, { i64*, i64*, i64 }, i64 }, align 8
  %"64_0" = alloca i64, align 8
  %"64_1" = alloca { i64*, i64*, i64 }, align 8
  %"091" = alloca i64, align 8
  %"192" = alloca { i64*, i64*, i64 }, align 8
  %"69_0" = alloca { i32, i8* }, align 8
  %"70_0" = alloca i64, align 8
  %"70_1" = alloca { i64*, i64*, i64 }, align 8
  %"098" = alloca i64, align 8
  %"199" = alloca { i64*, i64*, i64 }, align 8
  %"72_0" = alloca i64, align 8
  %"72_1" = alloca { i64*, i64*, i64 }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store i64 2, i64* %"12_0", align 4
  store i64 1, i64* %"10_0", align 4
  %"10_01" = load i64, i64* %"10_0", align 4
  %"12_02" = load i64, i64* %"12_0", align 4
  %0 = call i8* @malloc(i64 mul (i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i64 2))
  %1 = bitcast i8* %0 to i64*
  %2 = call i8* @malloc(i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %3 = bitcast i8* %2 to i64*
  call void @llvm.memset.p0i64.i64(i64* %3, i8 0, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i1 false)
  %4 = insertvalue { i64*, i64*, i64 } poison, i64* %1, 0
  %5 = insertvalue { i64*, i64*, i64 } %4, i64* %3, 1
  %6 = insertvalue { i64*, i64*, i64 } %5, i64 0, 2
  %7 = getelementptr inbounds i64, i64* %1, i64 0
  store i64 %"10_01", i64* %7, align 4
  %8 = getelementptr inbounds i64, i64* %1, i64 1
  store i64 %"12_02", i64* %8, align 4
  store { i64*, i64*, i64 } %6, { i64*, i64*, i64 }* %"15_0", align 8
  %"10_03" = load i64, i64* %"10_0", align 4
  %"12_04" = load i64, i64* %"12_0", align 4
  %9 = call i8* @malloc(i64 mul (i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i64 2))
  %10 = bitcast i8* %9 to i64*
  %11 = call i8* @malloc(i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %12 = bitcast i8* %11 to i64*
  call void @llvm.memset.p0i64.i64(i64* %12, i8 0, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i1 false)
  %13 = insertvalue { i64*, i64*, i64 } poison, i64* %10, 0
  %14 = insertvalue { i64*, i64*, i64 } %13, i64* %12, 1
  %15 = insertvalue { i64*, i64*, i64 } %14, i64 0, 2
  %16 = getelementptr inbounds i64, i64* %10, i64 0
  store i64 %"10_03", i64* %16, align 4
  %17 = getelementptr inbounds i64, i64* %10, i64 1
  store i64 %"12_04", i64* %17, align 4
  store { i64*, i64*, i64 } %15, { i64*, i64*, i64 }* %"13_0", align 8
  %"13_05" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"13_0", align 8
  %array_ptr = extractvalue { i64*, i64*, i64 } %"13_05", 0
  %array_mask_ptr = extractvalue { i64*, i64*, i64 } %"13_05", 1
  %array_offset = extractvalue { i64*, i64*, i64 } %"13_05", 2
  %18 = add i64 %array_offset, 0
  call void @__barray_check_idx_not_borrowed(i64* %array_mask_ptr, i64 %18)
  %19 = getelementptr inbounds i64, i64* %array_ptr, i64 %18
  %20 = load i64, i64* %19, align 4
  %21 = add i64 %array_offset, 1
  call void @__barray_check_idx_not_borrowed(i64* %array_mask_ptr, i64 %21)
  %22 = getelementptr inbounds i64, i64* %array_ptr, i64 %21
  %23 = load i64, i64* %22, align 4
  store i64 %20, i64* %"14_0", align 4
  store i64 %23, i64* %"14_1", align 4
  store i64 0, i64* %"8_0", align 4
  %"15_06" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"15_0", align 8
  %"8_07" = load i64, i64* %"8_0", align 4
  %"10_08" = load i64, i64* %"10_0", align 4
  %array_ptr9 = extractvalue { i64*, i64*, i64 } %"15_06", 0
  %array_mask_ptr10 = extractvalue { i64*, i64*, i64 } %"15_06", 1
  %array_offset11 = extractvalue { i64*, i64*, i64 } %"15_06", 2
  %24 = icmp ult i64 %"8_07", 2
  %25 = icmp ult i64 %"10_08", 2
  %26 = and i1 %24, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %entry_block
  %28 = insertvalue { i1, { i64*, i64*, i64 } } { i1 false, { i64*, i64*, i64 } poison }, { i64*, i64*, i64 } %"15_06", 1
  store { i1, { i64*, i64*, i64 } } %28, { i1, { i64*, i64*, i64 } }* %"0", align 8
  br label %37

29:                                               ; preds = %entry_block
  %30 = add i64 %"8_07", %array_offset11
  %31 = add i64 %"10_08", %array_offset11
  call void @__barray_check_idx_not_borrowed(i64* %array_mask_ptr10, i64 %30)
  call void @__barray_check_idx_not_borrowed(i64* %array_mask_ptr10, i64 %31)
  %32 = getelementptr inbounds i64, i64* %array_ptr9, i64 %30
  %33 = load i64, i64* %32, align 4
  %34 = getelementptr inbounds i64, i64* %array_ptr9, i64 %31
  %35 = load i64, i64* %34, align 4
  store i64 %35, i64* %32, align 4
  store i64 %33, i64* %34, align 4
  %36 = insertvalue { i1, { i64*, i64*, i64 } } { i1 true, { i64*, i64*, i64 } poison }, { i64*, i64*, i64 } %"15_06", 1
  store { i1, { i64*, i64*, i64 } } %36, { i1, { i64*, i64*, i64 } }* %"0", align 8
  br label %37

37:                                               ; preds = %27, %29
  %"012" = load { i1, { i64*, i64*, i64 } }, { i1, { i64*, i64*, i64 } }* %"0", align 8
  store { i1, { i64*, i64*, i64 } } %"012", { i1, { i64*, i64*, i64 } }* %"18_0", align 8
  %"18_013" = load { i1, { i64*, i64*, i64 } }, { i1, { i64*, i64*, i64 } }* %"18_0", align 8
  %38 = extractvalue { i1, { i64*, i64*, i64 } } %"18_013", 0
  switch i1 %38, label %39 [
    i1 true, label %41
  ]

39:                                               ; preds = %37
  %40 = extractvalue { i1, { i64*, i64*, i64 } } %"18_013", 1
  store { i64*, i64*, i64 } %40, { i64*, i64*, i64 }* %"016", align 8
  br label %cond_19_case_0

41:                                               ; preds = %37
  %42 = extractvalue { i1, { i64*, i64*, i64 } } %"18_013", 1
  store { i64*, i64*, i64 } %42, { i64*, i64*, i64 }* %"021", align 8
  br label %cond_19_case_1

cond_19_case_0:                                   ; preds = %39
  %"017" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"016", align 8
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, { i32, i8* }* %"24_0", align 8
  store { i64*, i64*, i64 } %"017", { i64*, i64*, i64 }* %"21_0", align 8
  %"24_018" = load { i32, i8* }, { i32, i8* }* %"24_0", align 8
  %"21_019" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"21_0", align 8
  %43 = extractvalue { i32, i8* } %"24_018", 0
  %44 = extractvalue { i32, i8* } %"24_018", 1
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.1, i32 0, i32 0), i32 %43, i8* %44)
  call void @abort()
  store { i64*, i64*, i64 } zeroinitializer, { i64*, i64*, i64 }* %"25_0", align 8
  %"25_020" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"25_0", align 8
  store { i64*, i64*, i64 } %"25_020", { i64*, i64*, i64 }* %"014", align 8
  br label %cond_exit_19

cond_19_case_1:                                   ; preds = %41
  %"022" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"021", align 8
  store { i64*, i64*, i64 } %"022", { i64*, i64*, i64 }* %"27_0", align 8
  %"27_023" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"27_0", align 8
  store { i64*, i64*, i64 } %"27_023", { i64*, i64*, i64 }* %"014", align 8
  br label %cond_exit_19

cond_exit_19:                                     ; preds = %cond_19_case_1, %cond_19_case_0
  %"015" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"014", align 8
  store { i64*, i64*, i64 } %"015", { i64*, i64*, i64 }* %"19_0", align 8
  %"19_024" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"19_0", align 8
  %"8_025" = load i64, i64* %"8_0", align 4
  %array_ptr26 = extractvalue { i64*, i64*, i64 } %"19_024", 0
  %array_mask_ptr27 = extractvalue { i64*, i64*, i64 } %"19_024", 1
  %array_offset28 = extractvalue { i64*, i64*, i64 } %"19_024", 2
  %46 = icmp ult i64 %"8_025", 2
  br i1 %46, label %48, label %47

47:                                               ; preds = %cond_exit_19
  store { i1, i64 } { i1 false, i64 poison }, { i1, i64 }* %"029", align 4
  store { i64*, i64*, i64 } %"19_024", { i64*, i64*, i64 }* %"1", align 8
  br label %53

48:                                               ; preds = %cond_exit_19
  %49 = add i64 %"8_025", %array_offset28
  call void @__barray_check_idx_not_borrowed(i64* %array_mask_ptr27, i64 %49)
  %50 = getelementptr inbounds i64, i64* %array_ptr26, i64 %49
  %51 = load i64, i64* %50, align 4
  %52 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %51, 1
  store { i1, i64 } %52, { i1, i64 }* %"029", align 4
  store { i64*, i64*, i64 } %"19_024", { i64*, i64*, i64 }* %"1", align 8
  br label %53

53:                                               ; preds = %47, %48
  %"030" = load { i1, i64 }, { i1, i64 }* %"029", align 4
  %"131" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"1", align 8
  store { i1, i64 } %"030", { i1, i64 }* %"29_0", align 4
  store { i64*, i64*, i64 } %"131", { i64*, i64*, i64 }* %"29_1", align 8
  %"29_032" = load { i1, i64 }, { i1, i64 }* %"29_0", align 4
  %54 = extractvalue { i1, i64 } %"29_032", 0
  switch i1 %54, label %55 [
    i1 true, label %56
  ]

55:                                               ; preds = %53
  br label %cond_31_case_0

56:                                               ; preds = %53
  %57 = extractvalue { i1, i64 } %"29_032", 1
  store i64 %57, i64* %"037", align 4
  br label %cond_31_case_1

cond_31_case_0:                                   ; preds = %55
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @2, i32 0, i32 0) }, { i32, i8* }* %"36_0", align 8
  %"36_035" = load { i32, i8* }, { i32, i8* }* %"36_0", align 8
  %58 = extractvalue { i32, i8* } %"36_035", 0
  %59 = extractvalue { i32, i8* } %"36_035", 1
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.2, i32 0, i32 0), i32 %58, i8* %59)
  call void @abort()
  store i64 0, i64* %"37_0", align 4
  %"37_036" = load i64, i64* %"37_0", align 4
  store i64 %"37_036", i64* %"033", align 4
  br label %cond_exit_31

cond_31_case_1:                                   ; preds = %56
  %"038" = load i64, i64* %"037", align 4
  store i64 %"038", i64* %"39_0", align 4
  %"39_039" = load i64, i64* %"39_0", align 4
  store i64 %"39_039", i64* %"033", align 4
  br label %cond_exit_31

cond_exit_31:                                     ; preds = %cond_31_case_1, %cond_31_case_0
  %"034" = load i64, i64* %"033", align 4
  store i64 %"034", i64* %"31_0", align 4
  %"29_140" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"29_1", align 8
  %"10_041" = load i64, i64* %"10_0", align 4
  %"31_042" = load i64, i64* %"31_0", align 4
  %array_ptr43 = extractvalue { i64*, i64*, i64 } %"29_140", 0
  %array_mask_ptr44 = extractvalue { i64*, i64*, i64 } %"29_140", 1
  %array_offset45 = extractvalue { i64*, i64*, i64 } %"29_140", 2
  %61 = icmp ult i64 %"10_041", 2
  br i1 %61, label %65, label %62

62:                                               ; preds = %cond_exit_31
  %63 = insertvalue { i1, { i64*, i64*, i64 }, i64 } { i1 false, { i64*, i64*, i64 } poison, i64 poison }, i64 %"31_042", 2
  %64 = insertvalue { i1, { i64*, i64*, i64 }, i64 } %63, { i64*, i64*, i64 } %"29_140", 1
  store { i1, { i64*, i64*, i64 }, i64 } %64, { i1, { i64*, i64*, i64 }, i64 }* %"046", align 8
  br label %71

65:                                               ; preds = %cond_exit_31
  %66 = add i64 %"10_041", %array_offset45
  call void @__barray_check_idx_not_borrowed(i64* %array_mask_ptr44, i64 %66)
  %67 = getelementptr inbounds i64, i64* %array_ptr43, i64 %66
  %68 = load i64, i64* %67, align 4
  store i64 %"31_042", i64* %67, align 4
  %69 = insertvalue { i1, { i64*, i64*, i64 }, i64 } { i1 true, { i64*, i64*, i64 } poison, i64 poison }, i64 %68, 2
  %70 = insertvalue { i1, { i64*, i64*, i64 }, i64 } %69, { i64*, i64*, i64 } %"29_140", 1
  store { i1, { i64*, i64*, i64 }, i64 } %70, { i1, { i64*, i64*, i64 }, i64 }* %"046", align 8
  br label %71

71:                                               ; preds = %62, %65
  %"047" = load { i1, { i64*, i64*, i64 }, i64 }, { i1, { i64*, i64*, i64 }, i64 }* %"046", align 8
  store { i1, { i64*, i64*, i64 }, i64 } %"047", { i1, { i64*, i64*, i64 }, i64 }* %"41_0", align 8
  %"41_048" = load { i1, { i64*, i64*, i64 }, i64 }, { i1, { i64*, i64*, i64 }, i64 }* %"41_0", align 8
  %72 = extractvalue { i1, { i64*, i64*, i64 }, i64 } %"41_048", 0
  switch i1 %72, label %73 [
    i1 true, label %76
  ]

73:                                               ; preds = %71
  %74 = extractvalue { i1, { i64*, i64*, i64 }, i64 } %"41_048", 2
  %75 = extractvalue { i1, { i64*, i64*, i64 }, i64 } %"41_048", 1
  store i64 %74, i64* %"053", align 4
  store { i64*, i64*, i64 } %75, { i64*, i64*, i64 }* %"154", align 8
  br label %cond_42_case_0

76:                                               ; preds = %71
  %77 = extractvalue { i1, { i64*, i64*, i64 }, i64 } %"41_048", 2
  %78 = extractvalue { i1, { i64*, i64*, i64 }, i64 } %"41_048", 1
  store i64 %77, i64* %"062", align 4
  store { i64*, i64*, i64 } %78, { i64*, i64*, i64 }* %"163", align 8
  br label %cond_42_case_1

cond_42_case_0:                                   ; preds = %73
  %"055" = load i64, i64* %"053", align 4
  %"156" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"154", align 8
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @3, i32 0, i32 0) }, { i32, i8* }* %"47_0", align 8
  store i64 %"055", i64* %"44_0", align 4
  store { i64*, i64*, i64 } %"156", { i64*, i64*, i64 }* %"44_1", align 8
  %"47_057" = load { i32, i8* }, { i32, i8* }* %"47_0", align 8
  %"44_058" = load i64, i64* %"44_0", align 4
  %"44_159" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"44_1", align 8
  %79 = extractvalue { i32, i8* } %"47_057", 0
  %80 = extractvalue { i32, i8* } %"47_057", 1
  %81 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.3, i32 0, i32 0), i32 %79, i8* %80)
  call void @abort()
  store i64 0, i64* %"48_0", align 4
  store { i64*, i64*, i64 } zeroinitializer, { i64*, i64*, i64 }* %"48_1", align 8
  %"48_060" = load i64, i64* %"48_0", align 4
  %"48_161" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"48_1", align 8
  store i64 %"48_060", i64* %"049", align 4
  store { i64*, i64*, i64 } %"48_161", { i64*, i64*, i64 }* %"150", align 8
  br label %cond_exit_42

cond_42_case_1:                                   ; preds = %76
  %"064" = load i64, i64* %"062", align 4
  %"165" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"163", align 8
  store i64 %"064", i64* %"50_0", align 4
  store { i64*, i64*, i64 } %"165", { i64*, i64*, i64 }* %"50_1", align 8
  %"50_066" = load i64, i64* %"50_0", align 4
  %"50_167" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"50_1", align 8
  store i64 %"50_066", i64* %"049", align 4
  store { i64*, i64*, i64 } %"50_167", { i64*, i64*, i64 }* %"150", align 8
  br label %cond_exit_42

cond_exit_42:                                     ; preds = %cond_42_case_1, %cond_42_case_0
  %"051" = load i64, i64* %"049", align 4
  %"152" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"150", align 8
  store i64 %"051", i64* %"42_0", align 4
  store { i64*, i64*, i64 } %"152", { i64*, i64*, i64 }* %"42_1", align 8
  %"42_168" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"42_1", align 8
  %array_ptr69 = extractvalue { i64*, i64*, i64 } %"42_168", 0
  %array_mask_ptr70 = extractvalue { i64*, i64*, i64 } %"42_168", 1
  %array_offset71 = extractvalue { i64*, i64*, i64 } %"42_168", 2
  %new_offset = add i64 %array_offset71, 1
  call void @__barray_check_idx_not_borrowed(i64* %array_mask_ptr70, i64 %array_offset71)
  %82 = getelementptr inbounds i64, i64* %array_ptr69, i64 %array_offset71
  %83 = load i64, i64* %82, align 4
  %84 = insertvalue { i64*, i64*, i64 } poison, i64* %array_ptr69, 0
  %85 = insertvalue { i64*, i64*, i64 } %84, i64* %array_mask_ptr70, 1
  %86 = insertvalue { i64*, i64*, i64 } %85, i64 %new_offset, 2
  %87 = insertvalue { i1, { i64*, i64*, i64 }, i64 } { i1 true, { i64*, i64*, i64 } poison, i64 poison }, i64 %83, 2
  %88 = insertvalue { i1, { i64*, i64*, i64 }, i64 } %87, { i64*, i64*, i64 } %86, 1
  store { i1, { i64*, i64*, i64 }, i64 } %88, { i1, { i64*, i64*, i64 }, i64 }* %"52_0", align 8
  %"52_072" = load { i1, { i64*, i64*, i64 }, i64 }, { i1, { i64*, i64*, i64 }, i64 }* %"52_0", align 8
  %89 = extractvalue { i1, { i64*, i64*, i64 }, i64 } %"52_072", 0
  switch i1 %89, label %90 [
    i1 true, label %91
  ]

90:                                               ; preds = %cond_exit_42
  br label %cond_53_case_0

91:                                               ; preds = %cond_exit_42
  %92 = extractvalue { i1, { i64*, i64*, i64 }, i64 } %"52_072", 2
  %93 = extractvalue { i1, { i64*, i64*, i64 }, i64 } %"52_072", 1
  store i64 %92, i64* %"080", align 4
  store { i64*, i64*, i64 } %93, { i64*, i64*, i64 }* %"181", align 8
  br label %cond_53_case_1

cond_53_case_0:                                   ; preds = %90
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @4, i32 0, i32 0) }, { i32, i8* }* %"58_0", align 8
  %"58_077" = load { i32, i8* }, { i32, i8* }* %"58_0", align 8
  %94 = extractvalue { i32, i8* } %"58_077", 0
  %95 = extractvalue { i32, i8* } %"58_077", 1
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.4, i32 0, i32 0), i32 %94, i8* %95)
  call void @abort()
  store i64 0, i64* %"59_0", align 4
  store { i64*, i64*, i64 } zeroinitializer, { i64*, i64*, i64 }* %"59_1", align 8
  %"59_078" = load i64, i64* %"59_0", align 4
  %"59_179" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"59_1", align 8
  store i64 %"59_078", i64* %"073", align 4
  store { i64*, i64*, i64 } %"59_179", { i64*, i64*, i64 }* %"174", align 8
  br label %cond_exit_53

cond_53_case_1:                                   ; preds = %91
  %"082" = load i64, i64* %"080", align 4
  %"183" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"181", align 8
  store i64 %"082", i64* %"61_0", align 4
  store { i64*, i64*, i64 } %"183", { i64*, i64*, i64 }* %"61_1", align 8
  %"61_084" = load i64, i64* %"61_0", align 4
  %"61_185" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"61_1", align 8
  store i64 %"61_084", i64* %"073", align 4
  store { i64*, i64*, i64 } %"61_185", { i64*, i64*, i64 }* %"174", align 8
  br label %cond_exit_53

cond_exit_53:                                     ; preds = %cond_53_case_1, %cond_53_case_0
  %"075" = load i64, i64* %"073", align 4
  %"176" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"174", align 8
  store i64 %"075", i64* %"53_0", align 4
  store { i64*, i64*, i64 } %"176", { i64*, i64*, i64 }* %"53_1", align 8
  %"53_186" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"53_1", align 8
  %array_ptr87 = extractvalue { i64*, i64*, i64 } %"53_186", 0
  %array_mask_ptr88 = extractvalue { i64*, i64*, i64 } %"53_186", 1
  %array_offset89 = extractvalue { i64*, i64*, i64 } %"53_186", 2
  %97 = add i64 %array_offset89, 0
  call void @__barray_check_idx_not_borrowed(i64* %array_mask_ptr88, i64 %97)
  %98 = getelementptr inbounds i64, i64* %array_ptr87, i64 %97
  %99 = load i64, i64* %98, align 4
  %100 = insertvalue { i64*, i64*, i64 } poison, i64* %array_ptr87, 0
  %101 = insertvalue { i64*, i64*, i64 } %100, i64* %array_mask_ptr88, 1
  %102 = insertvalue { i64*, i64*, i64 } %101, i64 %array_offset89, 2
  %103 = insertvalue { i1, { i64*, i64*, i64 }, i64 } { i1 true, { i64*, i64*, i64 } poison, i64 poison }, i64 %99, 2
  %104 = insertvalue { i1, { i64*, i64*, i64 }, i64 } %103, { i64*, i64*, i64 } %102, 1
  store { i1, { i64*, i64*, i64 }, i64 } %104, { i1, { i64*, i64*, i64 }, i64 }* %"63_0", align 8
  %"63_090" = load { i1, { i64*, i64*, i64 }, i64 }, { i1, { i64*, i64*, i64 }, i64 }* %"63_0", align 8
  %105 = extractvalue { i1, { i64*, i64*, i64 }, i64 } %"63_090", 0
  switch i1 %105, label %106 [
    i1 true, label %107
  ]

106:                                              ; preds = %cond_exit_53
  br label %cond_64_case_0

107:                                              ; preds = %cond_exit_53
  %108 = extractvalue { i1, { i64*, i64*, i64 }, i64 } %"63_090", 2
  %109 = extractvalue { i1, { i64*, i64*, i64 }, i64 } %"63_090", 1
  store i64 %108, i64* %"098", align 4
  store { i64*, i64*, i64 } %109, { i64*, i64*, i64 }* %"199", align 8
  br label %cond_64_case_1

cond_64_case_0:                                   ; preds = %106
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @5, i32 0, i32 0) }, { i32, i8* }* %"69_0", align 8
  %"69_095" = load { i32, i8* }, { i32, i8* }* %"69_0", align 8
  %110 = extractvalue { i32, i8* } %"69_095", 0
  %111 = extractvalue { i32, i8* } %"69_095", 1
  %112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.5, i32 0, i32 0), i32 %110, i8* %111)
  call void @abort()
  store i64 0, i64* %"70_0", align 4
  store { i64*, i64*, i64 } zeroinitializer, { i64*, i64*, i64 }* %"70_1", align 8
  %"70_096" = load i64, i64* %"70_0", align 4
  %"70_197" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"70_1", align 8
  store i64 %"70_096", i64* %"091", align 4
  store { i64*, i64*, i64 } %"70_197", { i64*, i64*, i64 }* %"192", align 8
  br label %cond_exit_64

cond_64_case_1:                                   ; preds = %107
  %"0100" = load i64, i64* %"098", align 4
  %"1101" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"199", align 8
  store i64 %"0100", i64* %"72_0", align 4
  store { i64*, i64*, i64 } %"1101", { i64*, i64*, i64 }* %"72_1", align 8
  %"72_0102" = load i64, i64* %"72_0", align 4
  %"72_1103" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"72_1", align 8
  store i64 %"72_0102", i64* %"091", align 4
  store { i64*, i64*, i64 } %"72_1103", { i64*, i64*, i64 }* %"192", align 8
  br label %cond_exit_64

cond_exit_64:                                     ; preds = %cond_64_case_1, %cond_64_case_0
  %"093" = load i64, i64* %"091", align 4
  %"194" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"192", align 8
  store i64 %"093", i64* %"64_0", align 4
  store { i64*, i64*, i64 } %"194", { i64*, i64*, i64 }* %"64_1", align 8
  %"64_1104" = load { i64*, i64*, i64 }, { i64*, i64*, i64 }* %"64_1", align 8
  %array_ptr105 = extractvalue { i64*, i64*, i64 } %"64_1104", 0
  %array_mask_ptr106 = extractvalue { i64*, i64*, i64 } %"64_1104", 1
  %array_offset107 = extractvalue { i64*, i64*, i64 } %"64_1104", 2
  %113 = bitcast i64* %array_ptr105 to i8*
  call void @free(i8* %113)
  %114 = bitcast i64* %array_mask_ptr106 to i8*
  call void @free(i8* %114)
  ret void
}

declare i8* @malloc(i64)

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i64.i64(i64* nocapture writeonly, i8, i64, i1 immarg) #0

define internal void @__barray_check_idx_not_borrowed(i64* %0, i64 %1) {
  %3 = udiv i64 %1, 64
  %4 = getelementptr inbounds i64, i64* %0, i64 %3
  %5 = load i64, i64* %4, align 4
  %6 = urem i64 %1, 64
  %7 = lshr i64 %5, %6
  %8 = trunc i64 %7 to i1
  br i1 %8, label %elem_borrowed, label %elem_free

elem_borrowed:                                    ; preds = %2
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @0, i32 0, i32 0))
  call void @abort()
  unreachable

elem_free:                                        ; preds = %2
  ret void
}

declare i32 @printf(i8*, ...)

declare void @abort()

declare void @free(i8*)

attributes #0 = { argmemonly nofree nounwind willreturn writeonly }
