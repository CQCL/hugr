---
source: hugr-llvm/src/extension/collections/stack_array.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@0 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@1 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.1 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@2 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.2 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@3 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.3 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@4 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.4 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1

define void @_hl.main.1() {
alloca_block:
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  %0 = insertvalue [2 x i64] undef, i64 1, 0
  %1 = insertvalue [2 x i64] %0, i64 2, 1
  %2 = insertvalue [2 x i64] undef, i64 1, 0
  %3 = insertvalue [2 x i64] %2, i64 2, 1
  %extract = extractvalue [2 x i64] %3, 0
  %extract6 = extractvalue [2 x i64] %3, 1
  %4 = icmp ult i64 0, 2
  %5 = icmp ult i64 1, 2
  %6 = and i1 %4, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %entry_block
  %8 = insertvalue { i1, [2 x i64] } { i1 false, [2 x i64] poison }, [2 x i64] %1, 1
  br label %19

9:                                                ; preds = %entry_block
  %10 = alloca i64, i32 2, align 8
  %11 = bitcast i64* %10 to [2 x i64]*
  store [2 x i64] %1, [2 x i64]* %11, align 4
  %12 = getelementptr inbounds i64, i64* %10, i64 0
  %13 = load i64, i64* %12, align 4
  %14 = getelementptr inbounds i64, i64* %10, i64 1
  %15 = load i64, i64* %14, align 4
  store i64 %15, i64* %12, align 4
  store i64 %13, i64* %14, align 4
  %16 = bitcast i64* %10 to [2 x i64]*
  %17 = load [2 x i64], [2 x i64]* %16, align 4
  %18 = insertvalue { i1, [2 x i64] } { i1 true, [2 x i64] poison }, [2 x i64] %17, 1
  br label %19

19:                                               ; preds = %7, %9
  %"0.0" = phi { i1, [2 x i64] } [ %18, %9 ], [ %8, %7 ]
  %20 = extractvalue { i1, [2 x i64] } %"0.0", 0
  switch i1 %20, label %21 [
    i1 true, label %23
  ]

21:                                               ; preds = %19
  %22 = extractvalue { i1, [2 x i64] } %"0.0", 1
  br label %cond_19_case_0

23:                                               ; preds = %19
  %24 = extractvalue { i1, [2 x i64] } %"0.0", 1
  br label %cond_19_case_1

cond_19_case_0:                                   ; preds = %21
  %25 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @0, i32 0, i32 0) }, 0
  %26 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @0, i32 0, i32 0) }, 1
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 %25, i8* %26)
  call void @abort()
  br label %cond_exit_19

cond_19_case_1:                                   ; preds = %23
  br label %cond_exit_19

cond_exit_19:                                     ; preds = %cond_19_case_1, %cond_19_case_0
  %"012.0" = phi [2 x i64] [ zeroinitializer, %cond_19_case_0 ], [ %24, %cond_19_case_1 ]
  %28 = icmp ult i64 0, 2
  br i1 %28, label %30, label %29

29:                                               ; preds = %cond_exit_19
  br label %36

30:                                               ; preds = %cond_exit_19
  %31 = alloca i64, i32 2, align 8
  %32 = bitcast i64* %31 to [2 x i64]*
  store [2 x i64] %"012.0", [2 x i64]* %32, align 4
  %33 = getelementptr inbounds i64, i64* %31, i64 0
  %34 = load i64, i64* %33, align 4
  %35 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %34, 1
  br label %36

36:                                               ; preds = %29, %30
  %"024.0" = phi { i1, i64 } [ %35, %30 ], [ { i1 false, i64 poison }, %29 ]
  %37 = extractvalue { i1, i64 } %"024.0", 0
  switch i1 %37, label %38 [
    i1 true, label %39
  ]

38:                                               ; preds = %36
  br label %cond_31_case_0

39:                                               ; preds = %36
  %40 = extractvalue { i1, i64 } %"024.0", 1
  br label %cond_31_case_1

cond_31_case_0:                                   ; preds = %38
  %41 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, 0
  %42 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, 1
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.1, i32 0, i32 0), i32 %41, i8* %42)
  call void @abort()
  br label %cond_exit_31

cond_31_case_1:                                   ; preds = %39
  br label %cond_exit_31

cond_exit_31:                                     ; preds = %cond_31_case_1, %cond_31_case_0
  %"028.0" = phi i64 [ 0, %cond_31_case_0 ], [ %40, %cond_31_case_1 ]
  %44 = icmp ult i64 1, 2
  br i1 %44, label %48, label %45

45:                                               ; preds = %cond_exit_31
  %46 = insertvalue { i1, i64, [2 x i64] } { i1 false, i64 poison, [2 x i64] poison }, i64 %"028.0", 1
  %47 = insertvalue { i1, i64, [2 x i64] } %46, [2 x i64] %"012.0", 2
  br label %57

48:                                               ; preds = %cond_exit_31
  %49 = alloca i64, i32 2, align 8
  %50 = bitcast i64* %49 to [2 x i64]*
  store [2 x i64] %"012.0", [2 x i64]* %50, align 4
  %51 = getelementptr inbounds i64, i64* %49, i64 1
  %52 = load i64, i64* %51, align 4
  store i64 %"028.0", i64* %51, align 4
  %53 = bitcast i64* %49 to [2 x i64]*
  %54 = load [2 x i64], [2 x i64]* %53, align 4
  %55 = insertvalue { i1, i64, [2 x i64] } { i1 true, i64 poison, [2 x i64] poison }, i64 %52, 1
  %56 = insertvalue { i1, i64, [2 x i64] } %55, [2 x i64] %54, 2
  br label %57

57:                                               ; preds = %45, %48
  %"038.0" = phi { i1, i64, [2 x i64] } [ %56, %48 ], [ %47, %45 ]
  %58 = extractvalue { i1, i64, [2 x i64] } %"038.0", 0
  switch i1 %58, label %59 [
    i1 true, label %62
  ]

59:                                               ; preds = %57
  %60 = extractvalue { i1, i64, [2 x i64] } %"038.0", 1
  %61 = extractvalue { i1, i64, [2 x i64] } %"038.0", 2
  br label %cond_42_case_0

62:                                               ; preds = %57
  %63 = extractvalue { i1, i64, [2 x i64] } %"038.0", 1
  %64 = extractvalue { i1, i64, [2 x i64] } %"038.0", 2
  br label %cond_42_case_1

cond_42_case_0:                                   ; preds = %59
  %65 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @2, i32 0, i32 0) }, 0
  %66 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @2, i32 0, i32 0) }, 1
  %67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.2, i32 0, i32 0), i32 %65, i8* %66)
  call void @abort()
  br label %cond_exit_42

cond_42_case_1:                                   ; preds = %62
  br label %cond_exit_42

cond_exit_42:                                     ; preds = %cond_42_case_1, %cond_42_case_0
  %"041.0" = phi i64 [ 0, %cond_42_case_0 ], [ %63, %cond_42_case_1 ]
  %"142.0" = phi [2 x i64] [ zeroinitializer, %cond_42_case_0 ], [ %64, %cond_42_case_1 ]
  %68 = alloca i64, i32 2, align 8
  %69 = bitcast i64* %68 to [2 x i64]*
  store [2 x i64] %"142.0", [2 x i64]* %69, align 4
  %70 = getelementptr i64, i64* %68, i32 1
  %71 = load i64, i64* %68, align 4
  %72 = bitcast i64* %70 to [1 x i64]*
  %73 = load [1 x i64], [1 x i64]* %72, align 4
  %74 = insertvalue { i1, i64, [1 x i64] } { i1 true, i64 poison, [1 x i64] poison }, i64 %71, 1
  %75 = insertvalue { i1, i64, [1 x i64] } %74, [1 x i64] %73, 2
  %76 = extractvalue { i1, i64, [1 x i64] } %75, 0
  switch i1 %76, label %77 [
    i1 true, label %78
  ]

77:                                               ; preds = %cond_exit_42
  br label %cond_53_case_0

78:                                               ; preds = %cond_exit_42
  %79 = extractvalue { i1, i64, [1 x i64] } %75, 1
  %80 = extractvalue { i1, i64, [1 x i64] } %75, 2
  br label %cond_53_case_1

cond_53_case_0:                                   ; preds = %77
  %81 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @3, i32 0, i32 0) }, 0
  %82 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @3, i32 0, i32 0) }, 1
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.3, i32 0, i32 0), i32 %81, i8* %82)
  call void @abort()
  br label %cond_exit_53

cond_53_case_1:                                   ; preds = %78
  br label %cond_exit_53

cond_exit_53:                                     ; preds = %cond_53_case_1, %cond_53_case_0
  %"062.0" = phi i64 [ 0, %cond_53_case_0 ], [ %79, %cond_53_case_1 ]
  %"163.0" = phi [1 x i64] [ zeroinitializer, %cond_53_case_0 ], [ %80, %cond_53_case_1 ]
  %84 = alloca i64, align 8
  %85 = bitcast i64* %84 to [1 x i64]*
  store [1 x i64] %"163.0", [1 x i64]* %85, align 4
  %86 = getelementptr i64, i64* %84, i32 0
  %87 = load i64, i64* %86, align 4
  %88 = bitcast i64* %84 to [0 x i64]*
  %89 = load [0 x i64], [0 x i64]* %88, align 4
  %90 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %87, 1
  %91 = extractvalue { i1, i64 } %90, 0
  switch i1 %91, label %92 [
    i1 true, label %93
  ]

92:                                               ; preds = %cond_exit_53
  br label %cond_64_case_0

93:                                               ; preds = %cond_exit_53
  %94 = extractvalue { i1, i64 } %90, 1
  br label %cond_64_case_1

cond_64_case_0:                                   ; preds = %92
  %95 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @4, i32 0, i32 0) }, 0
  %96 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @4, i32 0, i32 0) }, 1
  %97 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.4, i32 0, i32 0), i32 %95, i8* %96)
  call void @abort()
  br label %cond_exit_64

cond_64_case_1:                                   ; preds = %93
  br label %cond_exit_64

cond_exit_64:                                     ; preds = %cond_64_case_1, %cond_64_case_0
  %"077.0" = phi i64 [ 0, %cond_64_case_0 ], [ %94, %cond_64_case_1 ]
  ret void
}

declare i32 @printf(i8*, ...)

declare void @abort()
