---
source: hugr-llvm/src/extension/collections/stack_array.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

define void @_hl.main.1() {
alloca_block:
  %"7_0" = alloca i64, align 8
  %"5_0" = alloca i64, align 8
  %"8_0" = alloca { i64*, i64 }, align 8
  %"9_0" = alloca { i1, i64 }, align 8
  %"9_1" = alloca { i64*, i64 }, align 8
  %"0" = alloca { i1, i64 }, align 8
  %"1" = alloca { i64*, i64 }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store i64 2, i64* %"7_0", align 4
  store i64 1, i64* %"5_0", align 4
  %"5_01" = load i64, i64* %"5_0", align 4
  %"7_02" = load i64, i64* %"7_0", align 4
  %0 = call i8* @malloc(i64 mul (i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i64 2))
  %1 = bitcast i8* %0 to i64*
  %2 = insertvalue { i64*, i64 } poison, i64* %1, 0
  %3 = insertvalue { i64*, i64 } %2, i64 0, 1
  %4 = getelementptr inbounds i64, i64* %1, i64 0
  store i64 %"5_01", i64* %4, align 4
  %5 = getelementptr inbounds i64, i64* %1, i64 1
  store i64 %"7_02", i64* %5, align 4
  store { i64*, i64 } %3, { i64*, i64 }* %"8_0", align 8
  %"8_03" = load { i64*, i64 }, { i64*, i64 }* %"8_0", align 8
  %"5_04" = load i64, i64* %"5_0", align 4
  %array_ptr = extractvalue { i64*, i64 } %"8_03", 0
  %array_offset = extractvalue { i64*, i64 } %"8_03", 1
  %6 = icmp ult i64 %"5_04", 2
  br i1 %6, label %8, label %7

7:                                                ; preds = %entry_block
  store { i1, i64 } { i1 false, i64 poison }, { i1, i64 }* %"0", align 4
  store { i64*, i64 } %"8_03", { i64*, i64 }* %"1", align 8
  br label %13

8:                                                ; preds = %entry_block
  %9 = add i64 %"5_04", %array_offset
  %10 = getelementptr inbounds i64, i64* %array_ptr, i64 %9
  %11 = load i64, i64* %10, align 4
  %12 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %11, 1
  store { i1, i64 } %12, { i1, i64 }* %"0", align 4
  store { i64*, i64 } %"8_03", { i64*, i64 }* %"1", align 8
  br label %13

13:                                               ; preds = %7, %8
  %"05" = load { i1, i64 }, { i1, i64 }* %"0", align 4
  %"16" = load { i64*, i64 }, { i64*, i64 }* %"1", align 8
  store { i1, i64 } %"05", { i1, i64 }* %"9_0", align 4
  store { i64*, i64 } %"16", { i64*, i64 }* %"9_1", align 8
  %"9_17" = load { i64*, i64 }, { i64*, i64 }* %"9_1", align 8
  %array_ptr8 = extractvalue { i64*, i64 } %"9_17", 0
  %14 = bitcast i64* %array_ptr8 to i8*
  call void @free(i8* %14)
  ret void
}

declare i8* @malloc(i64)

declare void @free(i8*)
