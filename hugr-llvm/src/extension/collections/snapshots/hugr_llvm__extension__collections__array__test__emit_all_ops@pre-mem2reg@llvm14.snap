---
source: hugr-llvm/src/extension/collections/array.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@0 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@1 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.1 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@2 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.2 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@3 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.3 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@4 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.4 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1

define void @_hl.main.1() {
alloca_block:
  %"12_0" = alloca i64, align 8
  %"10_0" = alloca i64, align 8
  %"13_0" = alloca { i64*, i64 }, align 8
  %"8_0" = alloca i64, align 8
  %"14_0" = alloca { i1, { i64*, i64 } }, align 8
  %"0" = alloca { i1, { i64*, i64 } }, align 8
  %"16_0" = alloca { i64*, i64 }, align 8
  %"08" = alloca { i64*, i64 }, align 8
  %"010" = alloca { i64*, i64 }, align 8
  %"21_0" = alloca { i32, i8* }, align 8
  %"18_0" = alloca { i64*, i64 }, align 8
  %"22_0" = alloca { i64*, i64 }, align 8
  %"015" = alloca { i64*, i64 }, align 8
  %"24_0" = alloca { i64*, i64 }, align 8
  %"26_0" = alloca { i1, i64 }, align 8
  %"26_1" = alloca { i64*, i64 }, align 8
  %"022" = alloca { i1, i64 }, align 8
  %"1" = alloca { i64*, i64 }, align 8
  %"28_0" = alloca i64, align 8
  %"026" = alloca i64, align 8
  %"33_0" = alloca { i32, i8* }, align 8
  %"34_0" = alloca i64, align 8
  %"030" = alloca i64, align 8
  %"36_0" = alloca i64, align 8
  %"38_0" = alloca { i1, { i64*, i64 }, i64 }, align 8
  %"038" = alloca { i1, { i64*, i64 }, i64 }, align 8
  %"39_0" = alloca i64, align 8
  %"39_1" = alloca { i64*, i64 }, align 8
  %"041" = alloca i64, align 8
  %"142" = alloca { i64*, i64 }, align 8
  %"045" = alloca i64, align 8
  %"146" = alloca { i64*, i64 }, align 8
  %"44_0" = alloca { i32, i8* }, align 8
  %"41_0" = alloca i64, align 8
  %"41_1" = alloca { i64*, i64 }, align 8
  %"45_0" = alloca i64, align 8
  %"45_1" = alloca { i64*, i64 }, align 8
  %"054" = alloca i64, align 8
  %"155" = alloca { i64*, i64 }, align 8
  %"47_0" = alloca i64, align 8
  %"47_1" = alloca { i64*, i64 }, align 8
  %"49_0" = alloca { i1, { i64*, i64 }, i64 }, align 8
  %"50_0" = alloca i64, align 8
  %"50_1" = alloca { i64*, i64 }, align 8
  %"064" = alloca i64, align 8
  %"165" = alloca { i64*, i64 }, align 8
  %"55_0" = alloca { i32, i8* }, align 8
  %"56_0" = alloca i64, align 8
  %"56_1" = alloca { i64*, i64 }, align 8
  %"071" = alloca i64, align 8
  %"172" = alloca { i64*, i64 }, align 8
  %"58_0" = alloca i64, align 8
  %"58_1" = alloca { i64*, i64 }, align 8
  %"60_0" = alloca { i1, { i64*, i64 }, i64 }, align 8
  %"61_0" = alloca i64, align 8
  %"61_1" = alloca { i64*, i64 }, align 8
  %"081" = alloca i64, align 8
  %"182" = alloca { i64*, i64 }, align 8
  %"66_0" = alloca { i32, i8* }, align 8
  %"67_0" = alloca i64, align 8
  %"67_1" = alloca { i64*, i64 }, align 8
  %"088" = alloca i64, align 8
  %"189" = alloca { i64*, i64 }, align 8
  %"69_0" = alloca i64, align 8
  %"69_1" = alloca { i64*, i64 }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store i64 2, i64* %"12_0", align 4
  store i64 1, i64* %"10_0", align 4
  %"10_01" = load i64, i64* %"10_0", align 4
  %"12_02" = load i64, i64* %"12_0", align 4
  %0 = call i8* @malloc(i64 mul (i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i64 2))
  %1 = bitcast i8* %0 to i64*
  %2 = insertvalue { i64*, i64 } poison, i64* %1, 0
  %3 = insertvalue { i64*, i64 } %2, i64 0, 1
  %4 = getelementptr inbounds i64, i64* %1, i64 0
  store i64 %"10_01", i64* %4, align 4
  %5 = getelementptr inbounds i64, i64* %1, i64 1
  store i64 %"12_02", i64* %5, align 4
  store { i64*, i64 } %3, { i64*, i64 }* %"13_0", align 8
  store i64 0, i64* %"8_0", align 4
  %"13_03" = load { i64*, i64 }, { i64*, i64 }* %"13_0", align 8
  %"8_04" = load i64, i64* %"8_0", align 4
  %"10_05" = load i64, i64* %"10_0", align 4
  %array_ptr = extractvalue { i64*, i64 } %"13_03", 0
  %array_offset = extractvalue { i64*, i64 } %"13_03", 1
  %6 = icmp ult i64 %"8_04", 2
  %7 = icmp ult i64 %"10_05", 2
  %8 = and i1 %6, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %entry_block
  %10 = insertvalue { i1, { i64*, i64 } } { i1 false, { i64*, i64 } poison }, { i64*, i64 } %"13_03", 1
  store { i1, { i64*, i64 } } %10, { i1, { i64*, i64 } }* %"0", align 8
  br label %19

11:                                               ; preds = %entry_block
  %12 = add i64 %"8_04", %array_offset
  %13 = add i64 %"10_05", %array_offset
  %14 = getelementptr inbounds i64, i64* %array_ptr, i64 %12
  %15 = load i64, i64* %14, align 4
  %16 = getelementptr inbounds i64, i64* %array_ptr, i64 %13
  %17 = load i64, i64* %16, align 4
  store i64 %17, i64* %14, align 4
  store i64 %15, i64* %16, align 4
  %18 = insertvalue { i1, { i64*, i64 } } { i1 true, { i64*, i64 } poison }, { i64*, i64 } %"13_03", 1
  store { i1, { i64*, i64 } } %18, { i1, { i64*, i64 } }* %"0", align 8
  br label %19

19:                                               ; preds = %9, %11
  %"06" = load { i1, { i64*, i64 } }, { i1, { i64*, i64 } }* %"0", align 8
  store { i1, { i64*, i64 } } %"06", { i1, { i64*, i64 } }* %"14_0", align 8
  %"14_07" = load { i1, { i64*, i64 } }, { i1, { i64*, i64 } }* %"14_0", align 8
  %20 = extractvalue { i1, { i64*, i64 } } %"14_07", 0
  switch i1 %20, label %21 [
    i1 true, label %23
  ]

21:                                               ; preds = %19
  %22 = extractvalue { i1, { i64*, i64 } } %"14_07", 1
  store { i64*, i64 } %22, { i64*, i64 }* %"010", align 8
  br label %cond_16_case_0

23:                                               ; preds = %19
  %24 = extractvalue { i1, { i64*, i64 } } %"14_07", 1
  store { i64*, i64 } %24, { i64*, i64 }* %"015", align 8
  br label %cond_16_case_1

cond_16_case_0:                                   ; preds = %21
  %"011" = load { i64*, i64 }, { i64*, i64 }* %"010", align 8
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @0, i32 0, i32 0) }, { i32, i8* }* %"21_0", align 8
  store { i64*, i64 } %"011", { i64*, i64 }* %"18_0", align 8
  %"21_012" = load { i32, i8* }, { i32, i8* }* %"21_0", align 8
  %"18_013" = load { i64*, i64 }, { i64*, i64 }* %"18_0", align 8
  %25 = extractvalue { i32, i8* } %"21_012", 0
  %26 = extractvalue { i32, i8* } %"21_012", 1
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 %25, i8* %26)
  call void @abort()
  store { i64*, i64 } zeroinitializer, { i64*, i64 }* %"22_0", align 8
  %"22_014" = load { i64*, i64 }, { i64*, i64 }* %"22_0", align 8
  store { i64*, i64 } %"22_014", { i64*, i64 }* %"08", align 8
  br label %cond_exit_16

cond_16_case_1:                                   ; preds = %23
  %"016" = load { i64*, i64 }, { i64*, i64 }* %"015", align 8
  store { i64*, i64 } %"016", { i64*, i64 }* %"24_0", align 8
  %"24_017" = load { i64*, i64 }, { i64*, i64 }* %"24_0", align 8
  store { i64*, i64 } %"24_017", { i64*, i64 }* %"08", align 8
  br label %cond_exit_16

cond_exit_16:                                     ; preds = %cond_16_case_1, %cond_16_case_0
  %"09" = load { i64*, i64 }, { i64*, i64 }* %"08", align 8
  store { i64*, i64 } %"09", { i64*, i64 }* %"16_0", align 8
  %"16_018" = load { i64*, i64 }, { i64*, i64 }* %"16_0", align 8
  %"8_019" = load i64, i64* %"8_0", align 4
  %array_ptr20 = extractvalue { i64*, i64 } %"16_018", 0
  %array_offset21 = extractvalue { i64*, i64 } %"16_018", 1
  %28 = icmp ult i64 %"8_019", 2
  br i1 %28, label %30, label %29

29:                                               ; preds = %cond_exit_16
  store { i1, i64 } { i1 false, i64 poison }, { i1, i64 }* %"022", align 4
  store { i64*, i64 } %"16_018", { i64*, i64 }* %"1", align 8
  br label %35

30:                                               ; preds = %cond_exit_16
  %31 = add i64 %"8_019", %array_offset21
  %32 = getelementptr inbounds i64, i64* %array_ptr20, i64 %31
  %33 = load i64, i64* %32, align 4
  %34 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %33, 1
  store { i1, i64 } %34, { i1, i64 }* %"022", align 4
  store { i64*, i64 } %"16_018", { i64*, i64 }* %"1", align 8
  br label %35

35:                                               ; preds = %29, %30
  %"023" = load { i1, i64 }, { i1, i64 }* %"022", align 4
  %"124" = load { i64*, i64 }, { i64*, i64 }* %"1", align 8
  store { i1, i64 } %"023", { i1, i64 }* %"26_0", align 4
  store { i64*, i64 } %"124", { i64*, i64 }* %"26_1", align 8
  %"26_025" = load { i1, i64 }, { i1, i64 }* %"26_0", align 4
  %36 = extractvalue { i1, i64 } %"26_025", 0
  switch i1 %36, label %37 [
    i1 true, label %38
  ]

37:                                               ; preds = %35
  br label %cond_28_case_0

38:                                               ; preds = %35
  %39 = extractvalue { i1, i64 } %"26_025", 1
  store i64 %39, i64* %"030", align 4
  br label %cond_28_case_1

cond_28_case_0:                                   ; preds = %37
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, { i32, i8* }* %"33_0", align 8
  %"33_028" = load { i32, i8* }, { i32, i8* }* %"33_0", align 8
  %40 = extractvalue { i32, i8* } %"33_028", 0
  %41 = extractvalue { i32, i8* } %"33_028", 1
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.1, i32 0, i32 0), i32 %40, i8* %41)
  call void @abort()
  store i64 0, i64* %"34_0", align 4
  %"34_029" = load i64, i64* %"34_0", align 4
  store i64 %"34_029", i64* %"026", align 4
  br label %cond_exit_28

cond_28_case_1:                                   ; preds = %38
  %"031" = load i64, i64* %"030", align 4
  store i64 %"031", i64* %"36_0", align 4
  %"36_032" = load i64, i64* %"36_0", align 4
  store i64 %"36_032", i64* %"026", align 4
  br label %cond_exit_28

cond_exit_28:                                     ; preds = %cond_28_case_1, %cond_28_case_0
  %"027" = load i64, i64* %"026", align 4
  store i64 %"027", i64* %"28_0", align 4
  %"26_133" = load { i64*, i64 }, { i64*, i64 }* %"26_1", align 8
  %"10_034" = load i64, i64* %"10_0", align 4
  %"28_035" = load i64, i64* %"28_0", align 4
  %array_ptr36 = extractvalue { i64*, i64 } %"26_133", 0
  %array_offset37 = extractvalue { i64*, i64 } %"26_133", 1
  %43 = icmp ult i64 %"10_034", 2
  br i1 %43, label %47, label %44

44:                                               ; preds = %cond_exit_28
  %45 = insertvalue { i1, { i64*, i64 }, i64 } { i1 false, { i64*, i64 } poison, i64 poison }, i64 %"28_035", 2
  %46 = insertvalue { i1, { i64*, i64 }, i64 } %45, { i64*, i64 } %"26_133", 1
  store { i1, { i64*, i64 }, i64 } %46, { i1, { i64*, i64 }, i64 }* %"038", align 8
  br label %53

47:                                               ; preds = %cond_exit_28
  %48 = add i64 %"10_034", %array_offset37
  %49 = getelementptr inbounds i64, i64* %array_ptr36, i64 %48
  %50 = load i64, i64* %49, align 4
  store i64 %"28_035", i64* %49, align 4
  %51 = insertvalue { i1, { i64*, i64 }, i64 } { i1 true, { i64*, i64 } poison, i64 poison }, i64 %50, 2
  %52 = insertvalue { i1, { i64*, i64 }, i64 } %51, { i64*, i64 } %"26_133", 1
  store { i1, { i64*, i64 }, i64 } %52, { i1, { i64*, i64 }, i64 }* %"038", align 8
  br label %53

53:                                               ; preds = %44, %47
  %"039" = load { i1, { i64*, i64 }, i64 }, { i1, { i64*, i64 }, i64 }* %"038", align 8
  store { i1, { i64*, i64 }, i64 } %"039", { i1, { i64*, i64 }, i64 }* %"38_0", align 8
  %"38_040" = load { i1, { i64*, i64 }, i64 }, { i1, { i64*, i64 }, i64 }* %"38_0", align 8
  %54 = extractvalue { i1, { i64*, i64 }, i64 } %"38_040", 0
  switch i1 %54, label %55 [
    i1 true, label %58
  ]

55:                                               ; preds = %53
  %56 = extractvalue { i1, { i64*, i64 }, i64 } %"38_040", 2
  %57 = extractvalue { i1, { i64*, i64 }, i64 } %"38_040", 1
  store i64 %56, i64* %"045", align 4
  store { i64*, i64 } %57, { i64*, i64 }* %"146", align 8
  br label %cond_39_case_0

58:                                               ; preds = %53
  %59 = extractvalue { i1, { i64*, i64 }, i64 } %"38_040", 2
  %60 = extractvalue { i1, { i64*, i64 }, i64 } %"38_040", 1
  store i64 %59, i64* %"054", align 4
  store { i64*, i64 } %60, { i64*, i64 }* %"155", align 8
  br label %cond_39_case_1

cond_39_case_0:                                   ; preds = %55
  %"047" = load i64, i64* %"045", align 4
  %"148" = load { i64*, i64 }, { i64*, i64 }* %"146", align 8
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @2, i32 0, i32 0) }, { i32, i8* }* %"44_0", align 8
  store i64 %"047", i64* %"41_0", align 4
  store { i64*, i64 } %"148", { i64*, i64 }* %"41_1", align 8
  %"44_049" = load { i32, i8* }, { i32, i8* }* %"44_0", align 8
  %"41_050" = load i64, i64* %"41_0", align 4
  %"41_151" = load { i64*, i64 }, { i64*, i64 }* %"41_1", align 8
  %61 = extractvalue { i32, i8* } %"44_049", 0
  %62 = extractvalue { i32, i8* } %"44_049", 1
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.2, i32 0, i32 0), i32 %61, i8* %62)
  call void @abort()
  store i64 0, i64* %"45_0", align 4
  store { i64*, i64 } zeroinitializer, { i64*, i64 }* %"45_1", align 8
  %"45_052" = load i64, i64* %"45_0", align 4
  %"45_153" = load { i64*, i64 }, { i64*, i64 }* %"45_1", align 8
  store i64 %"45_052", i64* %"041", align 4
  store { i64*, i64 } %"45_153", { i64*, i64 }* %"142", align 8
  br label %cond_exit_39

cond_39_case_1:                                   ; preds = %58
  %"056" = load i64, i64* %"054", align 4
  %"157" = load { i64*, i64 }, { i64*, i64 }* %"155", align 8
  store i64 %"056", i64* %"47_0", align 4
  store { i64*, i64 } %"157", { i64*, i64 }* %"47_1", align 8
  %"47_058" = load i64, i64* %"47_0", align 4
  %"47_159" = load { i64*, i64 }, { i64*, i64 }* %"47_1", align 8
  store i64 %"47_058", i64* %"041", align 4
  store { i64*, i64 } %"47_159", { i64*, i64 }* %"142", align 8
  br label %cond_exit_39

cond_exit_39:                                     ; preds = %cond_39_case_1, %cond_39_case_0
  %"043" = load i64, i64* %"041", align 4
  %"144" = load { i64*, i64 }, { i64*, i64 }* %"142", align 8
  store i64 %"043", i64* %"39_0", align 4
  store { i64*, i64 } %"144", { i64*, i64 }* %"39_1", align 8
  %"39_160" = load { i64*, i64 }, { i64*, i64 }* %"39_1", align 8
  %array_ptr61 = extractvalue { i64*, i64 } %"39_160", 0
  %array_offset62 = extractvalue { i64*, i64 } %"39_160", 1
  %new_offset = add i64 %array_offset62, 1
  %64 = getelementptr inbounds i64, i64* %array_ptr61, i64 %array_offset62
  %65 = load i64, i64* %64, align 4
  %66 = insertvalue { i64*, i64 } poison, i64* %array_ptr61, 0
  %67 = insertvalue { i64*, i64 } %66, i64 %new_offset, 1
  %68 = insertvalue { i1, { i64*, i64 }, i64 } { i1 true, { i64*, i64 } poison, i64 poison }, i64 %65, 2
  %69 = insertvalue { i1, { i64*, i64 }, i64 } %68, { i64*, i64 } %67, 1
  store { i1, { i64*, i64 }, i64 } %69, { i1, { i64*, i64 }, i64 }* %"49_0", align 8
  %"49_063" = load { i1, { i64*, i64 }, i64 }, { i1, { i64*, i64 }, i64 }* %"49_0", align 8
  %70 = extractvalue { i1, { i64*, i64 }, i64 } %"49_063", 0
  switch i1 %70, label %71 [
    i1 true, label %72
  ]

71:                                               ; preds = %cond_exit_39
  br label %cond_50_case_0

72:                                               ; preds = %cond_exit_39
  %73 = extractvalue { i1, { i64*, i64 }, i64 } %"49_063", 2
  %74 = extractvalue { i1, { i64*, i64 }, i64 } %"49_063", 1
  store i64 %73, i64* %"071", align 4
  store { i64*, i64 } %74, { i64*, i64 }* %"172", align 8
  br label %cond_50_case_1

cond_50_case_0:                                   ; preds = %71
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @3, i32 0, i32 0) }, { i32, i8* }* %"55_0", align 8
  %"55_068" = load { i32, i8* }, { i32, i8* }* %"55_0", align 8
  %75 = extractvalue { i32, i8* } %"55_068", 0
  %76 = extractvalue { i32, i8* } %"55_068", 1
  %77 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.3, i32 0, i32 0), i32 %75, i8* %76)
  call void @abort()
  store i64 0, i64* %"56_0", align 4
  store { i64*, i64 } zeroinitializer, { i64*, i64 }* %"56_1", align 8
  %"56_069" = load i64, i64* %"56_0", align 4
  %"56_170" = load { i64*, i64 }, { i64*, i64 }* %"56_1", align 8
  store i64 %"56_069", i64* %"064", align 4
  store { i64*, i64 } %"56_170", { i64*, i64 }* %"165", align 8
  br label %cond_exit_50

cond_50_case_1:                                   ; preds = %72
  %"073" = load i64, i64* %"071", align 4
  %"174" = load { i64*, i64 }, { i64*, i64 }* %"172", align 8
  store i64 %"073", i64* %"58_0", align 4
  store { i64*, i64 } %"174", { i64*, i64 }* %"58_1", align 8
  %"58_075" = load i64, i64* %"58_0", align 4
  %"58_176" = load { i64*, i64 }, { i64*, i64 }* %"58_1", align 8
  store i64 %"58_075", i64* %"064", align 4
  store { i64*, i64 } %"58_176", { i64*, i64 }* %"165", align 8
  br label %cond_exit_50

cond_exit_50:                                     ; preds = %cond_50_case_1, %cond_50_case_0
  %"066" = load i64, i64* %"064", align 4
  %"167" = load { i64*, i64 }, { i64*, i64 }* %"165", align 8
  store i64 %"066", i64* %"50_0", align 4
  store { i64*, i64 } %"167", { i64*, i64 }* %"50_1", align 8
  %"50_177" = load { i64*, i64 }, { i64*, i64 }* %"50_1", align 8
  %array_ptr78 = extractvalue { i64*, i64 } %"50_177", 0
  %array_offset79 = extractvalue { i64*, i64 } %"50_177", 1
  %78 = add i64 %array_offset79, 0
  %79 = getelementptr inbounds i64, i64* %array_ptr78, i64 %78
  %80 = load i64, i64* %79, align 4
  %81 = insertvalue { i64*, i64 } poison, i64* %array_ptr78, 0
  %82 = insertvalue { i64*, i64 } %81, i64 %array_offset79, 1
  %83 = insertvalue { i1, { i64*, i64 }, i64 } { i1 true, { i64*, i64 } poison, i64 poison }, i64 %80, 2
  %84 = insertvalue { i1, { i64*, i64 }, i64 } %83, { i64*, i64 } %82, 1
  store { i1, { i64*, i64 }, i64 } %84, { i1, { i64*, i64 }, i64 }* %"60_0", align 8
  %"60_080" = load { i1, { i64*, i64 }, i64 }, { i1, { i64*, i64 }, i64 }* %"60_0", align 8
  %85 = extractvalue { i1, { i64*, i64 }, i64 } %"60_080", 0
  switch i1 %85, label %86 [
    i1 true, label %87
  ]

86:                                               ; preds = %cond_exit_50
  br label %cond_61_case_0

87:                                               ; preds = %cond_exit_50
  %88 = extractvalue { i1, { i64*, i64 }, i64 } %"60_080", 2
  %89 = extractvalue { i1, { i64*, i64 }, i64 } %"60_080", 1
  store i64 %88, i64* %"088", align 4
  store { i64*, i64 } %89, { i64*, i64 }* %"189", align 8
  br label %cond_61_case_1

cond_61_case_0:                                   ; preds = %86
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @4, i32 0, i32 0) }, { i32, i8* }* %"66_0", align 8
  %"66_085" = load { i32, i8* }, { i32, i8* }* %"66_0", align 8
  %90 = extractvalue { i32, i8* } %"66_085", 0
  %91 = extractvalue { i32, i8* } %"66_085", 1
  %92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.4, i32 0, i32 0), i32 %90, i8* %91)
  call void @abort()
  store i64 0, i64* %"67_0", align 4
  store { i64*, i64 } zeroinitializer, { i64*, i64 }* %"67_1", align 8
  %"67_086" = load i64, i64* %"67_0", align 4
  %"67_187" = load { i64*, i64 }, { i64*, i64 }* %"67_1", align 8
  store i64 %"67_086", i64* %"081", align 4
  store { i64*, i64 } %"67_187", { i64*, i64 }* %"182", align 8
  br label %cond_exit_61

cond_61_case_1:                                   ; preds = %87
  %"090" = load i64, i64* %"088", align 4
  %"191" = load { i64*, i64 }, { i64*, i64 }* %"189", align 8
  store i64 %"090", i64* %"69_0", align 4
  store { i64*, i64 } %"191", { i64*, i64 }* %"69_1", align 8
  %"69_092" = load i64, i64* %"69_0", align 4
  %"69_193" = load { i64*, i64 }, { i64*, i64 }* %"69_1", align 8
  store i64 %"69_092", i64* %"081", align 4
  store { i64*, i64 } %"69_193", { i64*, i64 }* %"182", align 8
  br label %cond_exit_61

cond_exit_61:                                     ; preds = %cond_61_case_1, %cond_61_case_0
  %"083" = load i64, i64* %"081", align 4
  %"184" = load { i64*, i64 }, { i64*, i64 }* %"182", align 8
  store i64 %"083", i64* %"61_0", align 4
  store { i64*, i64 } %"184", { i64*, i64 }* %"61_1", align 8
  %"61_194" = load { i64*, i64 }, { i64*, i64 }* %"61_1", align 8
  %array_ptr95 = extractvalue { i64*, i64 } %"61_194", 0
  %array_offset96 = extractvalue { i64*, i64 } %"61_194", 1
  %93 = bitcast i64* %array_ptr95 to i8*
  call void @free(i8* %93)
  ret void
}

declare i8* @malloc(i64)

declare i32 @printf(i8*, ...)

declare void @abort()

declare void @free(i8*)
