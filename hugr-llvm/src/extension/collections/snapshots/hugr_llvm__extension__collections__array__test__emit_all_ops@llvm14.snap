---
source: hugr-llvm/src/extension/collections/array.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@0 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@1 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.1 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@2 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.2 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@3 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.3 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@4 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.4 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1

define void @_hl.main.1() {
alloca_block:
  %0 = alloca i64, i32 2, align 8
  %1 = alloca i64, i32 2, align 8
  %2 = alloca i64, i32 2, align 8
  %3 = alloca i64, i32 2, align 8
  %4 = alloca i64, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  %5 = insertvalue [2 x i64] undef, i64 1, 0
  %6 = insertvalue [2 x i64] %5, i64 2, 1
  %7 = icmp ult i64 0, 2
  %8 = icmp ult i64 1, 2
  %9 = and i1 %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %entry_block
  %11 = insertvalue { i1, [2 x i64] } { i1 false, [2 x i64] poison }, [2 x i64] %6, 1
  br label %21

12:                                               ; preds = %entry_block
  %13 = bitcast i64* %0 to [2 x i64]*
  store [2 x i64] %6, [2 x i64]* %13, align 4
  %14 = getelementptr inbounds i64, i64* %0, i64 0
  %15 = load i64, i64* %14, align 4
  %16 = getelementptr inbounds i64, i64* %0, i64 1
  %17 = load i64, i64* %16, align 4
  store i64 %17, i64* %14, align 4
  store i64 %15, i64* %16, align 4
  %18 = bitcast i64* %0 to [2 x i64]*
  %19 = load [2 x i64], [2 x i64]* %18, align 4
  %20 = insertvalue { i1, [2 x i64] } { i1 true, [2 x i64] poison }, [2 x i64] %19, 1
  br label %21

21:                                               ; preds = %10, %12
  %"0.0" = phi { i1, [2 x i64] } [ %20, %12 ], [ %11, %10 ]
  %22 = extractvalue { i1, [2 x i64] } %"0.0", 0
  switch i1 %22, label %23 [
    i1 true, label %25
  ]

23:                                               ; preds = %21
  %24 = extractvalue { i1, [2 x i64] } %"0.0", 1
  br label %cond_16_case_0

25:                                               ; preds = %21
  %26 = extractvalue { i1, [2 x i64] } %"0.0", 1
  br label %cond_16_case_1

cond_16_case_0:                                   ; preds = %23
  %27 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @0, i32 0, i32 0) }, 0
  %28 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @0, i32 0, i32 0) }, 1
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 %27, i8* %28)
  call void @abort()
  br label %cond_exit_16

cond_16_case_1:                                   ; preds = %25
  br label %cond_exit_16

cond_exit_16:                                     ; preds = %cond_16_case_1, %cond_16_case_0
  %"014.0" = phi [2 x i64] [ zeroinitializer, %cond_16_case_0 ], [ %26, %cond_16_case_1 ]
  %30 = icmp ult i64 0, 2
  br i1 %30, label %32, label %31

31:                                               ; preds = %cond_exit_16
  br label %37

32:                                               ; preds = %cond_exit_16
  %33 = bitcast i64* %1 to [2 x i64]*
  store [2 x i64] %"014.0", [2 x i64]* %33, align 4
  %34 = getelementptr inbounds i64, i64* %1, i64 0
  %35 = load i64, i64* %34, align 4
  %36 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %35, 1
  br label %37

37:                                               ; preds = %31, %32
  %"030.0" = phi { i1, i64 } [ %36, %32 ], [ { i1 false, i64 poison }, %31 ]
  %38 = extractvalue { i1, i64 } %"030.0", 0
  switch i1 %38, label %39 [
    i1 true, label %40
  ]

39:                                               ; preds = %37
  br label %cond_28_case_0

40:                                               ; preds = %37
  %41 = extractvalue { i1, i64 } %"030.0", 1
  br label %cond_28_case_1

cond_28_case_0:                                   ; preds = %39
  %42 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, 0
  %43 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, 1
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.1, i32 0, i32 0), i32 %42, i8* %43)
  call void @abort()
  br label %cond_exit_28

cond_28_case_1:                                   ; preds = %40
  br label %cond_exit_28

cond_exit_28:                                     ; preds = %cond_28_case_1, %cond_28_case_0
  %"034.0" = phi i64 [ 0, %cond_28_case_0 ], [ %41, %cond_28_case_1 ]
  %45 = icmp ult i64 1, 2
  br i1 %45, label %49, label %46

46:                                               ; preds = %cond_exit_28
  %47 = insertvalue { i1, i64, [2 x i64] } { i1 false, i64 poison, [2 x i64] poison }, i64 %"034.0", 1
  %48 = insertvalue { i1, i64, [2 x i64] } %47, [2 x i64] %"014.0", 2
  br label %57

49:                                               ; preds = %cond_exit_28
  %50 = bitcast i64* %2 to [2 x i64]*
  store [2 x i64] %"014.0", [2 x i64]* %50, align 4
  %51 = getelementptr inbounds i64, i64* %2, i64 1
  %52 = load i64, i64* %51, align 4
  store i64 %"034.0", i64* %51, align 4
  %53 = bitcast i64* %2 to [2 x i64]*
  %54 = load [2 x i64], [2 x i64]* %53, align 4
  %55 = insertvalue { i1, i64, [2 x i64] } { i1 true, i64 poison, [2 x i64] poison }, i64 %52, 1
  %56 = insertvalue { i1, i64, [2 x i64] } %55, [2 x i64] %54, 2
  br label %57

57:                                               ; preds = %46, %49
  %"048.0" = phi { i1, i64, [2 x i64] } [ %56, %49 ], [ %48, %46 ]
  %58 = extractvalue { i1, i64, [2 x i64] } %"048.0", 0
  switch i1 %58, label %59 [
    i1 true, label %62
  ]

59:                                               ; preds = %57
  %60 = extractvalue { i1, i64, [2 x i64] } %"048.0", 1
  %61 = extractvalue { i1, i64, [2 x i64] } %"048.0", 2
  br label %cond_40_case_0

62:                                               ; preds = %57
  %63 = extractvalue { i1, i64, [2 x i64] } %"048.0", 1
  %64 = extractvalue { i1, i64, [2 x i64] } %"048.0", 2
  br label %cond_40_case_1

cond_40_case_0:                                   ; preds = %59
  %65 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @2, i32 0, i32 0) }, 0
  %66 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @2, i32 0, i32 0) }, 1
  %67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.2, i32 0, i32 0), i32 %65, i8* %66)
  call void @abort()
  br label %cond_exit_40

cond_40_case_1:                                   ; preds = %62
  br label %cond_exit_40

cond_exit_40:                                     ; preds = %cond_40_case_1, %cond_40_case_0
  %"052.0" = phi i64 [ 0, %cond_40_case_0 ], [ %63, %cond_40_case_1 ]
  %"1.0" = phi [2 x i64] [ zeroinitializer, %cond_40_case_0 ], [ %64, %cond_40_case_1 ]
  %68 = bitcast i64* %3 to [2 x i64]*
  store [2 x i64] %"1.0", [2 x i64]* %68, align 4
  %69 = getelementptr i64, i64* %3, i32 1
  %70 = load i64, i64* %3, align 4
  %71 = bitcast i64* %69 to [1 x i64]*
  %72 = load [1 x i64], [1 x i64]* %71, align 4
  %73 = insertvalue { i1, i64, [1 x i64] } { i1 true, i64 poison, [1 x i64] poison }, i64 %70, 1
  %74 = insertvalue { i1, i64, [1 x i64] } %73, [1 x i64] %72, 2
  %75 = extractvalue { i1, i64, [1 x i64] } %74, 0
  switch i1 %75, label %76 [
    i1 true, label %77
  ]

76:                                               ; preds = %cond_exit_40
  br label %cond_51_case_0

77:                                               ; preds = %cond_exit_40
  %78 = extractvalue { i1, i64, [1 x i64] } %74, 1
  %79 = extractvalue { i1, i64, [1 x i64] } %74, 2
  br label %cond_51_case_1

cond_51_case_0:                                   ; preds = %76
  %80 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @3, i32 0, i32 0) }, 0
  %81 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @3, i32 0, i32 0) }, 1
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.3, i32 0, i32 0), i32 %80, i8* %81)
  call void @abort()
  br label %cond_exit_51

cond_51_case_1:                                   ; preds = %77
  br label %cond_exit_51

cond_exit_51:                                     ; preds = %cond_51_case_1, %cond_51_case_0
  %"077.0" = phi i64 [ 0, %cond_51_case_0 ], [ %78, %cond_51_case_1 ]
  %"178.0" = phi [1 x i64] [ zeroinitializer, %cond_51_case_0 ], [ %79, %cond_51_case_1 ]
  %83 = bitcast i64* %4 to [1 x i64]*
  store [1 x i64] %"178.0", [1 x i64]* %83, align 4
  %84 = getelementptr i64, i64* %4, i32 0
  %85 = load i64, i64* %84, align 4
  %86 = bitcast i64* %4 to [0 x i64]*
  %87 = load [0 x i64], [0 x i64]* %86, align 4
  %88 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %85, 1
  %89 = extractvalue { i1, i64 } %88, 0
  switch i1 %89, label %90 [
    i1 true, label %91
  ]

90:                                               ; preds = %cond_exit_51
  br label %cond_62_case_0

91:                                               ; preds = %cond_exit_51
  %92 = extractvalue { i1, i64 } %88, 1
  br label %cond_62_case_1

cond_62_case_0:                                   ; preds = %90
  %93 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @4, i32 0, i32 0) }, 0
  %94 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @4, i32 0, i32 0) }, 1
  %95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.4, i32 0, i32 0), i32 %93, i8* %94)
  call void @abort()
  br label %cond_exit_62

cond_62_case_1:                                   ; preds = %91
  br label %cond_exit_62

cond_exit_62:                                     ; preds = %cond_62_case_1, %cond_62_case_0
  %"095.0" = phi i64 [ 0, %cond_62_case_0 ], [ %92, %cond_62_case_1 ]
  ret void
}

declare i32 @printf(i8*, ...)

declare void @abort()
