---
source: hugr-llvm/src/extension/collections/array.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@0 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@1 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.1 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@2 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.2 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@3 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.3 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@4 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.4 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1

define private void @_hl.main.1() {
alloca_block:
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  %0 = call i8* @malloc(i64 mul (i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i64 2))
  %1 = bitcast i8* %0 to i64*
  %2 = insertvalue { i64*, i64 } poison, i64* %1, 0
  %3 = insertvalue { i64*, i64 } %2, i64 0, 1
  %4 = getelementptr inbounds i64, i64* %1, i64 0
  store i64 1, i64* %4, align 4
  %5 = getelementptr inbounds i64, i64* %1, i64 1
  store i64 2, i64* %5, align 4
  %6 = call i8* @malloc(i64 mul (i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i64 2))
  %7 = bitcast i8* %6 to i64*
  %8 = insertvalue { i64*, i64 } poison, i64* %7, 0
  %9 = insertvalue { i64*, i64 } %8, i64 0, 1
  %10 = getelementptr inbounds i64, i64* %7, i64 0
  store i64 1, i64* %10, align 4
  %11 = getelementptr inbounds i64, i64* %7, i64 1
  store i64 2, i64* %11, align 4
  %array_ptr = extractvalue { i64*, i64 } %9, 0
  %array_offset = extractvalue { i64*, i64 } %9, 1
  %12 = add i64 %array_offset, 0
  %13 = getelementptr inbounds i64, i64* %array_ptr, i64 %12
  %14 = load i64, i64* %13, align 4
  %15 = add i64 %array_offset, 1
  %16 = getelementptr inbounds i64, i64* %array_ptr, i64 %15
  %17 = load i64, i64* %16, align 4
  %array_ptr9 = extractvalue { i64*, i64 } %3, 0
  %array_offset10 = extractvalue { i64*, i64 } %3, 1
  %18 = icmp ult i64 0, 2
  %19 = icmp ult i64 1, 2
  %20 = and i1 %18, %19
  br i1 %20, label %23, label %21

21:                                               ; preds = %entry_block
  %22 = insertvalue { i1, { i64*, i64 } } { i1 false, { i64*, i64 } poison }, { i64*, i64 } %3, 1
  br label %31

23:                                               ; preds = %entry_block
  %24 = add i64 0, %array_offset10
  %25 = add i64 1, %array_offset10
  %26 = getelementptr inbounds i64, i64* %array_ptr9, i64 %24
  %27 = load i64, i64* %26, align 4
  %28 = getelementptr inbounds i64, i64* %array_ptr9, i64 %25
  %29 = load i64, i64* %28, align 4
  store i64 %29, i64* %26, align 4
  store i64 %27, i64* %28, align 4
  %30 = insertvalue { i1, { i64*, i64 } } { i1 true, { i64*, i64 } poison }, { i64*, i64 } %3, 1
  br label %31

31:                                               ; preds = %21, %23
  %"0.0" = phi { i1, { i64*, i64 } } [ %30, %23 ], [ %22, %21 ]
  %32 = extractvalue { i1, { i64*, i64 } } %"0.0", 0
  switch i1 %32, label %33 [
    i1 true, label %35
  ]

33:                                               ; preds = %31
  %34 = extractvalue { i1, { i64*, i64 } } %"0.0", 1
  br label %cond_19_case_0

35:                                               ; preds = %31
  %36 = extractvalue { i1, { i64*, i64 } } %"0.0", 1
  br label %cond_19_case_1

cond_19_case_0:                                   ; preds = %33
  %37 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @0, i32 0, i32 0) }, 0
  %38 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @0, i32 0, i32 0) }, 1
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 %37, i8* %38)
  call void @abort()
  br label %cond_exit_19

cond_19_case_1:                                   ; preds = %35
  br label %cond_exit_19

cond_exit_19:                                     ; preds = %cond_19_case_1, %cond_19_case_0
  %"013.0" = phi { i64*, i64 } [ zeroinitializer, %cond_19_case_0 ], [ %36, %cond_19_case_1 ]
  %array_ptr25 = extractvalue { i64*, i64 } %"013.0", 0
  %array_offset26 = extractvalue { i64*, i64 } %"013.0", 1
  %40 = icmp ult i64 0, 2
  br i1 %40, label %42, label %41

41:                                               ; preds = %cond_exit_19
  br label %47

42:                                               ; preds = %cond_exit_19
  %43 = add i64 0, %array_offset26
  %44 = getelementptr inbounds i64, i64* %array_ptr25, i64 %43
  %45 = load i64, i64* %44, align 4
  %46 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %45, 1
  br label %47

47:                                               ; preds = %41, %42
  %"027.0" = phi { i1, i64 } [ %46, %42 ], [ { i1 false, i64 poison }, %41 ]
  %48 = extractvalue { i1, i64 } %"027.0", 0
  switch i1 %48, label %49 [
    i1 true, label %50
  ]

49:                                               ; preds = %47
  br label %cond_31_case_0

50:                                               ; preds = %47
  %51 = extractvalue { i1, i64 } %"027.0", 1
  br label %cond_31_case_1

cond_31_case_0:                                   ; preds = %49
  %52 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, 0
  %53 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, 1
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.1, i32 0, i32 0), i32 %52, i8* %53)
  call void @abort()
  br label %cond_exit_31

cond_31_case_1:                                   ; preds = %50
  br label %cond_exit_31

cond_exit_31:                                     ; preds = %cond_31_case_1, %cond_31_case_0
  %"031.0" = phi i64 [ 0, %cond_31_case_0 ], [ %51, %cond_31_case_1 ]
  %array_ptr41 = extractvalue { i64*, i64 } %"013.0", 0
  %array_offset42 = extractvalue { i64*, i64 } %"013.0", 1
  %55 = icmp ult i64 1, 2
  br i1 %55, label %59, label %56

56:                                               ; preds = %cond_exit_31
  %57 = insertvalue { i1, { i64*, i64 }, i64 } { i1 false, { i64*, i64 } poison, i64 poison }, i64 %"031.0", 2
  %58 = insertvalue { i1, { i64*, i64 }, i64 } %57, { i64*, i64 } %"013.0", 1
  br label %65

59:                                               ; preds = %cond_exit_31
  %60 = add i64 1, %array_offset42
  %61 = getelementptr inbounds i64, i64* %array_ptr41, i64 %60
  %62 = load i64, i64* %61, align 4
  store i64 %"031.0", i64* %61, align 4
  %63 = insertvalue { i1, { i64*, i64 }, i64 } { i1 true, { i64*, i64 } poison, i64 poison }, i64 %62, 2
  %64 = insertvalue { i1, { i64*, i64 }, i64 } %63, { i64*, i64 } %"013.0", 1
  br label %65

65:                                               ; preds = %56, %59
  %"043.0" = phi { i1, { i64*, i64 }, i64 } [ %64, %59 ], [ %58, %56 ]
  %66 = extractvalue { i1, { i64*, i64 }, i64 } %"043.0", 0
  switch i1 %66, label %67 [
    i1 true, label %70
  ]

67:                                               ; preds = %65
  %68 = extractvalue { i1, { i64*, i64 }, i64 } %"043.0", 2
  %69 = extractvalue { i1, { i64*, i64 }, i64 } %"043.0", 1
  br label %cond_42_case_0

70:                                               ; preds = %65
  %71 = extractvalue { i1, { i64*, i64 }, i64 } %"043.0", 2
  %72 = extractvalue { i1, { i64*, i64 }, i64 } %"043.0", 1
  br label %cond_42_case_1

cond_42_case_0:                                   ; preds = %67
  %73 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @2, i32 0, i32 0) }, 0
  %74 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @2, i32 0, i32 0) }, 1
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.2, i32 0, i32 0), i32 %73, i8* %74)
  call void @abort()
  br label %cond_exit_42

cond_42_case_1:                                   ; preds = %70
  br label %cond_exit_42

cond_exit_42:                                     ; preds = %cond_42_case_1, %cond_42_case_0
  %"046.0" = phi i64 [ 0, %cond_42_case_0 ], [ %71, %cond_42_case_1 ]
  %"147.0" = phi { i64*, i64 } [ zeroinitializer, %cond_42_case_0 ], [ %72, %cond_42_case_1 ]
  %array_ptr66 = extractvalue { i64*, i64 } %"147.0", 0
  %array_offset67 = extractvalue { i64*, i64 } %"147.0", 1
  %new_offset = add i64 %array_offset67, 1
  %76 = getelementptr inbounds i64, i64* %array_ptr66, i64 %array_offset67
  %77 = load i64, i64* %76, align 4
  %78 = insertvalue { i64*, i64 } poison, i64* %array_ptr66, 0
  %79 = insertvalue { i64*, i64 } %78, i64 %new_offset, 1
  %80 = insertvalue { i1, { i64*, i64 }, i64 } { i1 true, { i64*, i64 } poison, i64 poison }, i64 %77, 2
  %81 = insertvalue { i1, { i64*, i64 }, i64 } %80, { i64*, i64 } %79, 1
  %82 = extractvalue { i1, { i64*, i64 }, i64 } %81, 0
  switch i1 %82, label %83 [
    i1 true, label %84
  ]

83:                                               ; preds = %cond_exit_42
  br label %cond_53_case_0

84:                                               ; preds = %cond_exit_42
  %85 = extractvalue { i1, { i64*, i64 }, i64 } %81, 2
  %86 = extractvalue { i1, { i64*, i64 }, i64 } %81, 1
  br label %cond_53_case_1

cond_53_case_0:                                   ; preds = %83
  %87 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @3, i32 0, i32 0) }, 0
  %88 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @3, i32 0, i32 0) }, 1
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.3, i32 0, i32 0), i32 %87, i8* %88)
  call void @abort()
  br label %cond_exit_53

cond_53_case_1:                                   ; preds = %84
  br label %cond_exit_53

cond_exit_53:                                     ; preds = %cond_53_case_1, %cond_53_case_0
  %"069.0" = phi i64 [ 0, %cond_53_case_0 ], [ %85, %cond_53_case_1 ]
  %"170.0" = phi { i64*, i64 } [ zeroinitializer, %cond_53_case_0 ], [ %86, %cond_53_case_1 ]
  %array_ptr83 = extractvalue { i64*, i64 } %"170.0", 0
  %array_offset84 = extractvalue { i64*, i64 } %"170.0", 1
  %90 = add i64 %array_offset84, 0
  %91 = getelementptr inbounds i64, i64* %array_ptr83, i64 %90
  %92 = load i64, i64* %91, align 4
  %93 = insertvalue { i64*, i64 } poison, i64* %array_ptr83, 0
  %94 = insertvalue { i64*, i64 } %93, i64 %array_offset84, 1
  %95 = insertvalue { i1, { i64*, i64 }, i64 } { i1 true, { i64*, i64 } poison, i64 poison }, i64 %92, 2
  %96 = insertvalue { i1, { i64*, i64 }, i64 } %95, { i64*, i64 } %94, 1
  %97 = extractvalue { i1, { i64*, i64 }, i64 } %96, 0
  switch i1 %97, label %98 [
    i1 true, label %99
  ]

98:                                               ; preds = %cond_exit_53
  br label %cond_64_case_0

99:                                               ; preds = %cond_exit_53
  %100 = extractvalue { i1, { i64*, i64 }, i64 } %96, 2
  %101 = extractvalue { i1, { i64*, i64 }, i64 } %96, 1
  br label %cond_64_case_1

cond_64_case_0:                                   ; preds = %98
  %102 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @4, i32 0, i32 0) }, 0
  %103 = extractvalue { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @4, i32 0, i32 0) }, 1
  %104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.4, i32 0, i32 0), i32 %102, i8* %103)
  call void @abort()
  br label %cond_exit_64

cond_64_case_1:                                   ; preds = %99
  br label %cond_exit_64

cond_exit_64:                                     ; preds = %cond_64_case_1, %cond_64_case_0
  %"086.0" = phi i64 [ 0, %cond_64_case_0 ], [ %100, %cond_64_case_1 ]
  %"187.0" = phi { i64*, i64 } [ zeroinitializer, %cond_64_case_0 ], [ %101, %cond_64_case_1 ]
  %array_ptr100 = extractvalue { i64*, i64 } %"187.0", 0
  %array_offset101 = extractvalue { i64*, i64 } %"187.0", 1
  %105 = bitcast i64* %array_ptr100 to i8*
  call void @free(i8* %105)
  ret void
}

; Function Attrs: nobuiltin
declare i8* @malloc(i64) #0

declare i32 @printf(i8*, ...)

declare void @abort()

; Function Attrs: nobuiltin
declare void @free(i8*) #0

attributes #0 = { nobuiltin }
