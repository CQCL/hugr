---
source: hugr-core/tests/model.rs
expression: roundtrip_str
---
(hugr 0)

(define-alias local.int type (@ arithmetic.int.types.int))

(define-func example.add
  [(@ arithmetic.int.types.int) (@ arithmetic.int.types.int)]
  [(@ arithmetic.int.types.int)]
  (ext)
  (dfg
    [(%0 (@ arithmetic.int.types.int)) (%1 (@ arithmetic.int.types.int))]
    [(%2 (@ arithmetic.int.types.int))]
    (arithmetic.int.iadd
      [(%0 (@ arithmetic.int.types.int)) (%1 (@ arithmetic.int.types.int))]
      [(%2 (@ arithmetic.int.types.int))])))

(declare-func example.callee
  [(@ arithmetic.int.types.int)] [(@ arithmetic.int.types.int)] (ext))

(define-func example.caller
  [(@ arithmetic.int.types.int)] [(@ arithmetic.int.types.int)] (ext)
  (dfg
    [(%3 (@ arithmetic.int.types.int))]
    [(%4 (@ arithmetic.int.types.int))]
    (call
      (@ example.callee)
      [(%3 (@ arithmetic.int.types.int))]
      [(%4 (@ arithmetic.int.types.int))])))

(define-func example.swap
  (forall ?0 type)
  (forall ?1 type)
  [?0 ?1] [?1 ?0] (ext)
  (dfg [(%5 ?0) (%6 ?1)] [(%6 ?1) (%5 ?0)]))

(define-func example.loop
  (forall ?0 type)
  [?0] [?0] (ext)
  (dfg
    [(%7 ?0)]
    [(%8 ?0)]
    (tail-loop
      [(%7 ?0)]
      [(%8 ?0)]
      (dfg
        [(%9 ?0)]
        [(%10 (adt [[?0] [?0]]))]
        (tag 0 [(%9 ?0)] [(%10 (adt [[?0] [?0]]))])))))

(define-func example.cfg
  (forall ?0 type)
  [?0] [?0] (ext)
  (dfg
    [(%11 ?0)]
    [(%12 ?0)]
    (cfg [(%11 ?0)] [(%12 ?0)]
      (cfg
        [(%13 (ctrl [?0]))]
        [(%17 (ctrl [?0]))]
        (block [(%13 (ctrl [?0]))] [(%14 (ctrl [?0]))]
          (dfg
            [(%15 ?0)]
            [(%16 (adt [[?0]]))]
            (tag 0 [(%15 ?0)] [(%16 (adt [[?0]]))])))
        (block [(%14 (ctrl [?0]))] [(%17 (ctrl [?0]))]
          (dfg
            [(%18 ?0)]
            [(%19 (adt [[?0]]))]
            (tag 0 [(%18 ?0)] [(%19 (adt [[?0]]))])))))))

(define-func example.cond
  [(adt [[] []]) (@ arithmetic.int.types.int)]
  [(@ arithmetic.int.types.int)]
  (ext)
  (dfg
    [(%20 (adt [[] []])) (%21 (@ arithmetic.int.types.int))]
    [(%22 (@ arithmetic.int.types.int))]
    (cond
      [(%20 (adt [[] []])) (%21 (@ arithmetic.int.types.int))]
      [(%22 (@ arithmetic.int.types.int))]
      (dfg
        [(%23 (@ arithmetic.int.types.int))]
        [(%23 (@ arithmetic.int.types.int))])
      (dfg
        [(%24 (@ arithmetic.int.types.int))]
        [(%25 (@ arithmetic.int.types.int))]
        (arithmetic.int.ineg
          [(%24 (@ arithmetic.int.types.int))]
          [(%25 (@ arithmetic.int.types.int))])))))
