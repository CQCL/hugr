---
source: hugr-core/tests/model.rs
expression: ast
---
(hugr 0)

(mod)

(import core.meta.description)

(import core.nat)

(import core.order_hint.key)

(import core.fn)

(import core.order_hint.order)

(import arithmetic.int.types.int)

(declare-operation
  arithmetic.int.ineg
  (param ?0 core.nat)
  (core.fn [(arithmetic.int.types.int ?0)] [(arithmetic.int.types.int ?0)])
  (meta
    (core.meta.description
      "negation modulo 2^N (signed and unsigned versions are the same op)")))

(define-func
  pub
  main
  (core.fn
    [(arithmetic.int.types.int 6)
     (arithmetic.int.types.int 6)
     (arithmetic.int.types.int 6)
     (arithmetic.int.types.int 6)]
    [(arithmetic.int.types.int 6)
     (arithmetic.int.types.int 6)
     (arithmetic.int.types.int 6)
     (arithmetic.int.types.int 6)])
  (dfg [%0 %1 %2 %3] [%4 %5 %6 %7]
    (signature
      (core.fn
        [(arithmetic.int.types.int 6)
         (arithmetic.int.types.int 6)
         (arithmetic.int.types.int 6)
         (arithmetic.int.types.int 6)]
        [(arithmetic.int.types.int 6)
         (arithmetic.int.types.int 6)
         (arithmetic.int.types.int 6)
         (arithmetic.int.types.int 6)]))
    (meta (core.order_hint.order 4 7))
    (meta (core.order_hint.order 5 6))
    (meta (core.order_hint.order 5 4))
    (meta (core.order_hint.order 6 7))
    ((arithmetic.int.ineg 6) [%0] [%4]
      (signature
        (core.fn [(arithmetic.int.types.int 6)] [(arithmetic.int.types.int 6)]))
      (meta (core.order_hint.key 4)))
    ((arithmetic.int.ineg 6) [%1] [%5]
      (signature
        (core.fn [(arithmetic.int.types.int 6)] [(arithmetic.int.types.int 6)]))
      (meta (core.order_hint.key 5)))
    ((arithmetic.int.ineg 6) [%2] [%6]
      (signature
        (core.fn [(arithmetic.int.types.int 6)] [(arithmetic.int.types.int 6)]))
      (meta (core.order_hint.key 6)))
    ((arithmetic.int.ineg 6) [%3] [%7]
      (signature
        (core.fn [(arithmetic.int.types.int 6)] [(arithmetic.int.types.int 6)]))
      (meta (core.order_hint.key 7)))))
