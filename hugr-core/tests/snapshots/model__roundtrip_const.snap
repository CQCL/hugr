---
source: hugr-core/tests/model.rs
expression: "roundtrip(include_str!(\"../../hugr-model/tests/fixtures/model-const.edn\"))"
---
(hugr 0)

(import collections.array.array)

(import compat.const_json)

(import core.load_const)

(import arithmetic.int.const)

(import core.const.adt)

(import arithmetic.int.types.int)

(import collections.array.const)

(import arithmetic.float.types.float64)

(import core.fn)

(import core.adt)

(import arithmetic.float.const-f64)

(define-func
  example.bools
  (core.fn [] [(core.adt [[] []]) (core.adt [[] []])] (ext))
  (dfg [] [%0 %1]
    (signature (core.fn [] [(core.adt [[] []]) (core.adt [[] []])] (ext)))
    ((core.load_const _ _ (core.const.adt [[] []] _ _ 0 [])) [] [%0]
      (signature (core.fn [] [(core.adt [[] []])] (ext))))
    ((core.load_const _ _ (core.const.adt [[] []] _ _ 1 [])) [] [%1]
      (signature (core.fn [] [(core.adt [[] []])] (ext))))))

(define-func
  example.make-pair
  (core.fn
    []
    [(core.adt
       [[(collections.array.array 5 (arithmetic.int.types.int 6))
         arithmetic.float.types.float64]])]
    (ext))
  (dfg [] [%0]
    (signature
      (core.fn
        []
        [(core.adt
           [[(collections.array.array 5 (arithmetic.int.types.int 6))
             arithmetic.float.types.float64]])]
        (ext)))
    ((core.load_const
        _
        _
        (core.const.adt
          [[(collections.array.array 5 (arithmetic.int.types.int 6))
            arithmetic.float.types.float64]]
          _
          _
          0
          [(collections.array.const
             5
             (arithmetic.int.types.int 6)
             [(arithmetic.int.const 6 1)
              (arithmetic.int.const 6 2)
              (arithmetic.int.const 6 3)
              (arithmetic.int.const 6 4)
              (arithmetic.int.const 6 5)])
           (arithmetic.float.const-f64 -3.0)]))
      [] [%0]
      (signature
        (core.fn
          []
          [(core.adt
             [[(collections.array.array 5 (arithmetic.int.types.int 6))
               arithmetic.float.types.float64]])]
          (ext))))))

(define-func
  example.f64-json
  (core.fn [] [arithmetic.float.types.float64] (ext))
  (dfg [] [%0 %1]
    (signature
      (core.fn
        []
        [arithmetic.float.types.float64 arithmetic.float.types.float64]
        (ext)))
    ((core.load_const _ _ (arithmetic.float.const-f64 1.0)) [] [%0]
      (signature (core.fn [] [arithmetic.float.types.float64] (ext))))
    ((core.load_const
        _
        _
        (compat.const_json
          arithmetic.float.types.float64
          (ext)
          "{\"c\":\"ConstUnknown\",\"v\":{\"value\":1.0}}"))
      [] [%1]
      (signature (core.fn [] [arithmetic.float.types.float64] (ext))))))
