---
source: tests/guppy.rs
expression: module_string
---
; ModuleID = 'test_context'
source_filename = "test_context"

define i16 @_hl.teleport.25(i16 %0, i16 %1) {
alloca_block:
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  br label %2

2:                                                ; preds = %entry_block
  %3 = call i16 @QAlloc()
  %4 = call i16 @Reset(i16 %3)
  %5 = call i16 @H(i16 %4)
  %6 = call { i16, i16 } @CX(i16 %5, i16 %1)
  %7 = extractvalue { i16, i16 } %6, 0
  %8 = extractvalue { i16, i16 } %6, 1
  %9 = insertvalue { i16, i16 } undef, i16 %7, 0
  %10 = insertvalue { i16, i16 } %9, i16 %8, 1
  %11 = insertvalue { { i16, i16 } } poison, { i16, i16 } %10, 0
  %12 = extractvalue { { i16, i16 } } %11, 0
  %13 = extractvalue { i16, i16 } %12, 0
  %14 = extractvalue { i16, i16 } %12, 1
  %15 = call { i16, i16 } @CX(i16 %0, i16 %13)
  %16 = extractvalue { i16, i16 } %15, 0
  %17 = extractvalue { i16, i16 } %15, 1
  %18 = insertvalue { i16, i16 } undef, i16 %16, 0
  %19 = insertvalue { i16, i16 } %18, i16 %17, 1
  %20 = insertvalue { { i16, i16 } } poison, { i16, i16 } %19, 0
  %21 = extractvalue { { i16, i16 } } %20, 0
  %22 = extractvalue { i16, i16 } %21, 0
  %23 = extractvalue { i16, i16 } %21, 1
  %24 = call i16 @H(i16 %22)
  %25 = call { i16, { i32, {}, {} } } @Measure(i16 %24)
  %26 = extractvalue { i16, { i32, {}, {} } } %25, 0
  %27 = extractvalue { i16, { i32, {}, {} } } %25, 1
  call void @QFree(i16 %26)
  %28 = extractvalue { i32, {}, {} } %27, 0
  switch i32 %28, label %29 [
    i32 1, label %31
  ]

29:                                               ; preds = %2
  %30 = extractvalue { i32, {}, {} } %27, 1
  br label %37

31:                                               ; preds = %2
  %32 = extractvalue { i32, {}, {} } %27, 2
  br label %33

33:                                               ; preds = %31
  %34 = call i16 @Z(i16 %14)
  switch i32 0, label %35 [
  ]

35:                                               ; preds = %33
  %36 = extractvalue { {} } undef, 0
  br label %40

37:                                               ; preds = %29
  switch i32 0, label %38 [
  ]

38:                                               ; preds = %37
  %39 = extractvalue { {} } undef, 0
  br label %40

40:                                               ; preds = %38, %35
  %"9_0.0" = phi i16 [ %14, %38 ], [ %34, %35 ]
  %41 = call { i16, { i32, {}, {} } } @Measure(i16 %23)
  %42 = extractvalue { i16, { i32, {}, {} } } %41, 0
  %43 = extractvalue { i16, { i32, {}, {} } } %41, 1
  call void @QFree(i16 %42)
  %44 = extractvalue { i32, {}, {} } %43, 0
  switch i32 %44, label %45 [
    i32 1, label %47
  ]

45:                                               ; preds = %40
  %46 = extractvalue { i32, {}, {} } %43, 1
  br label %53

47:                                               ; preds = %40
  %48 = extractvalue { i32, {}, {} } %43, 2
  br label %49

49:                                               ; preds = %47
  %50 = call i16 @X(i16 %"9_0.0")
  switch i32 0, label %51 [
  ]

51:                                               ; preds = %49
  %52 = extractvalue { {} } undef, 0
  br label %56

53:                                               ; preds = %45
  switch i32 0, label %54 [
  ]

54:                                               ; preds = %53
  %55 = extractvalue { {} } undef, 0
  br label %56

56:                                               ; preds = %54, %51
  %"12_0.0" = phi i16 [ %"9_0.0", %54 ], [ %50, %51 ]
  switch i32 0, label %57 [
  ]

57:                                               ; preds = %56
  %58 = extractvalue { {} } undef, 0
  br label %59

59:                                               ; preds = %57
  ret i16 %"12_0.0"
}

declare i16 @QAlloc()

declare i16 @Reset(i16)

declare i16 @H(i16)

declare { i16, i16 } @CX(i16, i16)

declare { i16, { i32, {}, {} } } @Measure(i16)

declare void @QFree(i16)

declare i16 @Z(i16)

declare i16 @X(i16)

define { i32, {}, {} } @_hl.main.26() {
alloca_block:
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  br label %0

0:                                                ; preds = %entry_block
  %1 = call i16 @QAlloc()
  %2 = call i16 @Reset(i16 %1)
  %3 = call i16 @QAlloc()
  %4 = call i16 @Reset(i16 %3)
  %5 = insertvalue { i16, i16 } undef, i16 %4, 0
  %6 = insertvalue { i16, i16 } %5, i16 %2, 1
  %7 = insertvalue { { i16, i16 } } poison, { i16, i16 } %6, 0
  %8 = extractvalue { { i16, i16 } } %7, 0
  %9 = extractvalue { i16, i16 } %8, 0
  %10 = extractvalue { i16, i16 } %8, 1
  %11 = call i16 @_hl.teleport.25(i16 %9, i16 %10)
  %12 = call { i16, { i32, {}, {} } } @Measure(i16 %11)
  %13 = extractvalue { i16, { i32, {}, {} } } %12, 0
  %14 = extractvalue { i16, { i32, {}, {} } } %12, 1
  call void @QFree(i16 %13)
  switch i32 0, label %15 [
  ]

15:                                               ; preds = %0
  %16 = extractvalue { {} } undef, 0
  br label %17

17:                                               ; preds = %15
  ret { i32, {}, {} } %14
}
