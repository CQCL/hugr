WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT    = _{ ";" ~ (!("\n") ~ ANY)* ~ "\n" }
identifier = @{ (ASCII_ALPHA | "_" | "-") ~ (ASCII_ALPHANUMERIC | "_" | "-")* }
ext_name   = @{ identifier ~ ("." ~ identifier)* }
symbol     = @{ identifier ~ ("." ~ identifier)+ }
tag        = @{ (ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*) | "0" }

string    = @{ "\"" ~ (!("\"") ~ ANY)* ~ "\"" }
list_tail =  { "." }

module = { "(" ~ "hugr" ~ "0" ~ ")" ~ meta* ~ node* ~ EOI }

meta = { "(" ~ "meta" ~ symbol ~ term ~ ")" }

edge_name  = @{ "%" ~ (ASCII_ALPHANUMERIC | "_" | "-")* }
port       =  { edge_name | ("(" ~ edge_name ~ term ~ meta* ~ ")") }
port_list  =  { "[" ~ port* ~ "]" }
port_lists = _{ port_list ~ port_list }

node = {
    node_dfg
  | node_cfg
  | node_block
  | node_define_func
  | node_declare_func
  | node_call_func
  | node_load_func
  | node_define_alias
  | node_declare_alias
  | node_tail_loop
  | node_cond
  | node_tag
  | node_custom
}

node_dfg           = { "(" ~ "dfg" ~ port_lists? ~ type_hint? ~ meta* ~ region* ~ ")" }
node_cfg           = { "(" ~ "cfg" ~ port_lists? ~ type_hint? ~ meta* ~ region* ~ ")" }
node_block         = { "(" ~ "block" ~ port_lists? ~ type_hint? ~ meta* ~ region* ~ ")" }
node_define_func   = { "(" ~ "define-func" ~ func_header ~ meta* ~ region* ~ ")" }
node_declare_func  = { "(" ~ "declare-func" ~ func_header ~ meta* ~ ")" }
node_call_func     = { "(" ~ "call" ~ term ~ port_lists? ~ type_hint? ~ meta* ~ ")" }
node_load_func     = { "(" ~ "load-func" ~ term ~ port_lists? ~ type_hint? ~ meta* ~ ")" }
node_define_alias  = { "(" ~ "define-alias" ~ alias_header ~ term ~ meta* ~ ")" }
node_declare_alias = { "(" ~ "declare-alias" ~ alias_header ~ meta* ~ ")" }
node_tail_loop     = { "(" ~ "tail-loop" ~ port_lists? ~ type_hint? ~ meta* ~ region* ~ ")" }
node_cond          = { "(" ~ "cond" ~ port_lists? ~ type_hint? ~ meta* ~ region* ~ ")" }
node_tag           = { "(" ~ "tag" ~ tag ~ port_lists? ~ type_hint? ~ meta* ~ region* ~ ")" }
node_custom        = { "(" ~ (term_apply | term_apply_full) ~ port_lists? ~ type_hint? ~ meta* ~ region* ~ ")" }

type_hint    = { "(" ~ "type" ~ term ~ ")" }
func_header  = { symbol ~ param* ~ term ~ term ~ term }
alias_header = { symbol ~ param* ~ term }

param = { param_implicit | param_explicit | param_constraint }

param_implicit   = { "(" ~ "forall" ~ term_var ~ term ~ ")" }
param_explicit   = { "(" ~ "param" ~ term_var ~ term ~ ")" }
param_constraint = { "(" ~ "where" ~ term ~ ")" }

region     = { region_dfg | region_cfg }
region_dfg = { "(" ~ "dfg" ~ port_lists? ~ type_hint? ~ meta* ~ node* ~ ")" }
region_cfg = { "(" ~ "cfg" ~ port_lists? ~ type_hint? ~ meta* ~ node* ~ ")" }

term = {
    term_wildcard
  | term_type
  | term_static
  | term_constraint
  | term_var
  | term_quote
  | term_list
  | term_list_type
  | term_str
  | term_str_type
  | term_nat
  | term_nat_type
  | term_ext_set
  | term_ext_set_type
  | term_adt
  | term_func_type
  | term_ctrl
  | term_ctrl_type
  | term_apply_full
  | term_apply
}

term_wildcard     = { "_" }
term_type         = { "type" }
term_static       = { "static" }
term_constraint   = { "constraint" }
term_var          = { "?" ~ identifier }
term_apply_full   = { ("(" ~ "@" ~ symbol ~ term* ~ ")") }
term_apply        = { symbol | ("(" ~ symbol ~ term* ~ ")") }
term_quote        = { "(" ~ "quote" ~ term ~ ")" }
term_list         = { "[" ~ term* ~ (list_tail ~ term)? ~ "]" }
term_list_type    = { "(" ~ "list" ~ term ~ ")" }
term_str          = { string }
term_str_type     = { "str" }
term_nat          = { (ASCII_DIGIT)+ }
term_nat_type     = { "nat" }
term_ext_set      = { "(" ~ "ext" ~ ext_name* ~ (list_tail ~ term)? ~ ")" }
term_ext_set_type = { "ext-set" }
term_adt          = { "(" ~ "adt" ~ term ~ ")" }
term_func_type    = { "(" ~ "fn" ~ term ~ term ~ term ~ ")" }
term_ctrl         = { "(" ~ "ctrl" ~ term ~ ")" }
term_ctrl_type    = { "ctrl" }
