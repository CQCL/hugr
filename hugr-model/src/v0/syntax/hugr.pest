WHITESPACE  = _{ " " | "\t" | "\r" | "\n" }
COMMENT     = _{ ";" ~ (!("\n") ~ ANY)* ~ "\n" }
identifier  = @{ (ASCII_ALPHA | "_" | "-") ~ (ASCII_ALPHANUMERIC | "_" | "-")* }
ext_name    = @{ identifier ~ ("." ~ identifier)* }
symbol_name = @{ identifier ~ ("." ~ identifier)* }
link_name   = @{ "%" ~ (ASCII_ALPHANUMERIC | "_" | "-")* }

string         =  { "\"" ~ (string_raw | string_escape | string_unicode)* ~ "\"" }
string_raw     = @{ (!("\\" | "\"") ~ ANY)+ }
string_escape  = @{ "\\" ~ ("\"" | "\\" | "n" | "r" | "t") }
string_unicode = @{ "\\u" ~ "{" ~ ASCII_HEX_DIGIT+ ~ "}" }

base64_string = { "\"" ~ (ASCII_ALPHANUMERIC | "+" | "/")* ~ "="* ~ "\"" }

module = { "(" ~ "hugr" ~ "0" ~ ")" ~ meta* ~ node* ~ EOI }

meta = { "(" ~ "meta" ~ term ~ ")" }

port       =  { link_name }
port_list  =  { "[" ~ port* ~ "]" }
port_lists = _{ port_list ~ port_list }

node = {
    node_dfg
  | node_cfg
  | node_block
  | node_define_func
  | node_declare_func
  | node_define_alias
  | node_declare_alias
  | node_declare_ctr
  | node_declare_operation
  | node_tail_loop
  | node_cond
  | node_import
  | node_custom
}

node_dfg               = { "(" ~ "dfg" ~ port_lists? ~ signature? ~ meta* ~ region* ~ ")" }
node_cfg               = { "(" ~ "cfg" ~ port_lists? ~ signature? ~ meta* ~ region* ~ ")" }
node_block             = { "(" ~ "block" ~ port_lists? ~ signature? ~ meta* ~ region* ~ ")" }
node_define_func       = { "(" ~ "define-func" ~ symbol ~ meta* ~ region* ~ ")" }
node_declare_func      = { "(" ~ "declare-func" ~ symbol ~ meta* ~ ")" }
node_define_alias      = { "(" ~ "define-alias" ~ symbol ~ term ~ meta* ~ ")" }
node_declare_alias     = { "(" ~ "declare-alias" ~ symbol ~ meta* ~ ")" }
node_declare_ctr       = { "(" ~ "declare-ctr" ~ symbol ~ meta* ~ ")" }
node_declare_operation = { "(" ~ "declare-operation" ~ symbol ~ meta* ~ ")" }
node_tail_loop         = { "(" ~ "tail-loop" ~ port_lists? ~ signature? ~ meta* ~ region* ~ ")" }
node_cond              = { "(" ~ "cond" ~ port_lists? ~ signature? ~ meta* ~ region* ~ ")" }
node_import            = { "(" ~ "import" ~ symbol_name ~ meta* ~ ")" }
node_custom            = { "(" ~ term_apply ~ port_lists? ~ signature? ~ meta* ~ region* ~ ")" }

symbol = { symbol_name ~ param* ~ where_clause* ~ term }

signature    = { "(" ~ "signature" ~ term ~ ")" }
param        = { "(" ~ "param" ~ term_var ~ term ~ ")" }
where_clause = { "(" ~ "where" ~ term ~ ")" }

region      = { "(" ~ region_kind ~ port_lists? ~ signature? ~ meta* ~ node* ~ ")" }
region_kind = { "dfg" | "cfg" | "mod" }

term = {
    term_wildcard
  | term_var
  | term_list
  | term_list_type
  | term_str
  | term_float
  | term_nat
  | term_ext_set
  | term_apply
  | term_const_func
  | term_bytes
  | term_float
  | term_tuple
}

term_wildcard   =  { "_" }
term_var        =  { "?" ~ identifier }
term_apply      =  { symbol_name | ("(" ~ symbol_name ~ term* ~ ")") }
term_list       =  { "[" ~ part* ~ "]" }
term_tuple      =  { "(" ~ "tuple" ~ part* ~ ")" }
term_list_type  =  { "(" ~ "list" ~ term ~ ")" }
term_str        =  { string }
term_nat        = @{ (ASCII_DIGIT)+ }
term_ext_set    =  { "(" ~ "ext" ~ (spliced_term | ext_name)* ~ ")" }
term_const_func =  { "(" ~ "fn" ~ term ~ ")" }
term_bytes      =  { "(" ~ "bytes" ~ base64_string ~ ")" }
term_float      = @{ ("+" | "-")? ~ (ASCII_DIGIT)+ ~ "." ~ (ASCII_DIGIT)+ }

part         = { spliced_term | term }
spliced_term = { term ~ "..." }
