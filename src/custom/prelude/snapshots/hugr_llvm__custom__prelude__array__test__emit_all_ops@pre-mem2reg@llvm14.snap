---
source: src/custom/prelude/array.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@0 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@1 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.1 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@2 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.2 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@3 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.3 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@4 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.4 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1

define void @_hl.main.1() {
alloca_block:
  %"12_0" = alloca i64, align 8
  %"10_0" = alloca i64, align 8
  %"13_0" = alloca [2 x i64], align 8
  %"8_0" = alloca i64, align 8
  %"14_0" = alloca { i32, { [2 x i64] }, { [2 x i64] } }, align 8
  %"0" = alloca { i32, { [2 x i64] }, { [2 x i64] } }, align 8
  %"16_0" = alloca [2 x i64], align 8
  %"08" = alloca [2 x i64], align 8
  %"010" = alloca [2 x i64], align 8
  %"21_0" = alloca { i32, i8* }, align 8
  %"18_0" = alloca [2 x i64], align 8
  %"22_0" = alloca [2 x i64], align 8
  %"015" = alloca [2 x i64], align 8
  %"24_0" = alloca [2 x i64], align 8
  %"26_0" = alloca { i32, {}, { i64 } }, align 8
  %"020" = alloca { i32, {}, { i64 } }, align 8
  %"28_0" = alloca i64, align 8
  %"023" = alloca i64, align 8
  %"33_0" = alloca { i32, i8* }, align 8
  %"34_0" = alloca i64, align 8
  %"027" = alloca i64, align 8
  %"36_0" = alloca i64, align 8
  %"38_0" = alloca { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }, align 8
  %"033" = alloca { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }, align 8
  %"40_0" = alloca i64, align 8
  %"40_1" = alloca [2 x i64], align 8
  %"036" = alloca i64, align 8
  %"1" = alloca [2 x i64], align 8
  %"039" = alloca i64, align 8
  %"140" = alloca [2 x i64], align 8
  %"45_0" = alloca { i32, i8* }, align 8
  %"42_0" = alloca i64, align 8
  %"42_1" = alloca [2 x i64], align 8
  %"46_0" = alloca i64, align 8
  %"46_1" = alloca [2 x i64], align 8
  %"048" = alloca i64, align 8
  %"149" = alloca [2 x i64], align 8
  %"48_0" = alloca i64, align 8
  %"48_1" = alloca [2 x i64], align 8
  %"50_0" = alloca { i32, {}, { i64, [1 x i64] } }, align 8
  %"51_0" = alloca i64, align 8
  %"51_1" = alloca [1 x i64], align 8
  %"056" = alloca i64, align 8
  %"157" = alloca [1 x i64], align 8
  %"56_0" = alloca { i32, i8* }, align 8
  %"57_0" = alloca i64, align 8
  %"57_1" = alloca [1 x i64], align 8
  %"063" = alloca i64, align 8
  %"164" = alloca [1 x i64], align 8
  %"59_0" = alloca i64, align 8
  %"59_1" = alloca [1 x i64], align 8
  %"61_0" = alloca { i32, {}, { i64, [0 x i64] } }, align 8
  %"62_0" = alloca i64, align 8
  %"62_1" = alloca [0 x i64], align 8
  %"071" = alloca i64, align 8
  %"172" = alloca [0 x i64], align 8
  %"67_0" = alloca { i32, i8* }, align 8
  %"68_0" = alloca i64, align 8
  %"68_1" = alloca [0 x i64], align 8
  %"078" = alloca i64, align 8
  %"179" = alloca [0 x i64], align 8
  %"70_0" = alloca i64, align 8
  %"70_1" = alloca [0 x i64], align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store i64 2, i64* %"12_0", align 4
  store i64 1, i64* %"10_0", align 4
  %"10_01" = load i64, i64* %"10_0", align 4
  %"12_02" = load i64, i64* %"12_0", align 4
  %0 = insertvalue [2 x i64] undef, i64 %"10_01", 0
  %1 = insertvalue [2 x i64] %0, i64 %"12_02", 1
  store [2 x i64] %1, [2 x i64]* %"13_0", align 4
  store i64 0, i64* %"8_0", align 4
  %"13_03" = load [2 x i64], [2 x i64]* %"13_0", align 4
  %"8_04" = load i64, i64* %"8_0", align 4
  %"10_05" = load i64, i64* %"10_0", align 4
  %2 = icmp ult i64 %"8_04", 2
  %3 = icmp ult i64 %"10_05", 2
  %4 = and i1 %2, %3
  br i1 %4, label %8, label %5

5:                                                ; preds = %entry_block
  %6 = insertvalue { [2 x i64] } undef, [2 x i64] %"13_03", 0
  %7 = insertvalue { i32, { [2 x i64] }, { [2 x i64] } } { i32 0, { [2 x i64] } poison, { [2 x i64] } poison }, { [2 x i64] } %6, 1
  store { i32, { [2 x i64] }, { [2 x i64] } } %7, { i32, { [2 x i64] }, { [2 x i64] } }* %"0", align 4
  br label %19

8:                                                ; preds = %entry_block
  %9 = alloca i64, i32 2, align 8
  %10 = bitcast i64* %9 to [2 x i64]*
  store [2 x i64] %"13_03", [2 x i64]* %10, align 4
  %11 = getelementptr inbounds i64, i64* %9, i64 %"8_04"
  %12 = load i64, i64* %11, align 4
  %13 = getelementptr inbounds i64, i64* %9, i64 %"10_05"
  %14 = load i64, i64* %13, align 4
  store i64 %14, i64* %11, align 4
  store i64 %12, i64* %13, align 4
  %15 = bitcast i64* %9 to [2 x i64]*
  %16 = load [2 x i64], [2 x i64]* %15, align 4
  %17 = insertvalue { [2 x i64] } undef, [2 x i64] %16, 0
  %18 = insertvalue { i32, { [2 x i64] }, { [2 x i64] } } { i32 1, { [2 x i64] } poison, { [2 x i64] } poison }, { [2 x i64] } %17, 2
  store { i32, { [2 x i64] }, { [2 x i64] } } %18, { i32, { [2 x i64] }, { [2 x i64] } }* %"0", align 4
  br label %19

19:                                               ; preds = %5, %8
  %"06" = load { i32, { [2 x i64] }, { [2 x i64] } }, { i32, { [2 x i64] }, { [2 x i64] } }* %"0", align 4
  store { i32, { [2 x i64] }, { [2 x i64] } } %"06", { i32, { [2 x i64] }, { [2 x i64] } }* %"14_0", align 4
  %"14_07" = load { i32, { [2 x i64] }, { [2 x i64] } }, { i32, { [2 x i64] }, { [2 x i64] } }* %"14_0", align 4
  %20 = extractvalue { i32, { [2 x i64] }, { [2 x i64] } } %"14_07", 0
  switch i32 %20, label %21 [
    i32 1, label %24
  ]

21:                                               ; preds = %19
  %22 = extractvalue { i32, { [2 x i64] }, { [2 x i64] } } %"14_07", 1
  %23 = extractvalue { [2 x i64] } %22, 0
  store [2 x i64] %23, [2 x i64]* %"010", align 4
  br label %cond_16_case_0

24:                                               ; preds = %19
  %25 = extractvalue { i32, { [2 x i64] }, { [2 x i64] } } %"14_07", 2
  %26 = extractvalue { [2 x i64] } %25, 0
  store [2 x i64] %26, [2 x i64]* %"015", align 4
  br label %cond_16_case_1

cond_16_case_0:                                   ; preds = %21
  %"011" = load [2 x i64], [2 x i64]* %"010", align 4
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @0, i32 0, i32 0) }, { i32, i8* }* %"21_0", align 8
  store [2 x i64] %"011", [2 x i64]* %"18_0", align 4
  %"21_012" = load { i32, i8* }, { i32, i8* }* %"21_0", align 8
  %"18_013" = load [2 x i64], [2 x i64]* %"18_0", align 4
  %27 = extractvalue { i32, i8* } %"21_012", 0
  %28 = extractvalue { i32, i8* } %"21_012", 1
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 %27, i8* %28)
  call void @abort()
  store [2 x i64] zeroinitializer, [2 x i64]* %"22_0", align 4
  %"22_014" = load [2 x i64], [2 x i64]* %"22_0", align 4
  store [2 x i64] %"22_014", [2 x i64]* %"08", align 4
  br label %cond_exit_16

cond_16_case_1:                                   ; preds = %24
  %"016" = load [2 x i64], [2 x i64]* %"015", align 4
  store [2 x i64] %"016", [2 x i64]* %"24_0", align 4
  %"24_017" = load [2 x i64], [2 x i64]* %"24_0", align 4
  store [2 x i64] %"24_017", [2 x i64]* %"08", align 4
  br label %cond_exit_16

cond_exit_16:                                     ; preds = %cond_16_case_1, %cond_16_case_0
  %"09" = load [2 x i64], [2 x i64]* %"08", align 4
  store [2 x i64] %"09", [2 x i64]* %"16_0", align 4
  %"16_018" = load [2 x i64], [2 x i64]* %"16_0", align 4
  %"8_019" = load i64, i64* %"8_0", align 4
  %30 = icmp ult i64 %"8_019", 2
  br i1 %30, label %32, label %31

31:                                               ; preds = %cond_exit_16
  store { i32, {}, { i64 } } { i32 0, {} undef, { i64 } poison }, { i32, {}, { i64 } }* %"020", align 4
  br label %39

32:                                               ; preds = %cond_exit_16
  %33 = alloca i64, i32 2, align 8
  %34 = bitcast i64* %33 to [2 x i64]*
  store [2 x i64] %"16_018", [2 x i64]* %34, align 4
  %35 = getelementptr inbounds i64, i64* %33, i64 %"8_019"
  %36 = load i64, i64* %35, align 4
  %37 = insertvalue { i64 } undef, i64 %36, 0
  %38 = insertvalue { i32, {}, { i64 } } { i32 1, {} poison, { i64 } poison }, { i64 } %37, 2
  store { i32, {}, { i64 } } %38, { i32, {}, { i64 } }* %"020", align 4
  br label %39

39:                                               ; preds = %31, %32
  %"021" = load { i32, {}, { i64 } }, { i32, {}, { i64 } }* %"020", align 4
  store { i32, {}, { i64 } } %"021", { i32, {}, { i64 } }* %"26_0", align 4
  %"26_022" = load { i32, {}, { i64 } }, { i32, {}, { i64 } }* %"26_0", align 4
  %40 = extractvalue { i32, {}, { i64 } } %"26_022", 0
  switch i32 %40, label %41 [
    i32 1, label %43
  ]

41:                                               ; preds = %39
  %42 = extractvalue { i32, {}, { i64 } } %"26_022", 1
  br label %cond_28_case_0

43:                                               ; preds = %39
  %44 = extractvalue { i32, {}, { i64 } } %"26_022", 2
  %45 = extractvalue { i64 } %44, 0
  store i64 %45, i64* %"027", align 4
  br label %cond_28_case_1

cond_28_case_0:                                   ; preds = %41
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, { i32, i8* }* %"33_0", align 8
  %"33_025" = load { i32, i8* }, { i32, i8* }* %"33_0", align 8
  %46 = extractvalue { i32, i8* } %"33_025", 0
  %47 = extractvalue { i32, i8* } %"33_025", 1
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.1, i32 0, i32 0), i32 %46, i8* %47)
  call void @abort()
  store i64 0, i64* %"34_0", align 4
  %"34_026" = load i64, i64* %"34_0", align 4
  store i64 %"34_026", i64* %"023", align 4
  br label %cond_exit_28

cond_28_case_1:                                   ; preds = %43
  %"028" = load i64, i64* %"027", align 4
  store i64 %"028", i64* %"36_0", align 4
  %"36_029" = load i64, i64* %"36_0", align 4
  store i64 %"36_029", i64* %"023", align 4
  br label %cond_exit_28

cond_exit_28:                                     ; preds = %cond_28_case_1, %cond_28_case_0
  %"024" = load i64, i64* %"023", align 4
  store i64 %"024", i64* %"28_0", align 4
  %"16_030" = load [2 x i64], [2 x i64]* %"16_0", align 4
  %"10_031" = load i64, i64* %"10_0", align 4
  %"28_032" = load i64, i64* %"28_0", align 4
  %49 = icmp ult i64 %"10_031", 2
  br i1 %49, label %54, label %50

50:                                               ; preds = %cond_exit_28
  %51 = insertvalue { i64, [2 x i64] } undef, i64 %"28_032", 0
  %52 = insertvalue { i64, [2 x i64] } %51, [2 x i64] %"16_030", 1
  %53 = insertvalue { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } { i32 0, { i64, [2 x i64] } poison, { i64, [2 x i64] } poison }, { i64, [2 x i64] } %52, 1
  store { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } %53, { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }* %"033", align 4
  br label %64

54:                                               ; preds = %cond_exit_28
  %55 = alloca i64, i32 2, align 8
  %56 = bitcast i64* %55 to [2 x i64]*
  store [2 x i64] %"16_030", [2 x i64]* %56, align 4
  %57 = getelementptr inbounds i64, i64* %55, i64 %"10_031"
  %58 = load i64, i64* %57, align 4
  store i64 %"28_032", i64* %57, align 4
  %59 = bitcast i64* %55 to [2 x i64]*
  %60 = load [2 x i64], [2 x i64]* %59, align 4
  %61 = insertvalue { i64, [2 x i64] } undef, i64 %58, 0
  %62 = insertvalue { i64, [2 x i64] } %61, [2 x i64] %60, 1
  %63 = insertvalue { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } { i32 1, { i64, [2 x i64] } poison, { i64, [2 x i64] } poison }, { i64, [2 x i64] } %62, 2
  store { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } %63, { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }* %"033", align 4
  br label %64

64:                                               ; preds = %50, %54
  %"034" = load { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }, { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }* %"033", align 4
  store { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } %"034", { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }* %"38_0", align 4
  %"38_035" = load { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }, { i32, { i64, [2 x i64] }, { i64, [2 x i64] } }* %"38_0", align 4
  %65 = extractvalue { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } %"38_035", 0
  switch i32 %65, label %66 [
    i32 1, label %70
  ]

66:                                               ; preds = %64
  %67 = extractvalue { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } %"38_035", 1
  %68 = extractvalue { i64, [2 x i64] } %67, 0
  %69 = extractvalue { i64, [2 x i64] } %67, 1
  store i64 %68, i64* %"039", align 4
  store [2 x i64] %69, [2 x i64]* %"140", align 4
  br label %cond_40_case_0

70:                                               ; preds = %64
  %71 = extractvalue { i32, { i64, [2 x i64] }, { i64, [2 x i64] } } %"38_035", 2
  %72 = extractvalue { i64, [2 x i64] } %71, 0
  %73 = extractvalue { i64, [2 x i64] } %71, 1
  store i64 %72, i64* %"048", align 4
  store [2 x i64] %73, [2 x i64]* %"149", align 4
  br label %cond_40_case_1

cond_40_case_0:                                   ; preds = %66
  %"041" = load i64, i64* %"039", align 4
  %"142" = load [2 x i64], [2 x i64]* %"140", align 4
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @2, i32 0, i32 0) }, { i32, i8* }* %"45_0", align 8
  store i64 %"041", i64* %"42_0", align 4
  store [2 x i64] %"142", [2 x i64]* %"42_1", align 4
  %"45_043" = load { i32, i8* }, { i32, i8* }* %"45_0", align 8
  %"42_044" = load i64, i64* %"42_0", align 4
  %"42_145" = load [2 x i64], [2 x i64]* %"42_1", align 4
  %74 = extractvalue { i32, i8* } %"45_043", 0
  %75 = extractvalue { i32, i8* } %"45_043", 1
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.2, i32 0, i32 0), i32 %74, i8* %75)
  call void @abort()
  store i64 0, i64* %"46_0", align 4
  store [2 x i64] zeroinitializer, [2 x i64]* %"46_1", align 4
  %"46_046" = load i64, i64* %"46_0", align 4
  %"46_147" = load [2 x i64], [2 x i64]* %"46_1", align 4
  store i64 %"46_046", i64* %"036", align 4
  store [2 x i64] %"46_147", [2 x i64]* %"1", align 4
  br label %cond_exit_40

cond_40_case_1:                                   ; preds = %70
  %"050" = load i64, i64* %"048", align 4
  %"151" = load [2 x i64], [2 x i64]* %"149", align 4
  store i64 %"050", i64* %"48_0", align 4
  store [2 x i64] %"151", [2 x i64]* %"48_1", align 4
  %"48_052" = load i64, i64* %"48_0", align 4
  %"48_153" = load [2 x i64], [2 x i64]* %"48_1", align 4
  store i64 %"48_052", i64* %"036", align 4
  store [2 x i64] %"48_153", [2 x i64]* %"1", align 4
  br label %cond_exit_40

cond_exit_40:                                     ; preds = %cond_40_case_1, %cond_40_case_0
  %"037" = load i64, i64* %"036", align 4
  %"138" = load [2 x i64], [2 x i64]* %"1", align 4
  store i64 %"037", i64* %"40_0", align 4
  store [2 x i64] %"138", [2 x i64]* %"40_1", align 4
  %"40_154" = load [2 x i64], [2 x i64]* %"40_1", align 4
  %77 = alloca i64, i32 2, align 8
  %78 = bitcast i64* %77 to [2 x i64]*
  store [2 x i64] %"40_154", [2 x i64]* %78, align 4
  %79 = getelementptr i64, i64* %77, i32 1
  %80 = load i64, i64* %77, align 4
  %81 = bitcast i64* %79 to [1 x i64]*
  %82 = load [1 x i64], [1 x i64]* %81, align 4
  %83 = insertvalue { i64, [1 x i64] } undef, i64 %80, 0
  %84 = insertvalue { i64, [1 x i64] } %83, [1 x i64] %82, 1
  %85 = insertvalue { i32, {}, { i64, [1 x i64] } } { i32 1, {} poison, { i64, [1 x i64] } poison }, { i64, [1 x i64] } %84, 2
  store { i32, {}, { i64, [1 x i64] } } %85, { i32, {}, { i64, [1 x i64] } }* %"50_0", align 4
  %"50_055" = load { i32, {}, { i64, [1 x i64] } }, { i32, {}, { i64, [1 x i64] } }* %"50_0", align 4
  %86 = extractvalue { i32, {}, { i64, [1 x i64] } } %"50_055", 0
  switch i32 %86, label %87 [
    i32 1, label %89
  ]

87:                                               ; preds = %cond_exit_40
  %88 = extractvalue { i32, {}, { i64, [1 x i64] } } %"50_055", 1
  br label %cond_51_case_0

89:                                               ; preds = %cond_exit_40
  %90 = extractvalue { i32, {}, { i64, [1 x i64] } } %"50_055", 2
  %91 = extractvalue { i64, [1 x i64] } %90, 0
  %92 = extractvalue { i64, [1 x i64] } %90, 1
  store i64 %91, i64* %"063", align 4
  store [1 x i64] %92, [1 x i64]* %"164", align 4
  br label %cond_51_case_1

cond_51_case_0:                                   ; preds = %87
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @3, i32 0, i32 0) }, { i32, i8* }* %"56_0", align 8
  %"56_060" = load { i32, i8* }, { i32, i8* }* %"56_0", align 8
  %93 = extractvalue { i32, i8* } %"56_060", 0
  %94 = extractvalue { i32, i8* } %"56_060", 1
  %95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.3, i32 0, i32 0), i32 %93, i8* %94)
  call void @abort()
  store i64 0, i64* %"57_0", align 4
  store [1 x i64] zeroinitializer, [1 x i64]* %"57_1", align 4
  %"57_061" = load i64, i64* %"57_0", align 4
  %"57_162" = load [1 x i64], [1 x i64]* %"57_1", align 4
  store i64 %"57_061", i64* %"056", align 4
  store [1 x i64] %"57_162", [1 x i64]* %"157", align 4
  br label %cond_exit_51

cond_51_case_1:                                   ; preds = %89
  %"065" = load i64, i64* %"063", align 4
  %"166" = load [1 x i64], [1 x i64]* %"164", align 4
  store i64 %"065", i64* %"59_0", align 4
  store [1 x i64] %"166", [1 x i64]* %"59_1", align 4
  %"59_067" = load i64, i64* %"59_0", align 4
  %"59_168" = load [1 x i64], [1 x i64]* %"59_1", align 4
  store i64 %"59_067", i64* %"056", align 4
  store [1 x i64] %"59_168", [1 x i64]* %"157", align 4
  br label %cond_exit_51

cond_exit_51:                                     ; preds = %cond_51_case_1, %cond_51_case_0
  %"058" = load i64, i64* %"056", align 4
  %"159" = load [1 x i64], [1 x i64]* %"157", align 4
  store i64 %"058", i64* %"51_0", align 4
  store [1 x i64] %"159", [1 x i64]* %"51_1", align 4
  %"51_169" = load [1 x i64], [1 x i64]* %"51_1", align 4
  %96 = alloca i64, align 8
  %97 = bitcast i64* %96 to [1 x i64]*
  store [1 x i64] %"51_169", [1 x i64]* %97, align 4
  %98 = getelementptr i64, i64* %96, i32 0
  %99 = load i64, i64* %98, align 4
  %100 = bitcast i64* %96 to [0 x i64]*
  %101 = load [0 x i64], [0 x i64]* %100, align 4
  %102 = insertvalue { i64, [0 x i64] } undef, i64 %99, 0
  %103 = insertvalue { i64, [0 x i64] } %102, [0 x i64] %101, 1
  %104 = insertvalue { i32, {}, { i64, [0 x i64] } } { i32 1, {} poison, { i64, [0 x i64] } poison }, { i64, [0 x i64] } %103, 2
  store { i32, {}, { i64, [0 x i64] } } %104, { i32, {}, { i64, [0 x i64] } }* %"61_0", align 4
  %"61_070" = load { i32, {}, { i64, [0 x i64] } }, { i32, {}, { i64, [0 x i64] } }* %"61_0", align 4
  %105 = extractvalue { i32, {}, { i64, [0 x i64] } } %"61_070", 0
  switch i32 %105, label %106 [
    i32 1, label %108
  ]

106:                                              ; preds = %cond_exit_51
  %107 = extractvalue { i32, {}, { i64, [0 x i64] } } %"61_070", 1
  br label %cond_62_case_0

108:                                              ; preds = %cond_exit_51
  %109 = extractvalue { i32, {}, { i64, [0 x i64] } } %"61_070", 2
  %110 = extractvalue { i64, [0 x i64] } %109, 0
  %111 = extractvalue { i64, [0 x i64] } %109, 1
  store i64 %110, i64* %"078", align 4
  store [0 x i64] %111, [0 x i64]* %"179", align 4
  br label %cond_62_case_1

cond_62_case_0:                                   ; preds = %106
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @4, i32 0, i32 0) }, { i32, i8* }* %"67_0", align 8
  %"67_075" = load { i32, i8* }, { i32, i8* }* %"67_0", align 8
  %112 = extractvalue { i32, i8* } %"67_075", 0
  %113 = extractvalue { i32, i8* } %"67_075", 1
  %114 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.4, i32 0, i32 0), i32 %112, i8* %113)
  call void @abort()
  store i64 0, i64* %"68_0", align 4
  store [0 x i64] zeroinitializer, [0 x i64]* %"68_1", align 4
  %"68_076" = load i64, i64* %"68_0", align 4
  %"68_177" = load [0 x i64], [0 x i64]* %"68_1", align 4
  store i64 %"68_076", i64* %"071", align 4
  store [0 x i64] %"68_177", [0 x i64]* %"172", align 4
  br label %cond_exit_62

cond_62_case_1:                                   ; preds = %108
  %"080" = load i64, i64* %"078", align 4
  %"181" = load [0 x i64], [0 x i64]* %"179", align 4
  store i64 %"080", i64* %"70_0", align 4
  store [0 x i64] %"181", [0 x i64]* %"70_1", align 4
  %"70_082" = load i64, i64* %"70_0", align 4
  %"70_183" = load [0 x i64], [0 x i64]* %"70_1", align 4
  store i64 %"70_082", i64* %"071", align 4
  store [0 x i64] %"70_183", [0 x i64]* %"172", align 4
  br label %cond_exit_62

cond_exit_62:                                     ; preds = %cond_62_case_1, %cond_62_case_0
  %"073" = load i64, i64* %"071", align 4
  %"174" = load [0 x i64], [0 x i64]* %"172", align 4
  store i64 %"073", i64* %"62_0", align 4
  store [0 x i64] %"174", [0 x i64]* %"62_1", align 4
  %"62_184" = load [0 x i64], [0 x i64]* %"62_1", align 4
  ret void
}

declare i32 @printf(i8*, ...)

declare void @abort()
