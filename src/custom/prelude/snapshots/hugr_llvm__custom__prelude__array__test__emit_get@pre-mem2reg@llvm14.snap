---
source: src/custom/prelude/array.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

define void @_hl.main.1() {
alloca_block:
  %"7_0" = alloca i64, align 8
  %"5_0" = alloca i64, align 8
  %"8_0" = alloca [2 x i64], align 8
  %"9_0" = alloca { i32, {}, { i64 } }, align 8
  %"0" = alloca { i32, {}, { i64 } }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store i64 2, i64* %"7_0", align 4
  store i64 1, i64* %"5_0", align 4
  %"5_01" = load i64, i64* %"5_0", align 4
  %"7_02" = load i64, i64* %"7_0", align 4
  %0 = insertvalue [2 x i64] undef, i64 %"5_01", 0
  %1 = insertvalue [2 x i64] %0, i64 %"7_02", 1
  store [2 x i64] %1, [2 x i64]* %"8_0", align 4
  %"8_03" = load [2 x i64], [2 x i64]* %"8_0", align 4
  %"5_04" = load i64, i64* %"5_0", align 4
  %2 = icmp ult i64 %"5_04", 2
  br i1 %2, label %4, label %3

3:                                                ; preds = %entry_block
  store { i32, {}, { i64 } } { i32 0, {} undef, { i64 } poison }, { i32, {}, { i64 } }* %"0", align 4
  br label %11

4:                                                ; preds = %entry_block
  %5 = alloca i64, i32 2, align 8
  %6 = bitcast i64* %5 to [2 x i64]*
  store [2 x i64] %"8_03", [2 x i64]* %6, align 4
  %7 = getelementptr inbounds i64, i64* %5, i64 %"5_04"
  %8 = load i64, i64* %7, align 4
  %9 = insertvalue { i64 } undef, i64 %8, 0
  %10 = insertvalue { i32, {}, { i64 } } { i32 1, {} poison, { i64 } poison }, { i64 } %9, 2
  store { i32, {}, { i64 } } %10, { i32, {}, { i64 } }* %"0", align 4
  br label %11

11:                                               ; preds = %3, %4
  %"05" = load { i32, {}, { i64 } }, { i32, {}, { i64 } }* %"0", align 4
  store { i32, {}, { i64 } } %"05", { i32, {}, { i64 } }* %"9_0", align 4
  ret void
}
