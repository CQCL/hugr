{
    "$defs": {
        "Alias": {
            "additionalProperties": false,
            "description": "An Alias Type",
            "properties": {
                "t": {
                    "const": "Alias",
                    "default": "Alias",
                    "enum": [
                        "Alias"
                    ],
                    "title": "T",
                    "type": "string"
                },
                "bound": {
                    "$ref": "#/$defs/TypeBound"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                }
            },
            "required": [
                "bound",
                "name"
            ],
            "title": "Alias",
            "type": "object"
        },
        "AliasDecl": {
            "additionalProperties": false,
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "AliasDecl",
                    "default": "AliasDecl",
                    "enum": [
                        "AliasDecl"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "bound": {
                    "$ref": "#/$defs/TypeBound"
                }
            },
            "required": [
                "parent",
                "name",
                "bound"
            ],
            "title": "AliasDecl",
            "type": "object"
        },
        "AliasDefn": {
            "additionalProperties": false,
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "AliasDefn",
                    "default": "AliasDefn",
                    "enum": [
                        "AliasDefn"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "definition": {
                    "$ref": "#/$defs/Type"
                }
            },
            "required": [
                "parent",
                "name",
                "definition"
            ],
            "title": "AliasDefn",
            "type": "object"
        },
        "Array": {
            "additionalProperties": false,
            "description": "Known size array whose elements are of the same type.",
            "properties": {
                "ty": {
                    "$ref": "#/$defs/Type"
                },
                "t": {
                    "const": "Array",
                    "default": "Array",
                    "enum": [
                        "Array"
                    ],
                    "title": "T",
                    "type": "string"
                },
                "len": {
                    "title": "Len",
                    "type": "integer"
                }
            },
            "required": [
                "ty",
                "len"
            ],
            "title": "Array",
            "type": "object"
        },
        "BoundedNatArg": {
            "additionalProperties": false,
            "properties": {
                "tya": {
                    "const": "BoundedNat",
                    "default": "BoundedNat",
                    "enum": [
                        "BoundedNat"
                    ],
                    "title": "Tya",
                    "type": "string"
                },
                "n": {
                    "title": "N",
                    "type": "integer"
                }
            },
            "required": [
                "n"
            ],
            "title": "BoundedNatArg",
            "type": "object"
        },
        "BoundedNatParam": {
            "additionalProperties": false,
            "properties": {
                "tp": {
                    "const": "BoundedNat",
                    "default": "BoundedNat",
                    "enum": [
                        "BoundedNat"
                    ],
                    "title": "Tp",
                    "type": "string"
                },
                "bound": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Bound"
                }
            },
            "required": [
                "bound"
            ],
            "title": "BoundedNatParam",
            "type": "object"
        },
        "CFG": {
            "additionalProperties": false,
            "description": "A dataflow node which is defined by a child CFG.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "CFG",
                    "default": "CFG",
                    "enum": [
                        "CFG"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/$defs/FunctionType"
                }
            },
            "required": [
                "parent"
            ],
            "title": "CFG",
            "type": "object"
        },
        "Call": {
            "additionalProperties": false,
            "description": "Call a function directly.\n\nThe first port is connected to the def/declare of the function being called\ndirectly, with a `ConstE<Graph>` edge. The signature of the remaining ports matches\nthe function being called.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "Call",
                    "default": "Call",
                    "enum": [
                        "Call"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "func_sig": {
                    "$ref": "#/$defs/PolyFuncType"
                },
                "type_args": {
                    "items": {
                        "$ref": "#/$defs/TypeArg"
                    },
                    "title": "Type Args",
                    "type": "array"
                },
                "instantiation": {
                    "$ref": "#/$defs/FunctionType"
                }
            },
            "required": [
                "parent",
                "func_sig",
                "type_args",
                "instantiation"
            ],
            "title": "Call",
            "type": "object"
        },
        "CallIndirect": {
            "additionalProperties": false,
            "description": "Call a function indirectly.\n\nLike call, but the first input is a standard dataflow graph type.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "CallIndirect",
                    "default": "CallIndirect",
                    "enum": [
                        "CallIndirect"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/$defs/FunctionType"
                }
            },
            "required": [
                "parent"
            ],
            "title": "CallIndirect",
            "type": "object"
        },
        "Case": {
            "additionalProperties": false,
            "description": "Case ops - nodes valid inside Conditional nodes.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "Case",
                    "default": "Case",
                    "enum": [
                        "Case"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/$defs/FunctionType"
                }
            },
            "required": [
                "parent"
            ],
            "title": "Case",
            "type": "object"
        },
        "Conditional": {
            "additionalProperties": false,
            "description": "Conditional operation, defined by child `Case` nodes for each branch.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "Conditional",
                    "default": "Conditional",
                    "enum": [
                        "Conditional"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "other_inputs": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Other Inputs",
                    "type": "array"
                },
                "outputs": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Outputs",
                    "type": "array"
                },
                "sum_rows": {
                    "description": "The possible rows of the Sum input",
                    "items": {
                        "items": {
                            "$ref": "#/$defs/Type"
                        },
                        "type": "array"
                    },
                    "title": "Sum Rows",
                    "type": "array"
                },
                "extension_delta": {
                    "items": {
                        "type": "string"
                    },
                    "title": "Extension Delta",
                    "type": "array"
                }
            },
            "required": [
                "parent"
            ],
            "title": "Conditional",
            "type": "object"
        },
        "Const": {
            "additionalProperties": false,
            "description": "A Const operation definition.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "Const",
                    "default": "Const",
                    "enum": [
                        "Const"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "v": {
                    "$ref": "#/$defs/Value"
                }
            },
            "required": [
                "parent",
                "v"
            ],
            "title": "Const",
            "type": "object"
        },
        "CustomOp": {
            "additionalProperties": false,
            "description": "A user-defined operation that can be downcasted by the extensions that define\nit.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "CustomOp",
                    "default": "CustomOp",
                    "enum": [
                        "CustomOp"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "extension": {
                    "title": "Extension",
                    "type": "string"
                },
                "op_name": {
                    "title": "Op Name",
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/$defs/FunctionType"
                },
                "description": {
                    "default": "",
                    "title": "Description",
                    "type": "string"
                },
                "args": {
                    "items": {
                        "$ref": "#/$defs/TypeArg"
                    },
                    "title": "Args",
                    "type": "array"
                }
            },
            "required": [
                "parent",
                "extension",
                "op_name"
            ],
            "title": "CustomOp",
            "type": "object"
        },
        "DFG": {
            "additionalProperties": false,
            "description": "A simply nested dataflow graph.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "DFG",
                    "default": "DFG",
                    "enum": [
                        "DFG"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/$defs/FunctionType"
                }
            },
            "required": [
                "parent"
            ],
            "title": "DFG",
            "type": "object"
        },
        "DataflowBlock": {
            "additionalProperties": false,
            "description": "A CFG basic block node. The signature is that of the internal Dataflow\ngraph.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "DataflowBlock",
                    "default": "DataflowBlock",
                    "enum": [
                        "DataflowBlock"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "inputs": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Inputs",
                    "type": "array"
                },
                "other_outputs": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Other Outputs",
                    "type": "array"
                },
                "sum_rows": {
                    "items": {
                        "items": {
                            "$ref": "#/$defs/Type"
                        },
                        "type": "array"
                    },
                    "title": "Sum Rows",
                    "type": "array"
                },
                "extension_delta": {
                    "items": {
                        "type": "string"
                    },
                    "title": "Extension Delta",
                    "type": "array"
                }
            },
            "required": [
                "parent"
            ],
            "title": "DataflowBlock",
            "type": "object"
        },
        "ExitBlock": {
            "additionalProperties": false,
            "description": "The single exit node of the CFG, has no children, stores the types of\nthe CFG node output.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "ExitBlock",
                    "default": "ExitBlock",
                    "enum": [
                        "ExitBlock"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "cfg_outputs": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Cfg Outputs",
                    "type": "array"
                }
            },
            "required": [
                "parent",
                "cfg_outputs"
            ],
            "title": "ExitBlock",
            "type": "object"
        },
        "ExtensionValue": {
            "additionalProperties": false,
            "description": "An extension constant value, that can check it is of a given [CustomType].",
            "properties": {
                "c": {
                    "const": "Extension",
                    "default": "Extension",
                    "enum": [
                        "Extension"
                    ],
                    "title": "ValueTag",
                    "type": "string"
                },
                "e": {
                    "title": "CustomConst"
                }
            },
            "required": [
                "e"
            ],
            "title": "ExtensionValue",
            "type": "object"
        },
        "ExtensionsArg": {
            "additionalProperties": false,
            "properties": {
                "tya": {
                    "const": "Extensions",
                    "default": "Extensions",
                    "enum": [
                        "Extensions"
                    ],
                    "title": "Tya",
                    "type": "string"
                },
                "es": {
                    "items": {
                        "type": "string"
                    },
                    "title": "Es",
                    "type": "array"
                }
            },
            "required": [
                "es"
            ],
            "title": "ExtensionsArg",
            "type": "object"
        },
        "ExtensionsParam": {
            "additionalProperties": false,
            "properties": {
                "tp": {
                    "const": "Extensions",
                    "default": "Extensions",
                    "enum": [
                        "Extensions"
                    ],
                    "title": "Tp",
                    "type": "string"
                }
            },
            "title": "ExtensionsParam",
            "type": "object"
        },
        "FuncDecl": {
            "additionalProperties": false,
            "description": "External function declaration, linked at runtime.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "FuncDecl",
                    "default": "FuncDecl",
                    "enum": [
                        "FuncDecl"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/$defs/PolyFuncType"
                }
            },
            "required": [
                "parent",
                "name",
                "signature"
            ],
            "title": "FuncDecl",
            "type": "object"
        },
        "FuncDefn": {
            "additionalProperties": false,
            "description": "A function definition. Children nodes are the body of the definition.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "FuncDefn",
                    "default": "FuncDefn",
                    "enum": [
                        "FuncDefn"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/$defs/PolyFuncType"
                }
            },
            "required": [
                "parent",
                "name",
                "signature"
            ],
            "title": "FuncDefn",
            "type": "object"
        },
        "FunctionType": {
            "additionalProperties": false,
            "description": "A graph encoded as a value. It contains a concrete signature and a set of\nrequired resources.",
            "properties": {
                "t": {
                    "const": "G",
                    "default": "G",
                    "enum": [
                        "G"
                    ],
                    "title": "T",
                    "type": "string"
                },
                "input": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Input",
                    "type": "array"
                },
                "output": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Output",
                    "type": "array"
                },
                "extension_reqs": {
                    "items": {
                        "type": "string"
                    },
                    "title": "Extension Reqs",
                    "type": "array"
                }
            },
            "required": [
                "input",
                "output"
            ],
            "title": "FunctionType",
            "type": "object"
        },
        "FunctionValue": {
            "additionalProperties": false,
            "description": "A higher-order function value.",
            "properties": {
                "c": {
                    "const": "Function",
                    "default": "Function",
                    "enum": [
                        "Function"
                    ],
                    "title": "ValueTag",
                    "type": "string"
                },
                "hugr": {
                    "title": "Hugr"
                }
            },
            "required": [
                "hugr"
            ],
            "title": "FunctionValue",
            "type": "object"
        },
        "GeneralSum": {
            "additionalProperties": false,
            "description": "General sum type that explicitly stores the types of the variants.",
            "properties": {
                "s": {
                    "const": "General",
                    "default": "General",
                    "enum": [
                        "General"
                    ],
                    "title": "S",
                    "type": "string"
                },
                "rows": {
                    "items": {
                        "items": {
                            "$ref": "#/$defs/Type"
                        },
                        "type": "array"
                    },
                    "title": "Rows",
                    "type": "array"
                }
            },
            "required": [
                "rows"
            ],
            "title": "GeneralSum",
            "type": "object"
        },
        "Input": {
            "additionalProperties": false,
            "description": "An input node. The outputs of this node are the inputs to the parent node.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "Input",
                    "default": "Input",
                    "enum": [
                        "Input"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "types": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Types",
                    "type": "array"
                }
            },
            "required": [
                "parent"
            ],
            "title": "Input",
            "type": "object"
        },
        "Lift": {
            "additionalProperties": false,
            "description": "Fixes some TypeParams of a polymorphic type by providing TypeArgs.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "Lift",
                    "default": "Lift",
                    "enum": [
                        "Lift"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "type_row": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Type Row",
                    "type": "array"
                },
                "new_extension": {
                    "title": "New Extension",
                    "type": "string"
                }
            },
            "required": [
                "parent",
                "type_row",
                "new_extension"
            ],
            "title": "Lift",
            "type": "object"
        },
        "ListParam": {
            "additionalProperties": false,
            "properties": {
                "tp": {
                    "const": "List",
                    "default": "List",
                    "enum": [
                        "List"
                    ],
                    "title": "Tp",
                    "type": "string"
                },
                "param": {
                    "$ref": "#/$defs/TypeParam"
                }
            },
            "required": [
                "param"
            ],
            "title": "ListParam",
            "type": "object"
        },
        "LoadConstant": {
            "additionalProperties": false,
            "description": "An operation that loads a static constant in to the local dataflow graph.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "LoadConstant",
                    "default": "LoadConstant",
                    "enum": [
                        "LoadConstant"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "datatype": {
                    "$ref": "#/$defs/Type"
                }
            },
            "required": [
                "parent",
                "datatype"
            ],
            "title": "LoadConstant",
            "type": "object"
        },
        "LoadFunction": {
            "additionalProperties": false,
            "description": "Load a static function in to the local dataflow graph.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "LoadFunction",
                    "default": "LoadFunction",
                    "enum": [
                        "LoadFunction"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "func_sig": {
                    "$ref": "#/$defs/PolyFuncType"
                },
                "type_args": {
                    "items": {
                        "$ref": "#/$defs/TypeArg"
                    },
                    "title": "Type Args",
                    "type": "array"
                },
                "signature": {
                    "$ref": "#/$defs/FunctionType"
                }
            },
            "required": [
                "parent",
                "func_sig",
                "type_args",
                "signature"
            ],
            "title": "LoadFunction",
            "type": "object"
        },
        "MakeTuple": {
            "additionalProperties": false,
            "description": "An operation that packs all its inputs into a tuple.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "MakeTuple",
                    "default": "MakeTuple",
                    "enum": [
                        "MakeTuple"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "tys": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Tys",
                    "type": "array"
                }
            },
            "required": [
                "parent"
            ],
            "title": "MakeTuple",
            "type": "object"
        },
        "Module": {
            "additionalProperties": false,
            "description": "The root of a module, parent of all other `ModuleOp`s.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "Module",
                    "default": "Module",
                    "enum": [
                        "Module"
                    ],
                    "title": "Op",
                    "type": "string"
                }
            },
            "required": [
                "parent"
            ],
            "title": "Module",
            "type": "object"
        },
        "Noop": {
            "additionalProperties": false,
            "description": "A no-op operation.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "Noop",
                    "default": "Noop",
                    "enum": [
                        "Noop"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "ty": {
                    "$ref": "#/$defs/Type"
                }
            },
            "required": [
                "parent",
                "ty"
            ],
            "title": "Noop",
            "type": "object"
        },
        "OpType": {
            "description": "A constant operation.",
            "discriminator": {
                "mapping": {
                    "AliasDecl": "#/$defs/AliasDecl",
                    "AliasDefn": "#/$defs/AliasDefn",
                    "CFG": "#/$defs/CFG",
                    "Call": "#/$defs/Call",
                    "CallIndirect": "#/$defs/CallIndirect",
                    "Case": "#/$defs/Case",
                    "Conditional": "#/$defs/Conditional",
                    "Const": "#/$defs/Const",
                    "CustomOp": "#/$defs/CustomOp",
                    "DFG": "#/$defs/DFG",
                    "DataflowBlock": "#/$defs/DataflowBlock",
                    "ExitBlock": "#/$defs/ExitBlock",
                    "FuncDecl": "#/$defs/FuncDecl",
                    "FuncDefn": "#/$defs/FuncDefn",
                    "Input": "#/$defs/Input",
                    "Lift": "#/$defs/Lift",
                    "LoadConstant": "#/$defs/LoadConstant",
                    "LoadFunction": "#/$defs/LoadFunction",
                    "MakeTuple": "#/$defs/MakeTuple",
                    "Module": "#/$defs/Module",
                    "Noop": "#/$defs/Noop",
                    "Output": "#/$defs/Output",
                    "Tag": "#/$defs/Tag",
                    "TailLoop": "#/$defs/TailLoop",
                    "UnpackTuple": "#/$defs/UnpackTuple"
                },
                "propertyName": "op"
            },
            "oneOf": [
                {
                    "$ref": "#/$defs/Module"
                },
                {
                    "$ref": "#/$defs/Case"
                },
                {
                    "$ref": "#/$defs/FuncDefn"
                },
                {
                    "$ref": "#/$defs/FuncDecl"
                },
                {
                    "$ref": "#/$defs/Const"
                },
                {
                    "$ref": "#/$defs/DataflowBlock"
                },
                {
                    "$ref": "#/$defs/ExitBlock"
                },
                {
                    "$ref": "#/$defs/Conditional"
                },
                {
                    "$ref": "#/$defs/TailLoop"
                },
                {
                    "$ref": "#/$defs/CFG"
                },
                {
                    "$ref": "#/$defs/Input"
                },
                {
                    "$ref": "#/$defs/Output"
                },
                {
                    "$ref": "#/$defs/Call"
                },
                {
                    "$ref": "#/$defs/CallIndirect"
                },
                {
                    "$ref": "#/$defs/LoadConstant"
                },
                {
                    "$ref": "#/$defs/LoadFunction"
                },
                {
                    "$ref": "#/$defs/CustomOp"
                },
                {
                    "$ref": "#/$defs/Noop"
                },
                {
                    "$ref": "#/$defs/MakeTuple"
                },
                {
                    "$ref": "#/$defs/UnpackTuple"
                },
                {
                    "$ref": "#/$defs/Tag"
                },
                {
                    "$ref": "#/$defs/Lift"
                },
                {
                    "$ref": "#/$defs/DFG"
                },
                {
                    "$ref": "#/$defs/AliasDecl"
                },
                {
                    "$ref": "#/$defs/AliasDefn"
                }
            ],
            "title": "OpType"
        },
        "Opaque": {
            "additionalProperties": false,
            "description": "An opaque Type that can be downcasted by the extensions that define it.",
            "properties": {
                "extension": {
                    "title": "Extension",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "args": {
                    "items": {
                        "$ref": "#/$defs/TypeArg"
                    },
                    "title": "Args",
                    "type": "array"
                },
                "bound": {
                    "$ref": "#/$defs/TypeBound"
                }
            },
            "required": [
                "extension",
                "id",
                "args",
                "bound"
            ],
            "title": "Opaque",
            "type": "object"
        },
        "OpaqueArg": {
            "additionalProperties": false,
            "properties": {
                "tya": {
                    "const": "Opaque",
                    "default": "Opaque",
                    "enum": [
                        "Opaque"
                    ],
                    "title": "Tya",
                    "type": "string"
                },
                "typ": {
                    "$ref": "#/$defs/Opaque"
                },
                "value": {
                    "title": "Value"
                }
            },
            "required": [
                "typ",
                "value"
            ],
            "title": "OpaqueArg",
            "type": "object"
        },
        "OpaqueParam": {
            "additionalProperties": false,
            "properties": {
                "tp": {
                    "const": "Opaque",
                    "default": "Opaque",
                    "enum": [
                        "Opaque"
                    ],
                    "title": "Tp",
                    "type": "string"
                },
                "ty": {
                    "$ref": "#/$defs/Opaque"
                }
            },
            "required": [
                "ty"
            ],
            "title": "OpaqueParam",
            "type": "object"
        },
        "Output": {
            "additionalProperties": false,
            "description": "An output node. The inputs are the outputs of the function.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "Output",
                    "default": "Output",
                    "enum": [
                        "Output"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "types": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Types",
                    "type": "array"
                }
            },
            "required": [
                "parent"
            ],
            "title": "Output",
            "type": "object"
        },
        "PolyFuncType": {
            "additionalProperties": false,
            "description": "A polymorphic type scheme, i.e. of a FuncDecl, FuncDefn or OpDef.\n(Nodes/operations in the Hugr are not polymorphic.)",
            "properties": {
                "params": {
                    "items": {
                        "$ref": "#/$defs/TypeParam"
                    },
                    "title": "Params",
                    "type": "array"
                },
                "body": {
                    "$ref": "#/$defs/FunctionType"
                }
            },
            "required": [
                "params",
                "body"
            ],
            "title": "PolyFuncType",
            "type": "object"
        },
        "Qubit": {
            "additionalProperties": false,
            "description": "A qubit.",
            "properties": {
                "t": {
                    "const": "Q",
                    "default": "Q",
                    "enum": [
                        "Q"
                    ],
                    "title": "T",
                    "type": "string"
                }
            },
            "title": "Qubit",
            "type": "object"
        },
        "SequenceArg": {
            "additionalProperties": false,
            "properties": {
                "tya": {
                    "const": "Sequence",
                    "default": "Sequence",
                    "enum": [
                        "Sequence"
                    ],
                    "title": "Tya",
                    "type": "string"
                },
                "elems": {
                    "items": {
                        "$ref": "#/$defs/TypeArg"
                    },
                    "title": "Elems",
                    "type": "array"
                }
            },
            "required": [
                "elems"
            ],
            "title": "SequenceArg",
            "type": "object"
        },
        "SumType": {
            "discriminator": {
                "mapping": {
                    "General": "#/$defs/GeneralSum",
                    "Unit": "#/$defs/UnitSum"
                },
                "propertyName": "s"
            },
            "oneOf": [
                {
                    "$ref": "#/$defs/UnitSum"
                },
                {
                    "$ref": "#/$defs/GeneralSum"
                }
            ],
            "title": "SumType"
        },
        "SumValue": {
            "additionalProperties": false,
            "description": "A Sum variant\n\nFor any Sum type where this value meets the type of the variant indicated by the tag",
            "properties": {
                "c": {
                    "const": "Sum",
                    "default": "Sum",
                    "enum": [
                        "Sum"
                    ],
                    "title": "ValueTag",
                    "type": "string"
                },
                "tag": {
                    "title": "Tag",
                    "type": "integer"
                },
                "typ": {
                    "$ref": "#/$defs/SumType"
                },
                "vs": {
                    "items": {
                        "$ref": "#/$defs/Value"
                    },
                    "title": "Vs",
                    "type": "array"
                }
            },
            "required": [
                "tag",
                "typ",
                "vs"
            ],
            "title": "SumValue",
            "type": "object"
        },
        "Tag": {
            "additionalProperties": false,
            "description": "An operation that creates a tagged sum value from one of its variants.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "Tag",
                    "default": "Tag",
                    "enum": [
                        "Tag"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "tag": {
                    "title": "Tag",
                    "type": "integer"
                },
                "variants": {
                    "items": {
                        "items": {
                            "$ref": "#/$defs/Type"
                        },
                        "type": "array"
                    },
                    "title": "Variants",
                    "type": "array"
                }
            },
            "required": [
                "parent",
                "tag",
                "variants"
            ],
            "title": "Tag",
            "type": "object"
        },
        "TaggedOpaque": {
            "additionalProperties": false,
            "properties": {
                "t": {
                    "const": "Opaque",
                    "default": "Opaque",
                    "enum": [
                        "Opaque"
                    ],
                    "title": "T",
                    "type": "string"
                },
                "o": {
                    "$ref": "#/$defs/Opaque"
                }
            },
            "required": [
                "o"
            ],
            "title": "TaggedOpaque",
            "type": "object"
        },
        "TaggedSumType": {
            "additionalProperties": false,
            "properties": {
                "t": {
                    "const": "Sum",
                    "default": "Sum",
                    "enum": [
                        "Sum"
                    ],
                    "title": "T",
                    "type": "string"
                },
                "st": {
                    "$ref": "#/$defs/SumType"
                }
            },
            "required": [
                "st"
            ],
            "title": "TaggedSumType",
            "type": "object"
        },
        "TailLoop": {
            "additionalProperties": false,
            "description": "Tail-controlled loop.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "TailLoop",
                    "default": "TailLoop",
                    "enum": [
                        "TailLoop"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "just_inputs": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Just Inputs",
                    "type": "array"
                },
                "just_outputs": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Just Outputs",
                    "type": "array"
                },
                "rest": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Rest",
                    "type": "array"
                }
            },
            "required": [
                "parent"
            ],
            "title": "TailLoop",
            "type": "object"
        },
        "TupleParam": {
            "additionalProperties": false,
            "properties": {
                "tp": {
                    "const": "Tuple",
                    "default": "Tuple",
                    "enum": [
                        "Tuple"
                    ],
                    "title": "Tp",
                    "type": "string"
                },
                "params": {
                    "items": {
                        "$ref": "#/$defs/TypeParam"
                    },
                    "title": "Params",
                    "type": "array"
                }
            },
            "required": [
                "params"
            ],
            "title": "TupleParam",
            "type": "object"
        },
        "TupleValue": {
            "additionalProperties": false,
            "description": "A constant tuple value.",
            "properties": {
                "c": {
                    "const": "Tuple",
                    "default": "Tuple",
                    "enum": [
                        "Tuple"
                    ],
                    "title": "ValueTag",
                    "type": "string"
                },
                "vs": {
                    "items": {
                        "$ref": "#/$defs/Value"
                    },
                    "title": "Vs",
                    "type": "array"
                }
            },
            "required": [
                "vs"
            ],
            "title": "TupleValue",
            "type": "object"
        },
        "Type": {
            "description": "A HUGR type.",
            "discriminator": {
                "mapping": {
                    "Alias": "#/$defs/Alias",
                    "Array": "#/$defs/Array",
                    "G": "#/$defs/FunctionType",
                    "I": "#/$defs/USize",
                    "Opaque": "#/$defs/TaggedOpaque",
                    "Q": "#/$defs/Qubit",
                    "Sum": "#/$defs/TaggedSumType",
                    "V": "#/$defs/Variable"
                },
                "propertyName": "t"
            },
            "oneOf": [
                {
                    "$ref": "#/$defs/Qubit"
                },
                {
                    "$ref": "#/$defs/Variable"
                },
                {
                    "$ref": "#/$defs/USize"
                },
                {
                    "$ref": "#/$defs/FunctionType"
                },
                {
                    "$ref": "#/$defs/Array"
                },
                {
                    "$ref": "#/$defs/TaggedSumType"
                },
                {
                    "$ref": "#/$defs/TaggedOpaque"
                },
                {
                    "$ref": "#/$defs/Alias"
                }
            ],
            "title": "Type"
        },
        "TypeArg": {
            "description": "A type argument.",
            "discriminator": {
                "mapping": {
                    "BoundedNat": "#/$defs/BoundedNatArg",
                    "Extensions": "#/$defs/ExtensionsArg",
                    "Opaque": "#/$defs/OpaqueArg",
                    "Sequence": "#/$defs/SequenceArg",
                    "Type": "#/$defs/TypeTypeArg",
                    "Variable": "#/$defs/VariableArg"
                },
                "propertyName": "tya"
            },
            "oneOf": [
                {
                    "$ref": "#/$defs/TypeTypeArg"
                },
                {
                    "$ref": "#/$defs/BoundedNatArg"
                },
                {
                    "$ref": "#/$defs/OpaqueArg"
                },
                {
                    "$ref": "#/$defs/SequenceArg"
                },
                {
                    "$ref": "#/$defs/ExtensionsArg"
                },
                {
                    "$ref": "#/$defs/VariableArg"
                }
            ],
            "title": "TypeArg"
        },
        "TypeBound": {
            "enum": [
                "E",
                "C",
                "A"
            ],
            "title": "TypeBound",
            "type": "string"
        },
        "TypeParam": {
            "description": "A type parameter.",
            "discriminator": {
                "mapping": {
                    "BoundedNat": "#/$defs/BoundedNatParam",
                    "Extensions": "#/$defs/ExtensionsParam",
                    "List": "#/$defs/ListParam",
                    "Opaque": "#/$defs/OpaqueParam",
                    "Tuple": "#/$defs/TupleParam",
                    "Type": "#/$defs/TypeTypeParam"
                },
                "propertyName": "tp"
            },
            "oneOf": [
                {
                    "$ref": "#/$defs/TypeTypeParam"
                },
                {
                    "$ref": "#/$defs/BoundedNatParam"
                },
                {
                    "$ref": "#/$defs/OpaqueParam"
                },
                {
                    "$ref": "#/$defs/ListParam"
                },
                {
                    "$ref": "#/$defs/TupleParam"
                },
                {
                    "$ref": "#/$defs/ExtensionsParam"
                }
            ],
            "title": "TypeParam"
        },
        "TypeTypeArg": {
            "additionalProperties": false,
            "properties": {
                "tya": {
                    "const": "Type",
                    "default": "Type",
                    "enum": [
                        "Type"
                    ],
                    "title": "Tya",
                    "type": "string"
                },
                "ty": {
                    "$ref": "#/$defs/Type"
                }
            },
            "required": [
                "ty"
            ],
            "title": "TypeTypeArg",
            "type": "object"
        },
        "TypeTypeParam": {
            "additionalProperties": false,
            "properties": {
                "tp": {
                    "const": "Type",
                    "default": "Type",
                    "enum": [
                        "Type"
                    ],
                    "title": "Tp",
                    "type": "string"
                },
                "b": {
                    "$ref": "#/$defs/TypeBound"
                }
            },
            "required": [
                "b"
            ],
            "title": "TypeTypeParam",
            "type": "object"
        },
        "USize": {
            "additionalProperties": false,
            "description": "Unsigned integer size type.",
            "properties": {
                "t": {
                    "const": "I",
                    "default": "I",
                    "enum": [
                        "I"
                    ],
                    "title": "T",
                    "type": "string"
                }
            },
            "title": "USize",
            "type": "object"
        },
        "UnitSum": {
            "additionalProperties": false,
            "description": "Simple sum type where all variants are empty tuples.",
            "properties": {
                "s": {
                    "const": "Unit",
                    "default": "Unit",
                    "enum": [
                        "Unit"
                    ],
                    "title": "S",
                    "type": "string"
                },
                "size": {
                    "title": "Size",
                    "type": "integer"
                }
            },
            "required": [
                "size"
            ],
            "title": "UnitSum",
            "type": "object"
        },
        "UnpackTuple": {
            "additionalProperties": false,
            "description": "An operation that packs all its inputs into a tuple.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "input_extensions": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Input Extensions"
                },
                "op": {
                    "const": "UnpackTuple",
                    "default": "UnpackTuple",
                    "enum": [
                        "UnpackTuple"
                    ],
                    "title": "Op",
                    "type": "string"
                },
                "tys": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Tys",
                    "type": "array"
                }
            },
            "required": [
                "parent"
            ],
            "title": "UnpackTuple",
            "type": "object"
        },
        "Value": {
            "description": "A constant Value.",
            "discriminator": {
                "mapping": {
                    "Extension": "#/$defs/ExtensionValue",
                    "Function": "#/$defs/FunctionValue",
                    "Sum": "#/$defs/SumValue",
                    "Tuple": "#/$defs/TupleValue"
                },
                "propertyName": "c"
            },
            "oneOf": [
                {
                    "$ref": "#/$defs/ExtensionValue"
                },
                {
                    "$ref": "#/$defs/FunctionValue"
                },
                {
                    "$ref": "#/$defs/TupleValue"
                },
                {
                    "$ref": "#/$defs/SumValue"
                }
            ],
            "title": "Value"
        },
        "Variable": {
            "additionalProperties": false,
            "description": "A type variable identified by an index into the array of TypeParams.",
            "properties": {
                "t": {
                    "const": "V",
                    "default": "V",
                    "enum": [
                        "V"
                    ],
                    "title": "T",
                    "type": "string"
                },
                "i": {
                    "title": "I",
                    "type": "integer"
                },
                "b": {
                    "$ref": "#/$defs/TypeBound"
                }
            },
            "required": [
                "i",
                "b"
            ],
            "title": "Variable",
            "type": "object"
        },
        "VariableArg": {
            "properties": {
                "tya": {
                    "const": "Variable",
                    "default": "Variable",
                    "enum": [
                        "Variable"
                    ],
                    "title": "Tya",
                    "type": "string"
                },
                "idx": {
                    "title": "Idx",
                    "type": "integer"
                },
                "cached_decl": {
                    "$ref": "#/$defs/TypeParam"
                }
            },
            "required": [
                "idx",
                "cached_decl"
            ],
            "title": "VariableArg",
            "type": "object"
        }
    },
    "additionalProperties": false,
    "description": "A serializable representation of a Hugr Type, SumType, PolyFuncType,\nValue, OpType. Intended for testing only.",
    "properties": {
        "version": {
            "const": "v1",
            "default": "v1",
            "enum": [
                "v1"
            ],
            "title": "Version",
            "type": "string"
        },
        "typ": {
            "anyOf": [
                {
                    "$ref": "#/$defs/Type"
                },
                {
                    "type": "null"
                }
            ],
            "default": null
        },
        "sum_type": {
            "anyOf": [
                {
                    "$ref": "#/$defs/SumType"
                },
                {
                    "type": "null"
                }
            ],
            "default": null
        },
        "poly_func_type": {
            "anyOf": [
                {
                    "$ref": "#/$defs/PolyFuncType"
                },
                {
                    "type": "null"
                }
            ],
            "default": null
        },
        "value": {
            "anyOf": [
                {
                    "$ref": "#/$defs/Value"
                },
                {
                    "type": "null"
                }
            ],
            "default": null
        },
        "optype": {
            "anyOf": [
                {
                    "$ref": "#/$defs/OpType"
                },
                {
                    "type": "null"
                }
            ],
            "default": null
        }
    },
    "title": "TestingHugr",
    "type": "object"
}