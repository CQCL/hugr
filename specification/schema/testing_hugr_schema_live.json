{
    "$defs": {
        "Alias": {
            "additionalProperties": true,
            "description": "An Alias Type.",
            "properties": {
                "t": {
                    "const": "Alias",
                    "default": "Alias",
                    "title": "T",
                    "type": "string"
                },
                "bound": {
                    "$ref": "#/$defs/TypeBound"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                }
            },
            "required": [
                "bound",
                "name"
            ],
            "title": "Alias",
            "type": "object"
        },
        "AliasDecl": {
            "additionalProperties": true,
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "AliasDecl",
                    "default": "AliasDecl",
                    "title": "Op",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "bound": {
                    "$ref": "#/$defs/TypeBound"
                }
            },
            "required": [
                "parent",
                "name",
                "bound"
            ],
            "title": "AliasDecl",
            "type": "object"
        },
        "AliasDefn": {
            "additionalProperties": true,
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "AliasDefn",
                    "default": "AliasDefn",
                    "title": "Op",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "definition": {
                    "$ref": "#/$defs/Type"
                }
            },
            "required": [
                "parent",
                "name",
                "definition"
            ],
            "title": "AliasDefn",
            "type": "object"
        },
        "BoundedNatArg": {
            "additionalProperties": true,
            "properties": {
                "tya": {
                    "const": "BoundedNat",
                    "default": "BoundedNat",
                    "title": "Tya",
                    "type": "string"
                },
                "n": {
                    "title": "N",
                    "type": "integer"
                }
            },
            "required": [
                "n"
            ],
            "title": "BoundedNatArg",
            "type": "object"
        },
        "BoundedNatParam": {
            "additionalProperties": true,
            "properties": {
                "tp": {
                    "const": "BoundedNat",
                    "default": "BoundedNat",
                    "title": "Tp",
                    "type": "string"
                },
                "bound": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Bound"
                }
            },
            "required": [
                "bound"
            ],
            "title": "BoundedNatParam",
            "type": "object"
        },
        "BytesArg": {
            "additionalProperties": true,
            "properties": {
                "tya": {
                    "const": "Bytes",
                    "default": "Bytes",
                    "title": "Tya",
                    "type": "string"
                },
                "value": {
                    "format": "binary",
                    "title": "Value",
                    "type": "string"
                }
            },
            "required": [
                "value"
            ],
            "title": "BytesArg",
            "type": "object"
        },
        "BytesParam": {
            "additionalProperties": true,
            "properties": {
                "tp": {
                    "const": "Bytes",
                    "default": "Bytes",
                    "title": "Tp",
                    "type": "string"
                }
            },
            "title": "BytesParam",
            "type": "object"
        },
        "CFG": {
            "additionalProperties": true,
            "description": "A dataflow node which is defined by a child CFG.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "CFG",
                    "default": "CFG",
                    "title": "Op",
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/$defs/FunctionType"
                }
            },
            "required": [
                "parent"
            ],
            "title": "CFG",
            "type": "object"
        },
        "Call": {
            "additionalProperties": true,
            "description": "Operation to call a function directly. The first port is connected to the def/declare of the function being called directly, with a `Static<FunctionType>` edge. The signature of the remaining ports matches the function being called.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "Call",
                    "default": "Call",
                    "title": "Op",
                    "type": "string"
                },
                "func_sig": {
                    "$ref": "#/$defs/PolyFuncType"
                },
                "type_args": {
                    "items": {
                        "$ref": "#/$defs/TypeArg"
                    },
                    "title": "Type Args",
                    "type": "array"
                },
                "instantiation": {
                    "$ref": "#/$defs/FunctionType"
                }
            },
            "required": [
                "parent",
                "func_sig",
                "type_args",
                "instantiation"
            ],
            "title": "Call",
            "type": "object"
        },
        "CallIndirect": {
            "additionalProperties": true,
            "description": "Call a function indirectly.\n\nLike call, but the first input is a standard dataflow graph type.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "CallIndirect",
                    "default": "CallIndirect",
                    "title": "Op",
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/$defs/FunctionType"
                }
            },
            "required": [
                "parent"
            ],
            "title": "CallIndirect",
            "type": "object"
        },
        "Case": {
            "additionalProperties": true,
            "description": "Case ops - nodes valid inside Conditional nodes.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "Case",
                    "default": "Case",
                    "title": "Op",
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/$defs/FunctionType"
                }
            },
            "required": [
                "parent"
            ],
            "title": "Case",
            "type": "object"
        },
        "Conditional": {
            "additionalProperties": true,
            "description": "Conditional operation, defined by child `Case` nodes for each branch.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "Conditional",
                    "default": "Conditional",
                    "title": "Op",
                    "type": "string"
                },
                "other_inputs": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Other Inputs",
                    "type": "array"
                },
                "outputs": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Outputs",
                    "type": "array"
                },
                "sum_rows": {
                    "description": "The possible rows of the Sum input",
                    "items": {
                        "items": {
                            "$ref": "#/$defs/Type"
                        },
                        "type": "array"
                    },
                    "title": "Sum Rows",
                    "type": "array"
                }
            },
            "required": [
                "parent"
            ],
            "title": "Conditional",
            "type": "object"
        },
        "Const": {
            "additionalProperties": true,
            "description": "A Const operation definition.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "Const",
                    "default": "Const",
                    "title": "Op",
                    "type": "string"
                },
                "v": {
                    "$ref": "#/$defs/Value"
                }
            },
            "required": [
                "parent",
                "v"
            ],
            "title": "Const",
            "type": "object"
        },
        "CustomConst": {
            "additionalProperties": true,
            "properties": {
                "c": {
                    "title": "C",
                    "type": "string"
                },
                "v": {
                    "title": "V"
                }
            },
            "required": [
                "c",
                "v"
            ],
            "title": "CustomConst",
            "type": "object"
        },
        "CustomValue": {
            "additionalProperties": true,
            "description": "An extension constant value, that can check it is of a given [CustomType].",
            "properties": {
                "v": {
                    "const": "Extension",
                    "default": "Extension",
                    "title": "ValueTag",
                    "type": "string"
                },
                "typ": {
                    "$ref": "#/$defs/Type"
                },
                "value": {
                    "$ref": "#/$defs/CustomConst"
                }
            },
            "required": [
                "typ",
                "value"
            ],
            "title": "CustomValue",
            "type": "object"
        },
        "DFG": {
            "additionalProperties": true,
            "description": "A simply nested dataflow graph.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "DFG",
                    "default": "DFG",
                    "title": "Op",
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/$defs/FunctionType"
                }
            },
            "required": [
                "parent"
            ],
            "title": "DFG",
            "type": "object"
        },
        "DataflowBlock": {
            "additionalProperties": true,
            "description": "A CFG basic block node. The signature is that of the internal Dataflow graph.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "DataflowBlock",
                    "default": "DataflowBlock",
                    "title": "Op",
                    "type": "string"
                },
                "inputs": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Inputs",
                    "type": "array"
                },
                "other_outputs": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Other Outputs",
                    "type": "array"
                },
                "sum_rows": {
                    "items": {
                        "items": {
                            "$ref": "#/$defs/Type"
                        },
                        "type": "array"
                    },
                    "title": "Sum Rows",
                    "type": "array"
                }
            },
            "required": [
                "parent",
                "sum_rows"
            ],
            "title": "DataflowBlock",
            "type": "object"
        },
        "ExitBlock": {
            "additionalProperties": true,
            "description": "The single exit node of the CFG, has no children, stores the types of the CFG node output.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "ExitBlock",
                    "default": "ExitBlock",
                    "title": "Op",
                    "type": "string"
                },
                "cfg_outputs": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Cfg Outputs",
                    "type": "array"
                }
            },
            "required": [
                "parent",
                "cfg_outputs"
            ],
            "title": "ExitBlock",
            "type": "object"
        },
        "ExplicitBound": {
            "properties": {
                "b": {
                    "const": "Explicit",
                    "default": "Explicit",
                    "title": "B",
                    "type": "string"
                },
                "bound": {
                    "$ref": "#/$defs/TypeBound"
                }
            },
            "required": [
                "bound"
            ],
            "title": "ExplicitBound",
            "type": "object"
        },
        "Extension": {
            "properties": {
                "version": {
                    "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                    "title": "Version",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "types": {
                    "additionalProperties": {
                        "$ref": "#/$defs/TypeDef"
                    },
                    "title": "Types",
                    "type": "object"
                },
                "operations": {
                    "additionalProperties": {
                        "$ref": "#/$defs/OpDef"
                    },
                    "title": "Operations",
                    "type": "object"
                }
            },
            "required": [
                "version",
                "name",
                "types",
                "operations"
            ],
            "title": "Extension",
            "type": "object"
        },
        "ExtensionOp": {
            "additionalProperties": true,
            "description": "A user-defined operation that can be downcasted by the extensions that define it.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "Extension",
                    "default": "Extension",
                    "title": "Op",
                    "type": "string"
                },
                "extension": {
                    "title": "Extension",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/$defs/FunctionType"
                },
                "args": {
                    "items": {
                        "$ref": "#/$defs/TypeArg"
                    },
                    "title": "Args",
                    "type": "array"
                }
            },
            "required": [
                "parent",
                "extension",
                "name"
            ],
            "title": "ExtensionOp",
            "type": "object"
        },
        "FixedHugr": {
            "properties": {
                "extensions": {
                    "items": {
                        "type": "string"
                    },
                    "title": "Extensions",
                    "type": "array"
                },
                "hugr": {
                    "title": "Hugr",
                    "type": "string"
                }
            },
            "required": [
                "extensions",
                "hugr"
            ],
            "title": "FixedHugr",
            "type": "object"
        },
        "FloatArg": {
            "additionalProperties": true,
            "properties": {
                "tya": {
                    "const": "Float",
                    "default": "Float",
                    "title": "Tya",
                    "type": "string"
                },
                "value": {
                    "title": "Value",
                    "type": "number"
                }
            },
            "required": [
                "value"
            ],
            "title": "FloatArg",
            "type": "object"
        },
        "FloatParam": {
            "additionalProperties": true,
            "properties": {
                "tp": {
                    "const": "Float",
                    "default": "Float",
                    "title": "Tp",
                    "type": "string"
                }
            },
            "title": "FloatParam",
            "type": "object"
        },
        "FromParamsBound": {
            "properties": {
                "b": {
                    "const": "FromParams",
                    "default": "FromParams",
                    "title": "B",
                    "type": "string"
                },
                "indices": {
                    "items": {
                        "type": "integer"
                    },
                    "title": "Indices",
                    "type": "array"
                }
            },
            "required": [
                "indices"
            ],
            "title": "FromParamsBound",
            "type": "object"
        },
        "FuncDecl": {
            "additionalProperties": true,
            "description": "External function declaration, linked at runtime.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "FuncDecl",
                    "default": "FuncDecl",
                    "title": "Op",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/$defs/PolyFuncType"
                }
            },
            "required": [
                "parent",
                "name",
                "signature"
            ],
            "title": "FuncDecl",
            "type": "object"
        },
        "FuncDefn": {
            "additionalProperties": true,
            "description": "A function definition. Children nodes are the body of the definition.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "FuncDefn",
                    "default": "FuncDefn",
                    "title": "Op",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/$defs/PolyFuncType"
                }
            },
            "required": [
                "parent",
                "name",
                "signature"
            ],
            "title": "FuncDefn",
            "type": "object"
        },
        "FunctionType": {
            "additionalProperties": true,
            "description": "A graph encoded as a value. It contains a concrete signature and a set of required resources.",
            "properties": {
                "t": {
                    "const": "G",
                    "default": "G",
                    "title": "T",
                    "type": "string"
                },
                "input": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Input",
                    "type": "array"
                },
                "output": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Output",
                    "type": "array"
                }
            },
            "required": [
                "input",
                "output"
            ],
            "title": "FunctionType",
            "type": "object"
        },
        "FunctionValue": {
            "additionalProperties": true,
            "description": "A higher-order function value.",
            "properties": {
                "v": {
                    "const": "Function",
                    "default": "Function",
                    "title": "ValueTag",
                    "type": "string"
                },
                "hugr": {
                    "title": "Hugr"
                }
            },
            "required": [
                "hugr"
            ],
            "title": "FunctionValue",
            "type": "object"
        },
        "GeneralSum": {
            "additionalProperties": true,
            "description": "General sum type that explicitly stores the types of the variants.",
            "properties": {
                "t": {
                    "const": "Sum",
                    "default": "Sum",
                    "title": "T",
                    "type": "string"
                },
                "s": {
                    "const": "General",
                    "default": "General",
                    "title": "S",
                    "type": "string"
                },
                "rows": {
                    "items": {
                        "items": {
                            "$ref": "#/$defs/Type"
                        },
                        "type": "array"
                    },
                    "title": "Rows",
                    "type": "array"
                }
            },
            "required": [
                "rows"
            ],
            "title": "GeneralSum",
            "type": "object"
        },
        "Input": {
            "additionalProperties": true,
            "description": "An input node. The outputs of this node are the inputs to the parent node.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "Input",
                    "default": "Input",
                    "title": "Op",
                    "type": "string"
                },
                "types": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Types",
                    "type": "array"
                }
            },
            "required": [
                "parent"
            ],
            "title": "Input",
            "type": "object"
        },
        "ListArg": {
            "additionalProperties": true,
            "properties": {
                "tya": {
                    "const": "List",
                    "default": "List",
                    "title": "Tya",
                    "type": "string"
                },
                "elems": {
                    "items": {
                        "$ref": "#/$defs/TypeArg"
                    },
                    "title": "Elems",
                    "type": "array"
                }
            },
            "required": [
                "elems"
            ],
            "title": "ListArg",
            "type": "object"
        },
        "ListParam": {
            "additionalProperties": true,
            "properties": {
                "tp": {
                    "const": "List",
                    "default": "List",
                    "title": "Tp",
                    "type": "string"
                },
                "param": {
                    "$ref": "#/$defs/TypeParam"
                }
            },
            "required": [
                "param"
            ],
            "title": "ListParam",
            "type": "object"
        },
        "LoadConstant": {
            "additionalProperties": true,
            "description": "An operation that loads a static constant in to the local dataflow graph.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "LoadConstant",
                    "default": "LoadConstant",
                    "title": "Op",
                    "type": "string"
                },
                "datatype": {
                    "$ref": "#/$defs/Type"
                }
            },
            "required": [
                "parent",
                "datatype"
            ],
            "title": "LoadConstant",
            "type": "object"
        },
        "LoadFunction": {
            "additionalProperties": true,
            "description": "Load a static function in to the local dataflow graph.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "LoadFunction",
                    "default": "LoadFunction",
                    "title": "Op",
                    "type": "string"
                },
                "func_sig": {
                    "$ref": "#/$defs/PolyFuncType"
                },
                "type_args": {
                    "items": {
                        "$ref": "#/$defs/TypeArg"
                    },
                    "title": "Type Args",
                    "type": "array"
                },
                "instantiation": {
                    "$ref": "#/$defs/FunctionType"
                }
            },
            "required": [
                "parent",
                "func_sig",
                "type_args",
                "instantiation"
            ],
            "title": "LoadFunction",
            "type": "object"
        },
        "Module": {
            "additionalProperties": true,
            "description": "The root of a module, parent of all other `ModuleOp`s.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "Module",
                    "default": "Module",
                    "title": "Op",
                    "type": "string"
                }
            },
            "required": [
                "parent"
            ],
            "title": "Module",
            "type": "object"
        },
        "OpDef": {
            "description": "Serializable definition for dynamically loaded operations.",
            "properties": {
                "extension": {
                    "title": "Extension",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "misc": {
                    "anyOf": [
                        {
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Misc"
                },
                "signature": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PolyFuncType"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "binary": {
                    "default": false,
                    "title": "Binary",
                    "type": "boolean"
                },
                "lower_funcs": {
                    "items": {
                        "$ref": "#/$defs/FixedHugr"
                    },
                    "title": "Lower Funcs",
                    "type": "array"
                }
            },
            "required": [
                "extension",
                "name",
                "description"
            ],
            "title": "OpDef",
            "type": "object"
        },
        "OpType": {
            "description": "A constant operation.",
            "discriminator": {
                "mapping": {
                    "AliasDecl": "#/$defs/AliasDecl",
                    "AliasDefn": "#/$defs/AliasDefn",
                    "CFG": "#/$defs/CFG",
                    "Call": "#/$defs/Call",
                    "CallIndirect": "#/$defs/CallIndirect",
                    "Case": "#/$defs/Case",
                    "Conditional": "#/$defs/Conditional",
                    "Const": "#/$defs/Const",
                    "DFG": "#/$defs/DFG",
                    "DataflowBlock": "#/$defs/DataflowBlock",
                    "ExitBlock": "#/$defs/ExitBlock",
                    "Extension": "#/$defs/ExtensionOp",
                    "FuncDecl": "#/$defs/FuncDecl",
                    "FuncDefn": "#/$defs/FuncDefn",
                    "Input": "#/$defs/Input",
                    "LoadConstant": "#/$defs/LoadConstant",
                    "LoadFunction": "#/$defs/LoadFunction",
                    "Module": "#/$defs/Module",
                    "Output": "#/$defs/Output",
                    "Tag": "#/$defs/Tag",
                    "TailLoop": "#/$defs/TailLoop"
                },
                "propertyName": "op"
            },
            "oneOf": [
                {
                    "$ref": "#/$defs/Module"
                },
                {
                    "$ref": "#/$defs/Case"
                },
                {
                    "$ref": "#/$defs/FuncDefn"
                },
                {
                    "$ref": "#/$defs/FuncDecl"
                },
                {
                    "$ref": "#/$defs/Const"
                },
                {
                    "$ref": "#/$defs/DataflowBlock"
                },
                {
                    "$ref": "#/$defs/ExitBlock"
                },
                {
                    "$ref": "#/$defs/Conditional"
                },
                {
                    "$ref": "#/$defs/TailLoop"
                },
                {
                    "$ref": "#/$defs/CFG"
                },
                {
                    "$ref": "#/$defs/Input"
                },
                {
                    "$ref": "#/$defs/Output"
                },
                {
                    "$ref": "#/$defs/Call"
                },
                {
                    "$ref": "#/$defs/CallIndirect"
                },
                {
                    "$ref": "#/$defs/LoadConstant"
                },
                {
                    "$ref": "#/$defs/LoadFunction"
                },
                {
                    "$ref": "#/$defs/ExtensionOp"
                },
                {
                    "$ref": "#/$defs/Tag"
                },
                {
                    "$ref": "#/$defs/DFG"
                },
                {
                    "$ref": "#/$defs/AliasDecl"
                },
                {
                    "$ref": "#/$defs/AliasDefn"
                }
            ],
            "required": [
                "parent",
                "op"
            ],
            "title": "OpType"
        },
        "Opaque": {
            "additionalProperties": true,
            "description": "An opaque Type that can be downcasted by the extensions that define it.",
            "properties": {
                "t": {
                    "const": "Opaque",
                    "default": "Opaque",
                    "title": "T",
                    "type": "string"
                },
                "extension": {
                    "title": "Extension",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "args": {
                    "items": {
                        "$ref": "#/$defs/TypeArg"
                    },
                    "title": "Args",
                    "type": "array"
                },
                "bound": {
                    "$ref": "#/$defs/TypeBound"
                }
            },
            "required": [
                "extension",
                "id",
                "args",
                "bound"
            ],
            "title": "Opaque",
            "type": "object"
        },
        "Output": {
            "additionalProperties": true,
            "description": "An output node. The inputs are the outputs of the function.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "Output",
                    "default": "Output",
                    "title": "Op",
                    "type": "string"
                },
                "types": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Types",
                    "type": "array"
                }
            },
            "required": [
                "parent"
            ],
            "title": "Output",
            "type": "object"
        },
        "Package": {
            "properties": {
                "modules": {
                    "items": {
                        "$ref": "#/$defs/SerialHugr"
                    },
                    "title": "Modules",
                    "type": "array"
                },
                "extensions": {
                    "items": {
                        "$ref": "#/$defs/Extension"
                    },
                    "title": "Extensions",
                    "type": "array"
                }
            },
            "required": [
                "modules"
            ],
            "title": "Package",
            "type": "object"
        },
        "PolyFuncType": {
            "additionalProperties": true,
            "description": "A polymorphic type scheme, i.e. of a FuncDecl, FuncDefn or OpDef.  (Nodes/operations in the Hugr are not polymorphic.)",
            "properties": {
                "params": {
                    "items": {
                        "$ref": "#/$defs/TypeParam"
                    },
                    "title": "Params",
                    "type": "array"
                },
                "body": {
                    "$ref": "#/$defs/FunctionType"
                }
            },
            "required": [
                "params",
                "body"
            ],
            "title": "PolyFuncType",
            "type": "object"
        },
        "Qubit": {
            "additionalProperties": true,
            "description": "A qubit.",
            "properties": {
                "t": {
                    "const": "Q",
                    "default": "Q",
                    "title": "T",
                    "type": "string"
                }
            },
            "title": "Qubit",
            "type": "object"
        },
        "RowVar": {
            "additionalProperties": true,
            "description": "A variable standing for a row of some (unknown) number of types.\nMay occur only within a row; not a node input/output.",
            "properties": {
                "t": {
                    "const": "R",
                    "default": "R",
                    "title": "T",
                    "type": "string"
                },
                "i": {
                    "title": "I",
                    "type": "integer"
                },
                "b": {
                    "$ref": "#/$defs/TypeBound"
                }
            },
            "required": [
                "i",
                "b"
            ],
            "title": "RowVar",
            "type": "object"
        },
        "SerialHugr": {
            "description": "A serializable representation of a Hugr.",
            "properties": {
                "version": {
                    "description": "Serialisation Schema Version",
                    "title": "Version",
                    "type": "string"
                },
                "nodes": {
                    "items": {
                        "$ref": "#/$defs/OpType"
                    },
                    "title": "Nodes",
                    "type": "array"
                },
                "edges": {
                    "items": {
                        "maxItems": 2,
                        "minItems": 2,
                        "prefixItems": [
                            {
                                "maxItems": 2,
                                "minItems": 2,
                                "prefixItems": [
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                ],
                                "type": "array"
                            },
                            {
                                "maxItems": 2,
                                "minItems": 2,
                                "prefixItems": [
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                ],
                                "type": "array"
                            }
                        ],
                        "type": "array"
                    },
                    "title": "Edges",
                    "type": "array"
                },
                "metadata": {
                    "anyOf": [
                        {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "object"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                },
                "encoder": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "The name of the encoder used to generate the Hugr.",
                    "title": "Encoder"
                },
                "entrypoint": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Entrypoint"
                }
            },
            "required": [
                "version",
                "nodes",
                "edges"
            ],
            "title": "Hugr",
            "type": "object"
        },
        "StringArg": {
            "additionalProperties": true,
            "properties": {
                "tya": {
                    "const": "String",
                    "default": "String",
                    "title": "Tya",
                    "type": "string"
                },
                "arg": {
                    "title": "Arg",
                    "type": "string"
                }
            },
            "required": [
                "arg"
            ],
            "title": "StringArg",
            "type": "object"
        },
        "StringParam": {
            "additionalProperties": true,
            "properties": {
                "tp": {
                    "const": "String",
                    "default": "String",
                    "title": "Tp",
                    "type": "string"
                }
            },
            "title": "StringParam",
            "type": "object"
        },
        "SumType": {
            "discriminator": {
                "mapping": {
                    "General": "#/$defs/GeneralSum",
                    "Unit": "#/$defs/UnitSum"
                },
                "propertyName": "s"
            },
            "oneOf": [
                {
                    "$ref": "#/$defs/UnitSum"
                },
                {
                    "$ref": "#/$defs/GeneralSum"
                }
            ],
            "required": [
                "s"
            ],
            "title": "SumType"
        },
        "SumValue": {
            "additionalProperties": true,
            "description": "A Sum variant For any Sum type where this value meets the type of the variant indicated by the tag.",
            "properties": {
                "v": {
                    "const": "Sum",
                    "default": "Sum",
                    "title": "ValueTag",
                    "type": "string"
                },
                "tag": {
                    "title": "Tag",
                    "type": "integer"
                },
                "typ": {
                    "$ref": "#/$defs/SumType"
                },
                "vs": {
                    "items": {
                        "$ref": "#/$defs/Value"
                    },
                    "title": "Vs",
                    "type": "array"
                }
            },
            "required": [
                "tag",
                "typ",
                "vs"
            ],
            "title": "SumValue",
            "type": "object"
        },
        "Tag": {
            "additionalProperties": true,
            "description": "An operation that creates a tagged sum value from one of its variants.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "Tag",
                    "default": "Tag",
                    "title": "Op",
                    "type": "string"
                },
                "tag": {
                    "title": "Tag",
                    "type": "integer"
                },
                "variants": {
                    "items": {
                        "items": {
                            "$ref": "#/$defs/Type"
                        },
                        "type": "array"
                    },
                    "title": "Variants",
                    "type": "array"
                }
            },
            "required": [
                "parent",
                "tag",
                "variants"
            ],
            "title": "Tag",
            "type": "object"
        },
        "TailLoop": {
            "additionalProperties": true,
            "description": "Tail-controlled loop.",
            "properties": {
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "op": {
                    "const": "TailLoop",
                    "default": "TailLoop",
                    "title": "Op",
                    "type": "string"
                },
                "just_inputs": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Just Inputs",
                    "type": "array"
                },
                "just_outputs": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Just Outputs",
                    "type": "array"
                },
                "rest": {
                    "items": {
                        "$ref": "#/$defs/Type"
                    },
                    "title": "Rest",
                    "type": "array"
                }
            },
            "required": [
                "parent"
            ],
            "title": "TailLoop",
            "type": "object"
        },
        "TestingHugr": {
            "additionalProperties": true,
            "description": "A serializable representation of a Hugr Type, SumType, PolyFuncType,\nValue, OpType. Intended for testing only.",
            "properties": {
                "version": {
                    "description": "Serialisation Schema Version",
                    "title": "Version",
                    "type": "string"
                },
                "typ": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Type"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "sum_type": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/SumType"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "poly_func_type": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PolyFuncType"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "value": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Value"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "optype": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/OpType"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "op_def": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/OpDef"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                }
            },
            "title": "TestingHugr",
            "type": "object"
        },
        "TupleArg": {
            "additionalProperties": true,
            "properties": {
                "tya": {
                    "const": "Tuple",
                    "default": "Tuple",
                    "title": "Tya",
                    "type": "string"
                },
                "elems": {
                    "items": {
                        "$ref": "#/$defs/TypeArg"
                    },
                    "title": "Elems",
                    "type": "array"
                }
            },
            "required": [
                "elems"
            ],
            "title": "TupleArg",
            "type": "object"
        },
        "TupleParam": {
            "additionalProperties": true,
            "properties": {
                "tp": {
                    "const": "Tuple",
                    "default": "Tuple",
                    "title": "Tp",
                    "type": "string"
                },
                "params": {
                    "items": {
                        "$ref": "#/$defs/TypeParam"
                    },
                    "title": "Params",
                    "type": "array"
                }
            },
            "required": [
                "params"
            ],
            "title": "TupleParam",
            "type": "object"
        },
        "TupleValue": {
            "additionalProperties": true,
            "description": "A constant tuple value.",
            "properties": {
                "v": {
                    "const": "Tuple",
                    "default": "Tuple",
                    "title": "ValueTag",
                    "type": "string"
                },
                "vs": {
                    "items": {
                        "$ref": "#/$defs/Value"
                    },
                    "title": "Vs",
                    "type": "array"
                }
            },
            "required": [
                "vs"
            ],
            "title": "TupleValue",
            "type": "object"
        },
        "Type": {
            "description": "A HUGR type.",
            "discriminator": {
                "mapping": {
                    "Alias": "#/$defs/Alias",
                    "G": "#/$defs/FunctionType",
                    "I": "#/$defs/USize",
                    "Opaque": "#/$defs/Opaque",
                    "Q": "#/$defs/Qubit",
                    "R": "#/$defs/RowVar",
                    "Sum": "#/$defs/SumType",
                    "V": "#/$defs/Variable"
                },
                "propertyName": "t"
            },
            "oneOf": [
                {
                    "$ref": "#/$defs/Qubit"
                },
                {
                    "$ref": "#/$defs/Variable"
                },
                {
                    "$ref": "#/$defs/RowVar"
                },
                {
                    "$ref": "#/$defs/USize"
                },
                {
                    "$ref": "#/$defs/FunctionType"
                },
                {
                    "$ref": "#/$defs/SumType"
                },
                {
                    "$ref": "#/$defs/Opaque"
                },
                {
                    "$ref": "#/$defs/Alias"
                }
            ],
            "required": [
                "t"
            ],
            "title": "Type"
        },
        "TypeArg": {
            "description": "A type argument.",
            "discriminator": {
                "mapping": {
                    "BoundedNat": "#/$defs/BoundedNatArg",
                    "Bytes": "#/$defs/BytesArg",
                    "Float": "#/$defs/FloatArg",
                    "List": "#/$defs/ListArg",
                    "String": "#/$defs/StringArg",
                    "Tuple": "#/$defs/TupleArg",
                    "Type": "#/$defs/TypeTypeArg",
                    "Variable": "#/$defs/VariableArg"
                },
                "propertyName": "tya"
            },
            "oneOf": [
                {
                    "$ref": "#/$defs/TypeTypeArg"
                },
                {
                    "$ref": "#/$defs/BoundedNatArg"
                },
                {
                    "$ref": "#/$defs/StringArg"
                },
                {
                    "$ref": "#/$defs/BytesArg"
                },
                {
                    "$ref": "#/$defs/FloatArg"
                },
                {
                    "$ref": "#/$defs/ListArg"
                },
                {
                    "$ref": "#/$defs/TupleArg"
                },
                {
                    "$ref": "#/$defs/VariableArg"
                }
            ],
            "required": [
                "tya"
            ],
            "title": "TypeArg"
        },
        "TypeBound": {
            "enum": [
                "C",
                "A"
            ],
            "title": "TypeBound",
            "type": "string"
        },
        "TypeDef": {
            "properties": {
                "extension": {
                    "title": "Extension",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "params": {
                    "items": {
                        "$ref": "#/$defs/TypeParam"
                    },
                    "title": "Params",
                    "type": "array"
                },
                "bound": {
                    "$ref": "#/$defs/TypeDefBound"
                }
            },
            "required": [
                "extension",
                "name",
                "description",
                "params",
                "bound"
            ],
            "title": "TypeDef",
            "type": "object"
        },
        "TypeDefBound": {
            "discriminator": {
                "mapping": {
                    "Explicit": "#/$defs/ExplicitBound",
                    "FromParams": "#/$defs/FromParamsBound"
                },
                "propertyName": "b"
            },
            "oneOf": [
                {
                    "$ref": "#/$defs/ExplicitBound"
                },
                {
                    "$ref": "#/$defs/FromParamsBound"
                }
            ],
            "title": "TypeDefBound"
        },
        "TypeParam": {
            "description": "A type parameter.",
            "discriminator": {
                "mapping": {
                    "BoundedNat": "#/$defs/BoundedNatParam",
                    "Bytes": "#/$defs/BytesParam",
                    "Float": "#/$defs/FloatParam",
                    "List": "#/$defs/ListParam",
                    "String": "#/$defs/StringParam",
                    "Tuple": "#/$defs/TupleParam",
                    "Type": "#/$defs/TypeTypeParam"
                },
                "propertyName": "tp"
            },
            "oneOf": [
                {
                    "$ref": "#/$defs/TypeTypeParam"
                },
                {
                    "$ref": "#/$defs/BoundedNatParam"
                },
                {
                    "$ref": "#/$defs/StringParam"
                },
                {
                    "$ref": "#/$defs/FloatParam"
                },
                {
                    "$ref": "#/$defs/BytesParam"
                },
                {
                    "$ref": "#/$defs/ListParam"
                },
                {
                    "$ref": "#/$defs/TupleParam"
                }
            ],
            "required": [
                "tp"
            ],
            "title": "TypeParam"
        },
        "TypeTypeArg": {
            "additionalProperties": true,
            "properties": {
                "tya": {
                    "const": "Type",
                    "default": "Type",
                    "title": "Tya",
                    "type": "string"
                },
                "ty": {
                    "$ref": "#/$defs/Type"
                }
            },
            "required": [
                "ty"
            ],
            "title": "TypeTypeArg",
            "type": "object"
        },
        "TypeTypeParam": {
            "additionalProperties": true,
            "properties": {
                "tp": {
                    "const": "Type",
                    "default": "Type",
                    "title": "Tp",
                    "type": "string"
                },
                "b": {
                    "$ref": "#/$defs/TypeBound"
                }
            },
            "required": [
                "b"
            ],
            "title": "TypeTypeParam",
            "type": "object"
        },
        "USize": {
            "additionalProperties": true,
            "description": "Unsigned integer size type.",
            "properties": {
                "t": {
                    "const": "I",
                    "default": "I",
                    "title": "T",
                    "type": "string"
                }
            },
            "title": "USize",
            "type": "object"
        },
        "UnitSum": {
            "additionalProperties": true,
            "description": "Simple sum type where all variants are empty tuples.",
            "properties": {
                "t": {
                    "const": "Sum",
                    "default": "Sum",
                    "title": "T",
                    "type": "string"
                },
                "s": {
                    "const": "Unit",
                    "default": "Unit",
                    "title": "S",
                    "type": "string"
                },
                "size": {
                    "title": "Size",
                    "type": "integer"
                }
            },
            "required": [
                "size"
            ],
            "title": "UnitSum",
            "type": "object"
        },
        "Value": {
            "description": "A constant Value.",
            "discriminator": {
                "mapping": {
                    "Extension": "#/$defs/CustomValue",
                    "Function": "#/$defs/FunctionValue",
                    "Sum": "#/$defs/SumValue",
                    "Tuple": "#/$defs/TupleValue"
                },
                "propertyName": "v"
            },
            "oneOf": [
                {
                    "$ref": "#/$defs/CustomValue"
                },
                {
                    "$ref": "#/$defs/FunctionValue"
                },
                {
                    "$ref": "#/$defs/TupleValue"
                },
                {
                    "$ref": "#/$defs/SumValue"
                }
            ],
            "required": [
                "v"
            ],
            "title": "Value"
        },
        "Variable": {
            "additionalProperties": true,
            "description": "A type variable identified by an index into the array of TypeParams.",
            "properties": {
                "t": {
                    "const": "V",
                    "default": "V",
                    "title": "T",
                    "type": "string"
                },
                "i": {
                    "title": "I",
                    "type": "integer"
                },
                "b": {
                    "$ref": "#/$defs/TypeBound"
                }
            },
            "required": [
                "i",
                "b"
            ],
            "title": "Variable",
            "type": "object"
        },
        "VariableArg": {
            "additionalProperties": true,
            "properties": {
                "tya": {
                    "const": "Variable",
                    "default": "Variable",
                    "title": "Tya",
                    "type": "string"
                },
                "idx": {
                    "title": "Idx",
                    "type": "integer"
                },
                "cached_decl": {
                    "$ref": "#/$defs/TypeParam"
                }
            },
            "required": [
                "idx",
                "cached_decl"
            ],
            "title": "VariableArg",
            "type": "object"
        }
    },
    "title": "HUGR schema"
}